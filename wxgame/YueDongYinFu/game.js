	define("game.js", function(require, module, exports){ 			
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 115);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SELECT_PANEL;

var _buff = __webpack_require__(58);

var _buff2 = _interopRequireDefault(_buff);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var W = 414;
var H = 736;

var info = wx.getSystemInfoSync();
console.log(info);

var DOMAIN = 'https://mp.weixin.qq.com/wxagame';
exports.default = {
  PLATFORM: info.platform,
  STAR_RATE: [0.2, 0.5, 1],
  URL: {
    CDN: 'https://wxamusic.wx.qq.com/wxagame/getgamemusic/',
    //CDN: 'https://res.wx.qq.com/wxagame/getgamemusic/',
    SOCKET: 'wss://wxagame.weixin.qq.com/game/',
    LOGIN: function LOGIN(code, appid) {
      return DOMAIN + '/wxagame_login?code=' + code + '&appid=' + appid;
    },
    GET_USER_INFO: DOMAIN + '/wxagame_getuserinfo',

    GET_FRIENDS_SCORE: DOMAIN + '/wxagame_getfriendsscore',
    GET_MUSIC_LIST: DOMAIN + '/wxagame_getmusiclist',
    SETTLEMENT: DOMAIN + '/wxagame_settlement',
    GET_MUSIC_META: DOMAIN + '/wxagame_getmusicmeta',
    CREATE_GAME: DOMAIN + '/wxagame_creategame',
    QUIT_GAME: DOMAIN + '/wxagame_quitgame',
    SYNC_CMD: DOMAIN + '/wxagame_syncop'
  },
  SOCKET_CMD: {
    JOIN_GAME: 101,
    UPLOAD_CMD: 102,
    RECEIVE_CMD: 102,
    HEARTBEAT: 104,
    CONFIRM_CMD: 106,
    QUIT: 107,
    SYNC_AUDIENCE: 108,
    WITNESS_QUIT: 109
  },
  SYNC_CMD: {
    READY: 0,
    START: 1,
    UP: 2,
    DOWN: 3,
    COIN: 4,
    MISS_COIN: 5,
    OBS: 6,
    END: 7,
    IDEL: 8,
    PERFECT_COIN: 9,
    GOOD_COIN: 10
  },
  NETWORK_EVENT: {
    WITNESS_JOIN: 'witness-join',
    JOIN_ERROR: 'join-error',
    SYNC_CMDS: 'sync-cmds',
    SYNC_CMD: 'sync-cmd',
    LIVE_START: 'live-start',
    LIVE_OVER: 'live-over',
    LIVE_END: 'live-end',
    UPDATE_USER_INFO: 'update-user-info',
    GET_USER_INFO_FAIL: 'get-user-info-fail',
    LOGIN_FAIL: 'login-fail'
  },
  LIVE_STATE: {
    RUNNING: 0,
    END: 1,
    LEAVE: 2,
    PREPARE: 3
  },
  LIVE_DELAY: 2000,
  UPLOAD_CONFIRM_TIME: 500,
  HEARTBEAT_INTERVAL: 90 * 1000,
  IDEL_INTERVAL: 1 * 1000,
  USER_INFO_OUT_OF_DATE_TIME: 24 * 60 * 60 * 1000,
  SESSION_OUT_OF_DATE_TIME: 6 * 24 * 60 * 60 * 1000,
  LOGIN_RETRY_INTERVAL: 1000,
  NETWORK_RETRY_INTERVAL: 1000,

  NO_DEAD: false,
  GO_DIE: false,
  UNLOCK: false,

  LEVEL_COLOR: ['#4FB5C6', '#BF782D', '#95DB51', '#FFD026', '#9E6AFF'],
  PATH_EFFECT_COLOR: ['#192999', '#FFA400', '#00FF1C', '#EBB610', '#8C10EB'],
  PATH_EFFECT_ALPHA: 0.77,
  PATH_EFFECT_WIDTH: 7,

  LEVEL_CIRCLE_COLOR: ['rgba(74,131,141,1)', 'rgba(150,109,65,1)', 'rgba(88,131,83,1)', 'rgba(192,179,124,1)', 'rgba(93,78,121,1)'],

  LEVEL_TEXT_COLOR: ['rgba(79,181,198,1)', 'rgba(191,120,45,1)', 'rgba(134,222,100,1)', 'rgba(255,213,47,1)', 'rgba(158,106,255,1)'],

  LEVEL_STAR_COLOR: ['rgba(54,103,111,1)', 'rgba(109,79,47,1)', 'rgba(69,104,59,1)', 'rgba(139,129,93,1)', 'rgba(68,55,98,1)'],

  LEVEL_STAR: [[166, 652, 60], [146, 756, 40], [251, 756, 40], [524, 183, 60], [650, 94, 60], [700, 158, 84], [783, 262, 60]],

  SCORE_LIMIT: [0.5, 0.55, 0.6, 0.65, 1],

  STORAGE_KEY: {
    SONG_FILE_PREFIX: 'song_file_',
    SONG_FILES_INFO: 'song_files_info',
    USER_INFO: 'user_info',
    SESSION: 'session',
    MUSIC_LIST: 'music_list',
    MUSIC_META_PREFIX: 'music_meta_',
    MY_SCORES: 'my_scores',
    FRIENDS_SCORE_PREIDX: 'firends_score_'
  },
  MAX_FILE_SIZE: 10 * 1024 * 1024,

  SCREEN_WIDTH: info.screenWidth * 3,
  SCREEN_HEIGHT: info.screenHeight * 3,

  BASE_SCREEN_WIDTH: W,
  BASE_SCREEN_HEIGHT: H,
  TITLE_HEIGHT: 150,

  BUFF: _buff2.default,

  BUFF_DURATION: {
    DEFAULT: 10000,
    X2: 10000,
    SHIELD: 15000
  },

  BUFF_PANEL: {
    ICON: {
      RADIUS: 80,
      Y: 30
    },
    RING: {
      X: 50,
      Y: 430,
      RADIUS: 20
    }
  },

  // 假音符,吃到生成障碍物
  FAKE_NOTE: {
    PREV_NOTE_TIME: 0.5, // 距前面真音符的距离，单位s
    NEXT_NOTE_TIME: 0.5,
    REACTION_TIME: 0.7,
    OBSTACLE_INTERVAL: 0.18, // 障碍物间隔，单位s
    OBSTACLE_NUMBERS: 3
  },

  LOADING_UPDATE_INTERVAL: 3,
  BALL_RADIUS: [23 / 2, 27 / 2, 29 / 2, 30 / 2, 33 / 2, 35 / 2, 36 / 2, 37 / 2],
  BALL_ORBIT_RADIUS: 110,

  SETTING_ICON: {
    // RADIUS: 60,
    BACKGROUND_COLOR: 'rgba(61,62,71,0.59)',
    SIZE: 120,
    X: 562,
    Y: 2030
  },

  SETTING_PANEL: {
    BUTTONS: [{
      X: 293,
      Y: 1988,
      WIDTH: 169,
      HEIGHT: 169,
      ASSET: 'accept'
    }, {
      X: 780,
      Y: 1988,
      WIDTH: 169,
      HEIGHT: 169,
      ASSET: 'cancel'
    }],
    LINE: {
      COLOR: '#DA572C',
      WIDTH: 3,
      LENGTH: 10,
      MARGIN: 10
    },
    SLIDER_BALL: {
      X: 1094,
      OUTER_RADIUS: 43,
      OUTER_COLOR: '#FFFFFF',
      INNER_RADIUS: 18,
      INNER_COLOR: '#DA572C'
    },
    SLIDER_BAR: {
      X: 1126,
      WIDTH: 20,
      BORDER_RADIUS: 10,
      COLOR: '#DA572C'
    },
    SLIDER: {
      MIN: -500,
      MAX: 500,
      TICK: 50
    },
    VALUE: {
      X: 54,
      Y: 18,
      HEIGHT: 64
    }
  },

  LEADER_BOARD: {
    COLOR: 'rgba(79,181,198,1)',
    LEADERBOARD: {
      X: 97,
      Y: 316,
      WIDTH: 1048,
      HEIGHT: 1522,
      RADIUS: 30
    },
    ITEM: {
      WIDTH: 939,
      HEIGHT: 150
    },
    RANK: {
      WIDTH: 148
    },
    AVATAR: {
      RADIUS: 109
    },
    NICKNAME: {
      X: 26,
      WIDTH: 400
    },
    SCORE: {
      WIDTH: 187
    },
    CLOSE: {
      WIDTH: 80,
      Y: 1961
    },
    CHAMPION: {
      X: 44,
      WIDTH: 62,
      HEIGHT: 56
    }
  },
  END_PANEL: {
    COLOR: 'rgba(79,181,198,1)',
    SONG_TITLE: {
      Y: 163
    },
    SONG_TITLE_SIZE: 64,
    STARS: {
      Y: 275,
      RADIUS: 72
    },
    STARS_X: [483, 585, 687],
    STAR_DELTA: 3,
    STAR_FRAMES: 30,
    SCOREBOARD: {
      Y: 431,
      WIDTH: 1048,
      HEIGHT: 880,
      RADIUS: 30
    },
    BOARD_GAP: {
      X: 70,
      WIDTH: 15,
      HEIGHT: 100
    },
    BG: {
      Y: 70,
      WIDTH: 930,
      HEIGHT: 270
    },
    BOARD_COLOR: 'rgba(61,62,71,0.59)',

    SCORE: {
      Y: 573,
      RADIUS: 120,
      HEIGHT: 168,
      COLOR: '#FFFFFF'
    },

    BEST_SCORE: {
      Y: 729,
      RADIUS: 42,
      HEIGHT: 59
    },

    NEW: {
      X: -9,
      Y: 533,
      WIDTH: 95,
      HEIGHT: 64,
      COLOR: '#FF4C25'
    },

    SCORE_ITEM: {
      X: 260,
      Y: 1458,
      SIZE: 64,
      HEIGHT: 90,
      WIDTH: 250
    },
    SCORE_ITEM_DESC: {
      SIZE: 42,
      Y: 1553,
      HEIGHT: 59
    },
    SCORE_ITEM_MARGIN: {
      WIDTH: 360
    },

    SUBITEM: {
      WIDTH: 250,
      Y: 70
    },
    SUBITEM_DESC: {
      Y: 596,
      SIZE: 42
    },
    SCORE_BOARD_SUBITEM_SIZE: 64,

    EXPAND_BUTTON: {
      X: 587,
      Y: 1238,
      WIDTH: 73,
      HEIGHT: 21
    },

    LEADERBOARD: {
      Y: 1410,
      WIDTH: 1048,
      HEIGHT: 287,
      RADIUS: 30
    },

    LEADERBOARD_ITEM: {
      WIDTH: 939,
      HEIGHT: 160,
      Y: 40
    },

    LEADERBOARD_ITEM_BASE_Y: {
      Y: 400
    },

    UP_ICON: {
      X: 55,
      Y: 21,
      WIDTH: 44,
      HEIGHT: 54
    },
    LEADERBOARD_RANK: {
      WIDTH: 148
    },
    LEADERBOARD_AVATAR: {
      RADIUS: 110
    },
    LEADERBOARD_NICKNAME: {
      X: 26,
      WIDTH: 369
    },
    LEADERBOARD_SCORE: {
      WIDTH: 187
    },

    BUTTON_Y: 1869,
    BUTTON_WIDTH: 128,
    BUTTON_WORDING_WIDTH: 200,
    BUTTON_WORDING_MARGIN_TOP: 20,

    BUTTONS: [{
      X: 97,
      Y: 1884,
      WIDTH: 180,
      HEIGHT: 180,
      ASSET: 'home'
    }, {
      X: 366,
      Y: 1869,
      WIDTH: 210,
      HEIGHT: 210,
      ASSET: 'share'
    }, {
      X: 666,
      Y: 1869,
      WIDTH: 210,
      HEIGHT: 210,
      ASSET: 'next'
    }, {
      X: 965,
      Y: 1884,
      WIDTH: 180,
      HEIGHT: 180,
      ASSET: 'restart'
    }],

    BUTTON_TEXT: {
      Y: 2081
    },

    BUTTONS_SHARE_TIP: {
      X: 567,
      Y: 1939,
      WIDTH: 110
    }
  },
  BALL: {
    SIZE: 106.1 / 2,
    MAGNET_RADIUS: 200,
    SHIELD_SIZE: 200,
    HEIGHT: 106.1 * 1.5 / 2,
    COLOR: '#FFFFFF',
    HIT_COLOR: '255, 0, 255',
    HIT_TIME: 1000,
    FLICKER_COLOR: 'rgba(255, 53, 228, 0.66)',
    FLICKER_COLOR_END: 'rgba(255, 53, 228, 0)',
    MOUTH_RADIUS_MAX: 90,
    MOUTH_RADIUS_MIN: 6,
    DELTA: 3
  },

  RUN_VEC: 0.8, // pixel / millisecond
  MIN_LINE_WIDTH: 3,
  MAX_LINE_WIDTH: 3,
  LINE_D_WIDTH: 0.05,
  BACKGROUND_D_HUE: 0.1,
  LINE_COLOR: '#4FB5C6',
  BACKGROUND_LINE_COLOR: 'rgba(79,181,198, 0.2)',
  PARTICLE: {
    FRAME_PRE_NUMBER: 8,
    COLOR: '#4FB5C6',
    TIME: 1500,
    SIZE: 30
  },
  // BACKGROUND_COLOR: '80%, 40%, 0.8',
  TOUCH_EVENT: {
    START: 0,
    MOVE: 1,
    END: 2
  },
  CMD: {
    NONE: 0,
    TAP: 1,
    LONG_TAP: 2,
    UP: 3,
    DOWN: 4
  },
  STATE: {
    NONE: 0,
    JUMPING: 1,
    SWITCHING: 2,
    COLORING: 3,
    HAVE_ONE_LONG_JUMP: 4
  },
  SWITCH_TIME: 150, //ms

  GEN_TIME: 150,

  JUMP_TIME: 400, //一上一下的持续时间
  JUMP_HEIGHT: 160, //跳起的最大高度

  LONG_JUMP_INTERVAL: 600, //长按跳跃时在顶点的持续时间

  GAME_EVENT: {
    WORLD_CREATED: 'world-created',
    // audio can play
    GAME_READY: 'game-event-ready',
    // dead or complete
    GAME_END: 'game-event-end',
    // unused
    GAME_START: 'game-event-start',
    // unused
    GAME_RESTART: 'game-event-restart',
    // audio can play -> click start button, GAME_END -> click to restart
    GAME_PRELOAD: 'game-event-preload',
    // background path 90%
    GAME_PATH_END: 'game-event-path-end',
    // game pause
    GAME_PAUSE: 'game-event-pause',
    // back to select panel
    GAME_REPICK: 'game-event-repick',
    // reset setting panel
    GAME_SETTING_RESET: 'game-event-setting-reset',
    GAME_SETTING_RUN: 'game-event-setting-run',
    LIVE_START: 'game-event-live-start',
    LIVE_END: 'game-event-live-end',
    COLOR_CHANGED: 'game-event-color-changed'
  },

  GAME_MODE: {
    REAL: 0,
    BACKGROUND: 1,
    ADJUST: 2,
    LIVE: 3,
    PLAYING_DEAD_ANIMATION: 4
  },

  UI_RES: {
    TAP: 'assets/tap.png',
    EARPHONE: 'assets/earphone.png',
    COLOR_BG: 'assets/color_bg.png',
    NEW: 'assets/new.png',
    DEFAULT_AVATAR: 'assets/default_avatar.jpg',
    DEF: 'assets/def.png',
    CONTINUE: 'assets/continue.png',
    NOTE: 'assets/note.png',
    UP: 'assets/up.png',
    SHIELD: 'assets/shield.png',
    MAGNET: 'assets/magnet.png',
    X2: 'assets/x2.png',
    SETTING: 'assets/setting.png',
    ACCEPT: 'assets/accept.png',
    CANCEL: 'assets/cancel.png',
    STAR_UNKINDLED: 'assets/star_unkindled.png',
    SHARE_TIP: 'assets/share_tip.png',
    CHAMPION: 'assets/champion.png',
    LIST: 'assets/list.png',
    LIST_HIGHLIGHT: 'assets/list_highlight.png',
    SCORE_STAR_UNKINDLED: 'assets/score_star_unkindled.png',
    EXPAND_LEADERBOARD: 'assets/expand_leaderboard.png',
    // SONG_BACKGROUND: 'assets/song_background.png',
    SONG_BACKGROUND: 'assets/new_background.png',
    INVITED: 'assets/invited.png',
    NOTE_MISSED: 'assets/note_miss.png',
    GOOD: 'assets/good.png',
    PERFECT: 'assets/perfect.png',
    MISS: 'assets/miss.png',
    RESTART: 'assets/restart.png',
    HOME: 'assets/home.png',
    FOG: 'assets/fog.png',
    // SHARE: 'assets/share.png',
    //START_BUTTON: 'http://139.199.73.145/tapMusic/assets/tap_white.png',
    //NOTE: 'http://139.199.73.145/tapMusic/assets/note.png',
    //RESTART_BUTTON: 'http://139.199.73.145/tapMusic/assets/undo.png',
    RIGHT: {
      NUMBER: 5,
      PATH: 'assets/right'
    },
    LEFT: {
      NUMBER: 5,
      PATH: 'assets/left'
    },
    HEART: {
      NUMBER: 11,
      PATH: 'assets/heart'
    },
    WITNESS: {
      NUMBER: 5,
      PATH: 'assets/witness'
    },
    STOP: {
      NUMBER: 5,
      PATH: 'assets/stop'
    },
    STAR: {
      NUMBER: 5,
      PATH: 'assets/star'
    },
    SHARE: {
      NUMBER: 5,
      PATH: 'assets/share'
    },
    NEXT: {
      NUMBER: 5,
      PATH: 'assets/next'
    },
    CLOSE: {
      NUMBER: 5,
      PATH: 'assets/close'
    },
    EXPAND: {
      NUMBER: 5,
      PATH: 'assets/expand'
    },
    LOCK: {
      NUMBER: 5,
      PATH: 'assets/lock'
    },
    CIRCLE: {
      NUMBER: 5,
      PATH: 'assets/circle'
    },
    BORDER: {
      NUMBER: 5,
      PATH: 'assets/border'
    },
    SCORE_STAR: {
      NUMBER: 5,
      PATH: 'assets/score_star'
    },
    COMBO: {
      NUMBER: 4,
      PATH: 'assets/combo'
    },
    LEVEL_NOTE: {
      NUMBER: 5,
      PATH: 'assets/note'
    },
    RANDOM_NOTE: {
      NUMBER: 6,
      PATH: 'assets/note_color'
    }
    //COMBO20: 'assets/combo20.png'
  },

  STOP: {
    X: 1084,
    Y: 2067,
    WIDTH: 78,
    HEIGHT: 79
  },

  SONG_LIST: {
    MARGIN_TOP: 150,
    WIDTH: 275,
    HEIGHT: 100
  },

  MIN_LINE_DURATION: 5,

  PRELOAD_RATIO: 0.7,

  // 生成60s的随机线条背景
  BACKGROUND_LINE_DURATION: 60,

  START_BUTTON_SIZE: 200,

  COIN_COLOR: ['#f44336', '#E91E63', '#9C27B0', '#673AB7', '#3F51B5', '#2196F3', '#03A9F4', '#00BCD4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'],
  COIN: {
    SIZE: 30,
    COLOR: '#4FB5C6',
    MISS_COLOR: '#515151'
  },
  COIN_PARTICLE: {
    TIME: 1500,
    MIN_SIZE: 5,
    MAX_SIZE: 15,
    VEC: 0.5,
    NUMBER: 5
  },
  COIN_SCORE: 1,

  PREPARATION_DURATION: 3 * 1000,

  COIN_HEART: 1,
  OBS_HEART: 10,
  HEART_NUMBER: 30,
  HEART_TOP: 106,
  HEART_LEFT: 477,
  HEART_WIDTH: 55,
  HEART_HEIGHT: 47,
  HEART_MARGIN: 64,

  BACKGROUND_ALPHA: 0.2,
  PATH_WIDTH: 3,

  LIFE_BAR: {
    BAR: {
      X: 60,
      Y: 88,
      WIDTH: 200,
      HEIGHT: 18
    },
    ICON: {
      X: 0,
      Y: 45,
      RADIUS: 39
    },
    BACKGROUND_COLOR: 'rgba(63,66,73,1)',
    COLOR: 'rgba(218,87,44,1)'
  },

  SCORE_BAR: {
    BAR: {
      X: 60,
      Y: 186,
      WIDTH: 350,
      HEIGHT: 18
    },
    BACKGROUND_COLOR: 'rgba(63,66,73,1)',
    TEXT: {
      HEIGHT: 60,
      X: 0,
      Y: 29,
      RADIUS: 42
    },
    COLOR: 'rgba(79,181,198,1)',
    STARS: {
      Y: -10,
      RADIUS: 36
    },
    STARS_X: [84, 208, 332],
    DELTA: 4,
    ANIMATION_FRAMES: 60
  },

  PROGRESS_BAR: {
    BAR: {
      X: 60,
      Y: 286,
      WIDTH: 250,
      HEIGHT: 18
    },
    TEXT: {
      HEIGHT: 60,
      X: 0,
      Y: 29,
      RADIUS: 42
    },
    BACKGROUND_COLOR: 'rgba(63,66,73,1)',
    COLOR: 'rgba(79,181,198,1)'
  },

  SCORE: {
    X: 0,
    Y: 183,
    SIZE: 48,
    LINE_HEIGHT: 67,
    COLOR: '#4FB5C6'
  },

  COMBO_BORDER: [[0, 0, info.screenWidth * 3, 28], [0, info.screenHeight * 3 - 28, info.screenWidth * 3, 28], [0, 28, 28, info.screenHeight * 3 - 28 * 2], [info.screenWidth * 3 - 28, 28, 28, info.screenHeight * 3 - 28 * 2]],
  COMBO_BORDER_ANIMATION: 300,

  SONG_NAME: {
    X: 54,
    Y: 2096,
    SIZE: 48,
    ALPHA: 0.4
  },
  WITNESS: {
    ICON: {
      X: 60,
      Y: 2033,
      WIDTH: 54,
      HEIGHT: 35
    },
    TEXT: {
      X: 133,
      Y: 2016,
      HEIGHT: 67,
      WIDTH: 100,
      RADIUS: 48
    }
  },

  COMBO: {
    X: 0,
    Y: 475,
    SIZE: 48,
    LINE_HEIGHT: 67
  },
  COMBO_NUMBER: {
    X: 0,
    Y: 354,
    SIZE: 100,
    LINE_HEIGHT: 140
  },
  COMBO_ANIMATION_DURATION: 300,
  COMBO_ANIMATION_RATE: 0.6,
  COMBO_COLOR: '#FFFFFF',
  COMBO_HIGH_COLOR: '#D0C514',
  COMBO_HIGH_SCORE: 50,
  COMBO_LOW_SCORE: 20,

  OBS_MIN_GEN_RATE: 0,
  OBS_MAX_GEN_RATE: 0.6,
  OBS_GEN_LEVEL_INC: 0.05,
  TREASURE_DISTANCE: [50, 60, 70, 80, 120],
  TREASURE_RATE: [0.5, 0.4, 0.3, 0.2, 0.02],
  // 障碍物生长动画帧数
  OBS_GROWTH_FRAMES: 30,
  OBS: {
    WIDTH: 30,
    HEIGHT: 180,
    COLOR: '#4FB5C6',
    COLLIDED_COLOR: '#FF0000',
    LINE_WIDTH: 3
  },

  BACKGROUND_COLOR: '#1F2022',

  PAUSE_PANEL: {
    CONTINUE_PANEL: {
      X: 287,
      Y: 729,
      WIDTH: 669,
      HEIGHT: 669,
      RADIUS: 32,
      COLOR: 'rgba(61, 62, 71, 0.59)'
    },
    CONTINUE: {
      X: 589,
      Y: 1001,
      WIDTH: 124,
      HEIGHT: 147
    },
    HOME: {
      X: 414 - 120,
      Y: 1668,
      WIDTH: 240,
      HEIGHT: 240
    },
    RESTART: {
      X: 414 * 2 - 120,
      Y: 1668,
      WIDTH: 240,
      HEIGHT: 240
    },
    HOME_TEXT: {
      X: 335,
      Y: 1978,
      WIDTH: 168,
      SIZE: 42,
      TEXT: '返回主页',
      COLOR: '#4FB5C6'
    },
    RESTART_TEXT: {
      X: 740,
      Y: 1978,
      WIDTH: 168,
      SIZE: 42,
      TEXT: '重新开始',
      COLOR: '#4FB5C6'
    }
  },
  COUNT_DOWN: {
    X: 0,
    Y: 790,
    SIZE: 144,
    COLOR: '#4FB5C6'
  },

  SELECT_PANEL: (_SELECT_PANEL = {
    SELECT_SONG_OFFSET: 50,
    SELECT_SONG_DURATION: 200,
    TITLE: {
      Y: 444,
      SIZE: 64,
      COLOR: '#4FB5C6',
      TEXT: '选择歌曲'
    },
    BACKGROUND_CIRCLE: {
      X: 141,
      RADIUS: 533
      // CIRCLE_RADIUS: 477,
    },
    SLIDE_PAGINATION: {
      TOUCH_RANGE: {
        X: 0,
        Y: 150,
        WIDTH: info.screenWidth * 3,
        HEIGHT: 250
      },
      SONG_CNT: {
        Y: 179
      },
      UNDERLINE: {
        X: 521,
        Y: 404,
        WIDTH: 200,
        HEIGHT: 10
      },
      ITEM_WIDTH: 200,
      ITEM_MARGIN: 38,
      ITEM_Y: 266,
      ITEM_X_BASE: 522,
      PRIMARY_ITEM: {
        SIZE: 72,
        // COLOR: 'rgba(255,255,255,1)',
        ALPHA: 1
        // Y: 266
      },
      SECONDARY_ITEM: {
        // Y: 266,
        SIZE: 48,
        // COLOR: 'rgba(255,255,255,0.35)',
        ALPHA: 0.35
      },
      THIRD_ITEM: {
        // Y: 266,
        SIZE: 48,
        // COLOR: 'rgba(255,255,255,0.1)',
        ALPHA: 0.1
      }
    },
    PAGINATION: {
      SIZE: 111,
      Y: 269,
      FONT_SIZE: 72,
      TITLE_X: 375,
      TITLE_Y: 243,
      TITLE_HEIGHT: 100,
      SUBTITLE_Y: 343,
      SUBTITLE_HEIGHT: 67,
      WIDTH: 468,
      TITLE_COLOR: '#FFFFFF',
      SUBTITLE_COLOR: '#4FB5C6',
      BUTTONS: [{
        X: 264,
        ASSET: 'left'
      }, {
        X: 843,
        ASSET: 'right'
      }]
    },
    LIST_ICON: {
      X: 1021,
      Y: 2030,
      // RADIUS: 60,
      BACKGROUND_COLOR: 'rgba(61,62,71,0.59)',
      HEIGHT: 120
    },
    SONG_LIST: {
      START_Y: 695,
      X: 177,
      WIDTH: 890,
      HEIGHT: 270,
      COLOR: 'rgba(61,62,71, 0.59)',
      BORDER_SIZE: 2,
      BORDER_COLOR: '#4FB4C5',
      RADIUS: 32,

      TITLE_START_Y: 752,
      TITLE_SIZE: 64,
      TITLE_COLOR: '#FFFFFF',

      SONGER_START_Y: 842,
      SONGER_SIZE: 48,
      SONGER_COLOR: 'rgba(255, 255, 255, 0.4)',

      MARGIN: 1077 - 695
    },

    LIST_VIEW: {
      LIST: {
        X: 71,
        Y: 531,
        WIDTH: 1100
      },
      ITEM: {
        RADIUS: 30,
        HEIGHT: 280,
        Y: 30
      },
      TITLE: {
        X: 80,
        Y: 73,
        WIDTH: 600,
        COLOR: 'rgba(63,66,73,1)'
      },
      SUBTITLE: {
        X: 80,
        Y: 140,
        COLOR: 'rgba(79,181,198,1)'
      },
      LIST_ITEM_STAR_X: [781, 863, 945],
      STAR: {
        Y: 110,
        RADIUS: 72
      },
      LOCK: {
        X: 967,
        Y: -4,
        WIDTH: 50,
        HEIGHT: 70
      },
      GRADIENT: {
        Y: 1662,
        WIDTH: info.screenWidth * 3,
        HEIGHT: 380
      },
      GRADIENT_COLOR_START: 'rgba(30,32,34,1)',
      GRADIENT_COLOR_END: 'rgba(56,59,64,0)'
    },

    CIRCLE_MOVE_VEC: 30, // pixel per frame
    CIRCLE_RADIUS: 477,
    CIRCLE_MARGIN: {
      WIDTH: 94
    },
    CIRCLE_COLOR: 'rgba(61,62,71,0.75)',
    CIRCLE_LINE_COLOR: 'rgba(79,181,198,1)',
    CIRCLE_LINE_WIDTH: 2,
    CIRCLE_Y: 626,
    CIRCLES: [-1963, -911, 141, 1193, 2245],
    MOVE_THRESHOLD: 150,
    BORDER_THRESHOLD: 50,
    STARS: {
      STARS_X: [343, 445, 547],
      Y: 948,
      RADIUS: 36
    },
    TAP: {
      Y: 1265,
      HEIGHT: 115
    }
  }, _defineProperty(_SELECT_PANEL, 'TITLE', {
    Y: 1057,
    RADIUS: 72
  }), _defineProperty(_SELECT_PANEL, 'AUTHOR', {
    Y: 1157,
    RADIUS: 48
  }), _defineProperty(_SELECT_PANEL, 'LOCK', {
    X: 443,
    Y: 885,
    WIDTH: 75,
    HEIGHT: 103
  }), _defineProperty(_SELECT_PANEL, 'UNLOCK_TITLE', {
    Y: 1260
  }), _defineProperty(_SELECT_PANEL, 'UNLOCK_DESC', {
    Y: 1327
  }), _defineProperty(_SELECT_PANEL, 'TOUCH_ANIMATION', {
    MIN_RATIO: 0.9,
    DELTA: 0.01
  }), _defineProperty(_SELECT_PANEL, 'AVATAR_AREA', {
    AVATAR_AREA: {
      X: 249 - 8,
      Y: 1713,
      WIDTH: 478,
      RADIUS: 168
    },

    AVATAR: {
      X: 35 + 8,
      Y: 25 + 10,
      RADIUS: 100
    },
    SCORE: {
      X: 206 + 22,
      Y: 42 + 10,
      WIDTH: 150,
      HEIGHT: 68
    },
    SCORE_COLOR: 'rgba(218,87,44,1)',
    CROWN: {
      X: 145 + 22,
      Y: 57 + 10,
      RADIUS: 40
    },
    EXPAND: {
      X: 390 + 8,
      Y: 57 + 10,
      WIDTH: 20,
      HEIGHT: 40
    }
  }), _defineProperty(_SELECT_PANEL, 'INVITATION', {
    BUTTON: {
      X: 111,
      Y: 2030,
      WIDTH: 316,
      HEIGHT: 122
    },
    TEXT: {
      X: 0,
      WIDTH: 316,
      HEIGHT: 122
    },
    INVITED_TEXT: {
      X: 86,
      HEIGHT: 122
    },
    INVITED_ICON: {
      X: 30,
      Y: 46,
      WIDTH: 40,
      HEIGHT: 28
    },
    COLOR: '#FFFFFF',
    FONT_SIZE: 36,
    BACKGROUND_COLOR: '#5C6170'
  }), _SELECT_PANEL),

  LoadingAnimation: {
    WORDING: {
      Y: 700,
      SIZE: 72,
      HEIGHT: 100,
      COLOR: '#FFFFFF'
    }
  },

  LiveWaitingPanel: {
    WAITING: {
      TEXT: '耐心等待一下',
      Y: 753,
      RADIUS: 72,
      HEIGHT: 100
    },
    NOT_START: {
      TEXT: '你的好友还没开始游戏',
      Y: 873,
      RADIUS: 48,
      HEIGHT: 67,
      ALPHA: 0.453
    },
    PLAY: {
      TEXT: '去玩一局',
      X: 931,
      Y: 2073,
      // Y: 2050,
      BORDER_WIDTH: 2,
      // RADIUS: 16,
      WIDTH: 237,
      HEIGHT: 92,
      RADIUS: 36
    }
  },

  LiveLeavePanel: {
    WORDING: {
      TEXT: '你的好友已经离开游戏',
      Y: 753,
      SIZE: 72,
      HEIGHT: 100
    },
    PLAY: {
      TEXT: '去玩一局',
      X: 298,
      TY: 2073,
      Y: 1768,
      BORDER_WIDTH: 2,
      RADIUS: 30,
      WIDTH: 648,
      HEIGHT: 179,
      SIZE: 48
    }
  },

  LiveEndPanel: {
    SONG_NAME: {
      Y: 282,
      SIZE: 64,
      HEIGHT: 90
    },
    STATS: {},
    ROUNDED_RECT: {
      X: 97,
      Y: 633,
      WIDTH: 1048,
      HEIGHT: 879,
      COLOR: '#3D3E47',
      ALPHA: 0.59,
      RADIUS: 30
    },
    SCORE: {
      Y: 702,
      HEIGHT: 168,
      SIZE: 120
    },
    BEST_SCORE: {
      Y: 858,
      HEIGHT: 59,
      SIZE: 42,
      PREFIX: '最佳成绩 '
    },
    AVATAR: {
      Y: 1229,
      WIDTH: 108,
      HEIGHT: 108
    },
    NICK_NAME: {
      Y: 1229,
      HEIGHT: 108,
      SIZE: 42,
      ALPHA: 0.4616
    },
    PLAY: {
      TEXT: '去玩一局',
      X: 298,
      TY: 2073,
      Y: 1768,
      BORDER_WIDTH: 2,
      RADIUS: 30,
      WIDTH: 648,
      HEIGHT: 179,
      SIZE: 48
    }
  },

  TOUCH_EFFECT: {
    RANGE: 30,
    // RATIO: {
    //   MIN: 5,
    //   MAX: 1
    // },
    DURATION: 1000,
    VEC: 4,
    // 十字星
    CROSS: {
      PERIPHERAL: 50,
      INTERNAL: 5
    },
    CROSS_NUMBER: 6,
    CIRCLE: 12,
    CIRCLE_NUMBER: 6,
    CIRCLE_BORDER: 40,
    CIRCLE_BORDER_WIDTH: 3
  },

  DEAD_ANIMATION: {
    PARTICLE_NUMBER: 20,
    DURATION_BASE: 120,
    DURATION_DELTA: 15,
    MIN_VEC: 1,
    MAX_VEC: 3,
    RADIUS_BASE: 15,
    RADIUS_DELTA: 5,
    RANGE: {
      RADIUS: 50
    }
  },

  SOUND_EFFECT: [null, 'assets/do.mp3', 'assets/re.mp3', 'assets/mi.mp3', 'assets/fa.mp3', 'assets/so.mp3', 'assets/la.mp3', 'assets/si.mp3', 'assets/do4.mp3']
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getResultShareImage = exports.getLiveShareImage = exports.createWording = exports.Score = exports.inBackground = exports.generateRing = exports.getScaleRadius = exports.getScaleWidth = exports.getScaleHeight = exports.getScaleArgs = exports.drawRoundedRect = exports.createTextSprite = exports.alphaColor = exports.Session = exports.Live = exports.Storage = exports.Network = exports.setSeed = exports.setSeedStr = exports.srandom = exports.random = exports.emitter = exports.Polygon = exports.Circle = exports.Rect = exports.Line = exports.Point = exports.File = undefined;

var _math = __webpack_require__(120);

var _math2 = _interopRequireDefault(_math);

var _emitter = __webpack_require__(34);

var _emitter2 = _interopRequireDefault(_emitter);

var _random = __webpack_require__(38);

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

var _storage = __webpack_require__(18);

var _storage2 = _interopRequireDefault(_storage);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

var _score = __webpack_require__(149);

var _score2 = _interopRequireDefault(_score);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

var _alphaColor = __webpack_require__(116);

var _alphaColor2 = _interopRequireDefault(_alphaColor);

var _spriteHelper = __webpack_require__(150);

var _shareImage = __webpack_require__(30);

var _inBackground = __webpack_require__(118);

var _inBackground2 = _interopRequireDefault(_inBackground);

var _createWording = __webpack_require__(117);

var _createWording2 = _interopRequireDefault(_createWording);

var _file = __webpack_require__(35);

var _file2 = _interopRequireDefault(_file);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Point = _math2.default.Point;
var Line = _math2.default.Line;
var Circle = _math2.default.Circle;
var Rect = _math2.default.Rect;
var Polygon = _math2.default.Polygon;

exports.File = _file2.default;
exports.Point = Point;
exports.Line = Line;
exports.Rect = Rect;
exports.Circle = Circle;
exports.Polygon = Polygon;
exports.emitter = _emitter2.default;
exports.random = _random.random;
exports.srandom = _random.srandom;
exports.setSeedStr = _random.setSeedStr;
exports.setSeed = _random.setSeed;
exports.Network = _network2.default;
exports.Storage = _storage2.default;
exports.Live = _live2.default;
exports.Session = _session2.default;
exports.alphaColor = _alphaColor2.default;
exports.createTextSprite = _spriteHelper.createTextSprite;
exports.drawRoundedRect = _spriteHelper.drawRoundedRect;
exports.getScaleArgs = _spriteHelper.getScaleArgs;
exports.getScaleHeight = _spriteHelper.getScaleHeight;
exports.getScaleWidth = _spriteHelper.getScaleWidth;
exports.getScaleRadius = _spriteHelper.getScaleRadius;
exports.generateRing = _spriteHelper.generateRing;
exports.inBackground = _inBackground2.default;
exports.Score = _score2.default;
exports.createWording = _createWording2.default;
exports.getLiveShareImage = _shareImage.getLiveShareImage;
exports.getResultShareImage = _shareImage.getResultShareImage;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BackgroundSystem = exports.System = exports.Entity = exports.World = undefined;

var _world = __webpack_require__(52);

var _world2 = _interopRequireDefault(_world);

var _entity = __webpack_require__(49);

var _entity2 = _interopRequireDefault(_entity);

var _system = __webpack_require__(50);

var _system2 = _interopRequireDefault(_system);

var _backgroundSystem = __webpack_require__(48);

var _backgroundSystem2 = _interopRequireDefault(_backgroundSystem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.World = _world2.default;
exports.Entity = _entity2.default;
exports.System = _system2.default;
exports.BackgroundSystem = _backgroundSystem2.default;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PanelManager = function () {
  function PanelManager() {
    _classCallCheck(this, PanelManager);
  }

  _createClass(PanelManager, null, [{
    key: "init",
    value: function init(world, panel, opt) {
      this._world = world;
      this._panels = [];
      this._panels.push(panel);
      this._currentPanel = panel;
      this._currentPanel.init(this._world, this);
      this._currentPanel.onLoad(opt);
    }
  }, {
    key: "empty",
    value: function empty() {
      return this._currentPanel === undefined;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      for (var i = this._panels.length - 1; i >= 0; --i) {
        this._panels[i].destroy();
        this._panels[i].onUnload();
      }
      this._panels = [];
      this._currentPanel = undefined;
    }
  }, {
    key: "redirectTo",
    value: function redirectTo(nextPanel, opt) {
      if (this._currentPanel) {
        this._currentPanel.destroy();
        this._currentPanel.onUnload();
        this._panels.splice(this._panels.length - 1, 1);
      }

      this._panels.push(nextPanel);
      this._currentPanel = nextPanel;
      this._currentPanel.init(this._world, this);
      this._currentPanel.onLoad(opt);
    }
  }, {
    key: "navigateTo",
    value: function navigateTo(nextPanel, opt) {
      this._currentPanel.onHide();
      this._currentPanel = nextPanel;
      this._currentPanel.init(this._world, this);
      this._currentPanel.onLoad(opt);
      this._panels.push(nextPanel);
    }
  }, {
    key: "reLaunch",
    value: function reLaunch(nextPanel, opt) {
      for (var i = this._panels.length - 1; i >= 0; --i) {
        this._panels[i].destroy();
        this._panels[i].onUnload();
      }
      this._panels = [nextPanel];
      this._currentPanel = nextPanel;
      this._currentPanel.init(this._world, this);
      this._currentPanel.onLoad(opt);
    }
  }, {
    key: "navigateBack",
    value: function navigateBack() {
      this._currentPanel.destroy();
      this._currentPanel.onUnload();
      this._panels.splice(this._panels.length - 1, 1);
      this._currentPanel = this._panels[this._panels.length - 1];
      //this._currentPanel.init(this._world, this)
      this._currentPanel.onShow();
    }
  }]);

  return PanelManager;
}();

exports.default = PanelManager;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

var _file = __webpack_require__(35);

var _file2 = _interopRequireDefault(_file);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Song = function () {
  function Song() {
    _classCallCheck(this, Song);
  }

  _createClass(Song, null, [{
    key: 'initSongSet',
    value: function initSongSet(songList) {
      var _this = this;

      this._songSetLength = songList.length;
      this._list = songList;
      this.loaded = true;

      this.chapters = [];

      songList.forEach(function (song) {
        song.id = song.music_id;
        song.url = _config2.default.URL.CDN + song.music_id;
        if (_this._songSet[song.id]) {
          for (var key in song) {
            _this._songSet[song.id][key] = song[key];
          }
        } else {
          _this._songSet[song.id] = song;
        }

        var level = song.difficulty;

        if (!_this.chapters[level]) {
          _this.chapters[level] = [];
        }
        _this.chapters[level].push(song);
      });

      this.chapters = this.chapters.filter(function (chapter) {
        return chapter;
      });

      console.log('####');
      console.log(this.chapters);

      var starToUnlock = 0;
      this.chapters.forEach(function (chapter) {
        var currentChapterStars = Math.floor(chapter.length / 2) * 3;
        chapter.starToUnlock = starToUnlock;

        starToUnlock += currentChapterStars;
      });

      console.log('song set initialized', this.chapters);

      this._onSongSetLoadedCbs.forEach(function (cb) {
        cb();
      });
    }
  }, {
    key: 'getNextSong',
    value: function getNextSong(id) {
      var starScore = [0, 1, 3, 7];
      var avalibleSong = [];
      for (var star = 0; star < starScore.length && avalibleSong.length === 0; ++star) {
        var score = starScore[star];
        for (var i = 0; i < this.chapters.length; ++i) {
          var chapter = this.chapters[i];
          if (_utils.Score.stars >= chapter.starToUnlock) {
            for (var j = 0; j < chapter.length; ++j) {
              var song = chapter[j];
              var myScore = _utils.Score.getMyScore(song.music_id);
              if (song.music_id !== id && myScore[1].score === score) {
                avalibleSong.push(song);
              }
            }
          }
        }
      }
      var index = (0, _utils.random)(avalibleSong.length);
      return avalibleSong[index];
    }
  }, {
    key: 'onSongSetLoaded',
    value: function onSongSetLoaded(cb) {
      if (this.loaded) {
        cb();
      } else {
        this._onSongSetLoadedCbs.push(cb);
      }
    }
  }, {
    key: 'load',
    value: function load(id, cb) {
      var cachedSong = this._cache[id];
      var song = this._songSet[id];
      // 已存在，则直接返回 Android can only create 10 audio ctx
      //if (cachedSong) {
      if (false) {
        //console.log('cached song:', song.title)
        cb(cachedSong);
      } else {
        var audioCtx = wx.createInnerAudioContext();

        audioCtx.onPlay(function () {
          if (audioCtx.onPlayOnceCb) {
            audioCtx.onPlayOnceCb();
            audioCtx.onPlayOnceCb = undefined;
          }
        });
        audioCtx.onPause(function () {
          if (audioCtx.onPauseOnceCb) {
            //console.log('onPause')
            audioCtx.onPauseOnceCb();
            audioCtx.onPauseOnceCb = undefined;
          }
        });
        audioCtx.onSeeked(function () {
          if (audioCtx.onSeekedOnceCb) {
            // fuck android
            if (!audioCtx.onSeekedOnceCb.called) {
              audioCtx.onSeekedOnceCb.called = true;
              audioCtx.onSeekedOnceCb();
              audioCtx.onSeekedOnceCb = undefined;
            }
          }
        });
        audioCtx.onCanplay(function () {
          if (audioCtx.onCanplayOnceCb) {
            audioCtx.onCanplayOnceCb();
            audioCtx.onCanplayOnceCb = undefined;
          }
        });

        var unLoadedSong = this._cache[song.id] = {
          audioCtx: audioCtx,
          midi: null
        };
        var midiLoaded = false;
        var mp3Loaded = false;

        var checkSongLoaded = function checkSongLoaded() {
          if (midiLoaded && mp3Loaded) {
            cb(unLoadedSong);
          }
        };
        // load mp3

        audioCtx.onCanplayOnceCb = function () {
          //console.log('can Play audio:', song.title)
          mp3Loaded = true;

          checkSongLoaded();
        };

        _file2.default.getFile(id, function (filePath) {
          audioCtx.src = filePath;

          // load midi
          _network2.default.getMusicMeta(song.id, function (midi) {
            midiLoaded = true;
            unLoadedSong.midi = midi;
            checkSongLoaded();
          });
        });
      }
    }
  }, {
    key: 'firstOpen',
    value: function (_firstOpen) {
      function firstOpen() {
        return _firstOpen.apply(this, arguments);
      }

      firstOpen.toString = function () {
        return _firstOpen.toString();
      };

      return firstOpen;
    }(function () {
      var scores = _utils.Score.getMyScores();
      for (var i = 0; i < this._songSetLength; i++) {
        var song = this._list[i];
        if (song.score_info_list && song.score_info_list.length) {
          song.score_info_list.forEach(function (score) {
            if (score.score) {
              firstOpen = false;
            }
          });
          if (!firstOpen) {
            return;
          }
          break;
        }
      }
      console.log('first open:', firstOpen);

      return firstOpen;
    })
  }, {
    key: 'songSet',
    get: function get() {
      return this._songSet;
    }
  }, {
    key: 'songSetLength',
    get: function get() {
      return this._songSetLength;
    }
  }]);

  return Song;
}();

Song._songSet = {};
Song._songSetLength = 0;
Song._cache = {};
Song._onSongSetLoadedCbs = [];
Song.loaded = false;
exports.default = Song;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Live = function () {
  function Live() {
    _classCallCheck(this, Live);
  }

  _createClass(Live, null, [{
    key: 'witnessJoin',
    value: function witnessJoin(res) {
      if (res.audience_cmd == 0) {
        ++this.witness;
      } else {
        --this.witness;
        var minWitness = this.playing ? 0 : 1;
        this.witness = Math.max(this.witness, minWitness);
      }
    }
  }, {
    key: 'addCmd',
    value: function addCmd(cmd) {
      if (!this.readyTime) {
        if (cmd.cmd === _config2.default.SYNC_CMD.READY) {
          console.log('[live] set seed', cmd.seed);
          (0, _utils.setSeed)(cmd.seed);
        } else if (cmd.cmd === _config2.default.SYNC_CMD.START) {
          console.log('[live] start', cmd.time);
          this.readyTime = cmd.time;
        }
      } else if (this.liveState !== _config2.default.LIVE_STATE.RUNNING && this.readyTime + _config2.default.LIVE_DELAY < cmd.time) {
        console.log('[live] real start', cmd.time);
        _utils.emitter.emit(_config2.default.NETWORK_EVENT.LIVE_START);
      }

      if (cmd.cmd !== _config2.default.SYNC_CMD.READY && cmd.cmd !== _config2.default.SYNC_CMD.START) {
        cmd.duration = cmd.time - this.readyTime;
        this.cmds.push(cmd);
      }
    }
  }, {
    key: 'setStartTime',
    value: function setStartTime(time) {
      this.startTime = time;
    }
  }, {
    key: 'getCmds',
    value: function getCmds(time) {
      if (!this.startTime) {
        return [];
      }
      if (this.cmds.length === 0) {
        _utils.emitter.emit(_config2.default.NETWORK_EVENT.LIVE_OVER);
        return [];
      }

      var duration = time - this.startTime;
      var i = 0;
      for (; i < this.cmds.length; ++i) {
        if (duration < this.cmds[i].duration) {
          break;
        }
      }
      return this.cmds.splice(0, i);
    }
  }, {
    key: 'syncCmds',
    value: function syncCmds(res) {
      if (res.base_resp.errcode || res.state === 2) {
        //if (res.base_resp.errcode) {
        // error
        _utils.emitter.emit(_config2.default.NETWORK_EVENT.JOIN_ERROR);
      } else if (res.state === 1) {
        // end
        var lastCmd = res.cmd_list[res.cmd_list.length - 1];
        _utils.emitter.emit(_config2.default.NETWORK_EVENT.LIVE_OVER, JSON.parse(lastCmd.o[0]));
      } else {
        // start
        if (res.cmd_list.length) {
          res.cmd_list.forEach(function (cmd) {
            Live.addCmd(JSON.parse(cmd.o[0]));
          });
        } else {
          // prepare
        }
      }
    }
  }, {
    key: 'syncCmd',
    value: function syncCmd(res) {
      Live.addCmd(JSON.parse(res.o[0].o));
    }
  }, {
    key: 'prepare',
    value: function prepare(song, level, cb) {
      var id = song.id;
      var wording = (0, _utils.createWording)('正在准备围观');

      var that = this;
      _utils.Network.createGame(function (gameId, ticket) {
        that.playing = true;
        that.witness = 0;
        that.liveId = id;
        that.living = true;
        if (wording) {
          wording.destroy();
          wording = undefined;
        }

        console.log('live=1&gameId=' + gameId + '&ticket=' + ticket + '&id=' + id + '&level=' + level);

        setTimeout(function () {
          (0, _utils.getLiveShareImage)(song, function (img) {
            wx.shareAppMessage({
              title: '\u5FEB\u6765\u56F4\u89C2\u6211\u6F14\u594F\u3010' + song.title + '\u3011',
              query: 'live=1&gameId=' + gameId + '&ticket=' + ticket + '&id=' + id + '&level=' + level,
              imageUrl: img,
              success: function success() {
                console.log('shareAppMessage success');
                cb && cb(gameId);
              },
              fail: function fail() {
                _utils.Network.quitGame();
              }
            });
          });
        }, 20);

        //wx.shareAppMessage({
        //title: `快来围观我演奏【${song.title}】`,
        //query: `live=1&gameId=${gameId}&ticket=${ticket}&id=${id}`,
        //imageUrl: 'assets/share.png',
        //success: () => {
        //cb && cb(gameId)
        //}
        //})

        _utils.Network.joinGame(gameId);
      }, function () {
        if (wording) {
          wording.destroy();
          wording = undefined;
        }
        var failWording = (0, _utils.createWording)('创建围观失败');
        setTimeout(function () {
          failWording.destroy();
          failWording = undefined;
        }, 1000);
      });
    }
  }, {
    key: 'end',
    value: function end() {
      this.liveId = undefined;
      this.living = false;
      this.playing = false;
      this.witness = 1;
      this.cmds = [];
      this.frameId = 0;
      this.readyTime = undefined;
      this.startTime = undefined;
      this.startSync = undefined;
    }
  }]);

  return Live;
}();

Live.liveId = undefined;
Live.living = false;
Live.playing = false;
Live.witness = 1;
Live.cmds = [];
Live.frameId = 0;
Live.readyTime = undefined;
Live.startTime = undefined;
Live.startSync = undefined;
exports.default = Live;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Session = function () {
  function Session() {
    _classCallCheck(this, Session);
  }

  _createClass(Session, null, [{
    key: 'setLoginState',
    value: function setLoginState(openid, sessionId) {
      if (openid.length != 0 && sessionId.length != 0) {
        this._openid = openid;
        this._sessionId = sessionId;
        this._isLogin = true;
      }
    }
  }, {
    key: 'initShareTicket',
    value: function initShareTicket(shareTicket) {
      var _this = this;

      wx.getShareInfo({
        shareTicket: shareTicket,
        success: function success(res) {
          console.log('encryptedData', res.encryptedData);
          console.log('iv', res.iv);
          _this.setShareTicket(res.encryptedData, res.iv);
        },
        fail: function fail() {
          console.log('getShareInfo fail');
        }
      });
    }
  }, {
    key: 'setShareTicket',
    value: function setShareTicket(shareTicket, shareTicketIV) {
      this._shareTicket = shareTicket;
      this._shareTicketIV = shareTicketIV;
    }
  }, {
    key: 'openid',
    get: function get() {
      return this._openid;
    }
  }, {
    key: 'sessionId',
    get: function get() {
      return this._sessionId;
    }
  }, {
    key: 'isLogin',
    get: function get() {
      return this._isLogin;
    }
  }, {
    key: 'shareTicket',
    get: function get() {
      return this._shareTicket;
    }
  }, {
    key: 'shareTicketIV',
    get: function get() {
      return this._shareTicketIV;
    }
  }, {
    key: 'baseReq',
    get: function get() {
      return {
        base_req: {
          session_id: this._sessionId,
          openid: this._openid
        }
      };
    }
  }]);

  return Session;
}();

Session._isLogin = false;
exports.default = Session;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Panel = function () {
  function Panel() {
    _classCallCheck(this, Panel);
  }

  _createClass(Panel, null, [{
    key: 'init',
    value: function init(world, panelManager) {
      this._world = world;
      this._pm = panelManager;

      this._panel = new Laya.Sprite();
      this._panel.width = _config2.default.SCREEN_WIDTH;
      this._panel.height = _config2.default.SCREEN_HEIGHT;
      this._panel.pos(0, 0);
      this._panel.zOrder = 99;
      Laya.stage.addChild(this._panel);
    }
  }, {
    key: 'onLoad',
    value: function onLoad() {}
  }, {
    key: 'onUnload',
    value: function onUnload() {}
  }, {
    key: 'destroy',
    value: function destroy() {
      this._panel.destroy(true);
    }
  }]);

  return Panel;
}();

exports.default = Panel;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.translateCoordinate = undefined;

var _translateCoordinate = __webpack_require__(114);

var _translateCoordinate2 = _interopRequireDefault(_translateCoordinate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.translateCoordinate = _translateCoordinate2.default;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _textConfig;

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _panel2 = __webpack_require__(7);

var _panel3 = _interopRequireDefault(_panel2);

var _loadingPanel = __webpack_require__(23);

var _loadingPanel2 = _interopRequireDefault(_loadingPanel);

var _settingPanel = __webpack_require__(33);

var _settingPanel2 = _interopRequireDefault(_settingPanel);

var _leaderBoard = __webpack_require__(21);

var _leaderBoard2 = _interopRequireDefault(_leaderBoard);

var _loadingAnimation = __webpack_require__(16);

var _loadingAnimation2 = _interopRequireDefault(_loadingAnimation);

var _utils = __webpack_require__(1);

var _bar = __webpack_require__(11);

var _slideView = __webpack_require__(69);

var _slideView2 = _interopRequireDefault(_slideView);

var _listView = __webpack_require__(66);

var _listView2 = _interopRequireDefault(_listView);

var _slidePagination = __webpack_require__(68);

var _slidePagination2 = _interopRequireDefault(_slidePagination);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
// import Pagination from './pagination'


var textConfig = (_textConfig = {
  font: 'Helvetica'
}, _defineProperty(_textConfig, 'font', 'Helvetica'), _defineProperty(_textConfig, 'width', _config2.default.SCREEN_WIDTH), _defineProperty(_textConfig, 'align', 'center'), _defineProperty(_textConfig, 'valign', 'middle'), _defineProperty(_textConfig, 'color', '#FFFFFF'), _defineProperty(_textConfig, 'fontSize', 48), _defineProperty(_textConfig, 'zOrder', 100), _textConfig);

var notFirst = false;

var SelectPanel = function (_Panel) {
  _inherits(SelectPanel, _Panel);

  function SelectPanel() {
    _classCallCheck(this, SelectPanel);

    return _possibleConstructorReturn(this, (SelectPanel.__proto__ || Object.getPrototypeOf(SelectPanel)).apply(this, arguments));
  }

  _createClass(SelectPanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      var _this2 = this;

      if (!notFirst) {
        this._loadingWording = (0, _utils.createWording)('正在加载音乐列表');
        _loadingAnimation2.default.start();
      }
      var startTime = Date.now();

      _song2.default.onSongSetLoaded(function () {
        //let time = 1000 - Date.now() + startTime
        //if (time < 0 || notFirst) {
        //time = 0
        //}
        //setTimeout(() => {
        if (!notFirst) {
          _this2._loadingWording.destroy();
          _this2._loadingWording = undefined;
          _loadingAnimation2.default.stop();
        }
        notFirst = true;

        var firstOpen = _utils.Score.firstOpen();
        if (firstOpen) {
          _this2.drawSlideView();

          _this2._world.level = 0;
          _this2._world.mainColor = _config2.default.LEVEL_COLOR[0];
          _this2._world.mainColor = _config2.default.LEVEL_COLOR[0];
          _this2._world.circleColor = _config2.default.LEVEL_CIRCLE_COLOR[0];
          _this2._world.textColor = _config2.default.LEVEL_TEXT_COLOR[0];
          _this2._world.starColor = _config2.default.LEVEL_STAR_COLOR[0];
          _slideView2.default.setData({
            data: _song2.default.chapters[0]
          });
          _slideView2.default.show();
        } else {
          _this2.drawSettingIcon();
          _this2.drawSlideView();
          _this2.drawListView();
          _this2.drawPagination();
          _this2.drawInvitation();

          _this2.toggleView();
        }
        //}, time)
      });
    }
  }, {
    key: 'onHide',
    value: function onHide() {
      this._panel.visible = false;
    }
  }, {
    key: 'onShow',
    value: function onShow() {
      this._panel.visible = true;
    }
  }, {
    key: 'drawPagination',
    value: function drawPagination() {
      var _this3 = this;

      var p = _slidePagination2.default.init(this._world, this._panel);

      _slidePagination2.default.indexChangeCb = function (index) {
        _this3._world.level = index;
        _this3._world.mainColor = _config2.default.LEVEL_COLOR[index];
        _this3._world.circleColor = _config2.default.LEVEL_CIRCLE_COLOR[index];
        _this3._world.textColor = _config2.default.LEVEL_TEXT_COLOR[index];
        _this3._world.starColor = _config2.default.LEVEL_STAR_COLOR[index];

        _this3.setRenderData();
      };

      _slidePagination2.default.modeChangeCb = function (mode) {
        _this3._mode = mode;
        _this3.toggleView();

        _this3.setRenderData();
      };

      _slidePagination2.default.setData(_song2.default.chapters);
      this._mode = 'slide';

      this._panel.addChild(p);
    }
  }, {
    key: 'setRenderData',
    value: function setRenderData() {
      var index = this._world.level;

      var data = _song2.default.chapters[index],
          renderData = void 0;
      if (index > 0) {
        var prevChapter = _song2.default.chapters[index - 1];
        var prevPerfect = prevChapter.reduce(function (result, current) {
          var starScore = _utils.Score.getMyScore(current.id)[1].score;
          if (starScore) {
            return result + (starScore === 7 ? 1 : 0);
          } else {
            return result;
          }
        }, 0);

        renderData = {
          data: data,
          prevPerfect: prevPerfect,
          prevIndex: index,
          prevChapterLength: prevChapter.length
        };
      } else {
        renderData = { data: data };
      }

      if (this._mode === 'list') {
        _listView2.default.setData(renderData);
      } else {
        _slideView2.default.setData(renderData);
      }
    }
  }, {
    key: 'toggleView',
    value: function toggleView() {
      if (this._mode === 'slide') {
        _slideView2.default.show();
        _listView2.default.hide();
        this._settingIcon.mouseEnabled = this._settingIcon.visible = true;
        this._invitationButton.mouseEnabled = this._invitationButton.visible = true;
      } else {
        _slideView2.default.hide();
        _listView2.default.show();
        this._settingIcon.mouseEnabled = this._settingIcon.visible = false;
        this._invitationButton.mouseEnabled = this._invitationButton.visible = false;
        this.list.visible = this.list.mouseEnabled = true;
      }
    }
  }, {
    key: 'drawSlideView',
    value: function drawSlideView() {
      var _this4 = this,
          _panel;

      this.slides = _slideView2.default.init(this._world, this._panel);

      _slideView2.default.selectHandler = function (id) {
        _slideView2.default.destroy();

        if (id === _utils.Live.liveId) {
          _utils.Network.readyCmd();
        } else {
          _utils.Network.quitGame();
          _utils.Live.end();
          _utils.Live.playing = true;
        }

        _this4._pm.redirectTo(_loadingPanel2.default, { id: id });
      };

      _slideView2.default.touchAvatarCb = function (song) {
        if (_this4._loading) {
          return;
        }
        _this4._loading = true;

        _utils.Network.getFriendsScore(song.id, function (_ref) {
          var my_user_info = _ref.my_user_info,
              user_info = _ref.user_info;

          _utils.Score.setNetworkScore(song.id, user_info);

          _this4._world.songConfig = song;
          var renderInfo = [my_user_info].concat(user_info).sort(function (a, b) {
            return b.score_info[0].score - a.score_info[0].score;
          });
          _this4._pm.navigateTo(_leaderBoard2.default, renderInfo);

          _this4._loading = false;
        });
      };

      (_panel = this._panel).addChildren.apply(_panel, _toConsumableArray(this.slides));
    }
  }, {
    key: 'drawListView',
    value: function drawListView() {
      this.list = _listView2.default.init(this._world, this._panel);
      _listView2.default.setData({ data: _song2.default.chapters[0] });

      _listView2.default.selectHandler = function (index) {

        _slidePagination2.default._mode = 'slide';
        _slideView2.default._index = index;
        _slideView2.default._index = _slideView2.default._getNewIndex(-2);
        _slideView2.default.renderCircleContent();
      };

      this._panel.addChild(this.list);
    }
  }, {
    key: 'drawInvitation',
    value: function drawInvitation() {
      var c = _config2.default.SELECT_PANEL.INVITATION;
      this._invitationArgs = {
        button: (0, _utils.getScaleArgs)(c.BUTTON),
        text: (0, _utils.getScaleArgs)(c.TEXT),
        invitedText: (0, _utils.getScaleArgs)(c.INVITED_TEXT),
        icon: (0, _utils.getScaleArgs)(c.INVITED_ICON)
      };

      var invitationButton = new Laya.Sprite();
      invitationButton.size(this._invitationArgs.button.WIDTH, this._invitationArgs.button.HEIGHT);
      invitationButton.pos(this._invitationArgs.button.X, this._invitationArgs.button.Y);
      // drawRoundedRect(invitationButton, 0, 0, c.WIDTH, c.HEIGHT, c.RADIUS, null, {
      //   strokeStyle: this._world.mainColor,
      //   lineWidth: c.LINE_WIDTH
      // })
      var path = (0, _bar.generateBackgroundBar)(this._invitationArgs.button.WIDTH, this._invitationArgs.button.HEIGHT);
      invitationButton.graphics.drawPath(0, 0, path, {
        fillStyle: c.BACKGROUND_COLOR
      });

      var share = (0, _utils.createTextSprite)(invitationButton, this._invitationArgs.text);
      // share.pos(c.INVITED_TEXT_X, 0)
      // share.height = c.HEIGHT - c.LINE_WIDTH * 2
      // share.color = this._world.mainColor
      // share.size(c.WIDTH, c.HEIGHT)
      share.color = c.COLOR;
      share.fontSize = c.FONT_SIZE;
      // share.align = 'left'
      share.text = '邀请围观';
      invitationButton.on(Laya.Event.MOUSE_DOWN, this, this.clickShareHandler);

      //this._panel.addChild(invitationButton)
      invitationButton.addChild(share);

      invitationButton.share = share;
      this._invitationButton = invitationButton;
      //emitter.on(config.GAME_EVENT.LEVEL_CHANGED, () => {
      // share.color = this._world.mainColor
      // invitationButton.graphics.clear()
      // drawRoundedRect(invitationButton, 0, 0, c.WIDTH, c.HEIGHT, c.RADIUS, null, {
      //   strokeStyle: this._world.mainColor,
      //   lineWidth: c.LINE_WIDTH
      // })
      //})
    }
  }, {
    key: 'clickShareHandler',
    value: function clickShareHandler(e) {
      var _this5 = this;

      e.stopPropagation();
      var song = _slideView2.default._dataSource[_slideView2.default._getNewIndex(2)];

      _utils.Live.prepare(song, this._world.level, function (gameId) {
        //const text = new Laya.Text()
        //Object.assign(text , textConfig)
        //text.pos(100, 0)
        //text.text = gameId
        //this._panel.addChild(text)
        var c = _config2.default.SELECT_PANEL.INVITATION;
        _this5._invitationButton.share.text = '已邀请围观';
        _this5._invitationButton.share.align = 'left';
        _this5._invitationButton.share.x = _this5._invitationArgs.invitedText.X;
        _this5._invitationButton.graphics.drawTexture(_this5._world.assets.invited, _this5._invitationArgs.icon.X, _this5._invitationArgs.icon.Y, _this5._invitationArgs.icon.WIDTH, _this5._invitationArgs.icon.HEIGHT);
      });
    }
  }, {
    key: 'drawSettingIcon',
    value: function drawSettingIcon() {
      var c = _config2.default.SETTING_ICON;

      this._settingIcon = new Laya.Sprite();
      // this._settingIcon.graphics.drawCircle(c.RADIUS, c.RADIUS, c.RADIUS, c.BACKGROUND_COLOR)
      //this._settingIcon.graphics.drawTexture(this._world.assets.settingRes, 0, 0, c.SIZE, c.SIZE)
      //this._settingIcon.pos(c.X, c.Y)
      //this._settingIcon.size(c.SIZE, c.SIZE)
      //this._settingIcon.on(Laya.Event.MOUSE_DOWN, this, () => {
      //this._pm.navigateTo(SettingPanel)
      //})
      //this._panel.addChild(this._settingIcon)
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      _utils.emitter.removeAllListeners(_config2.default.GAME_EVENT.LEVEL_CHANGED);
      _slideView2.default.destroy();
      this._panel.destroy(true);
    }
  }]);

  return SelectPanel;
}(_panel3.default);

exports.default = SelectPanel;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _networkHelper = __webpack_require__(134);

var _networkHelper2 = _interopRequireDefault(_networkHelper);

var _emitter = __webpack_require__(34);

var _emitter2 = _interopRequireDefault(_emitter);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Network = function Network() {
  _classCallCheck(this, Network);
};

Network._userInfo = {
  nickName: undefined,
  avatarUrl: undefined
};
Network._gameId = undefined;
Network._ticket = undefined;
Network._needConfirmCmd = {};
Network._frameId = 0;
Network._debug = true;
Network._lastCmdTime = 0;
Network._worldCreatedCbs = [];
Network._worldCreated = false;
Network._loginRetryTime = 0;


_emitter2.default.on(_config2.default.GAME_EVENT.WORLD_CREATED, function () {
  Network._worldCreatedCbs.forEach(function (cb) {
    return cb();
  });
  Network._worldCreatedCbs = [];
  Network._worldCreated = true;
});

Network.sendEvent = function (eventName) {
  for (var _len = arguments.length, data = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    data[_key - 1] = arguments[_key];
  }

  if (Network._worldCreated) {
    _emitter2.default.emit.apply(_emitter2.default, [eventName].concat(data));
  } else {
    Network._worldCreatedCbs.push(function () {
      _emitter2.default.emit.apply(_emitter2.default, [eventName].concat(data));
    });
  }
};

Network.login = _networkHelper2.default.login.bind(Network);
Network.getUserInfo = _networkHelper2.default.getUserInfo.bind(Network);
Network.createGame = _networkHelper2.default.createGame.bind(Network);
Network.settlement = _networkHelper2.default.settlement.bind(Network);
Network.globalSettlement = _networkHelper2.default.globalSettlement.bind(Network);
Network.getMusicMeta = _networkHelper2.default.getMusicMeta.bind(Network);
Network.getMusicList = _networkHelper2.default.getMusicList.bind(Network);
Network.getFriendsScore = _networkHelper2.default.getFriendsScore.bind(Network);
Network.quitGame = _networkHelper2.default.quitGame.bind(Network);
Network.syncCmd = _networkHelper2.default.syncCmd.bind(Network);

Network.connectSocket = _networkHelper2.default.connectSocket.bind(Network);
Network.heartbeat = _networkHelper2.default.heartbeat.bind(Network);
Network.onSocket = _networkHelper2.default.onSocket.bind(Network);
Network.joinGame = _networkHelper2.default.joinGame.bind(Network);
Network.witnessQuit = _networkHelper2.default.witnessQuit.bind(Network);
Network.uploadCmd = _networkHelper2.default.uploadCmd.bind(Network);
Network.reUploadCmd = _networkHelper2.default.reUploadCmd.bind(Network);
Network.startCmd = _networkHelper2.default.startCmd.bind(Network);
Network.readyCmd = _networkHelper2.default.readyCmd.bind(Network);
Network.upCmd = _networkHelper2.default.upCmd.bind(Network);
Network.downCmd = _networkHelper2.default.downCmd.bind(Network);
Network.coinCmd = _networkHelper2.default.coinCmd.bind(Network);
Network.obsCmd = _networkHelper2.default.obsCmd.bind(Network);
Network.missCoinCmd = _networkHelper2.default.missCoinCmd.bind(Network);
Network.endCmd = _networkHelper2.default.endCmd.bind(Network);
Network.idelCmd = _networkHelper2.default.idelCmd.bind(Network);

exports.default = Network;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.generateBackgroundBar = generateBackgroundBar;
exports.generateBar = generateBar;
function generateBackgroundBar(width, height) {
  var radius = height / 2;
  return [['moveTo', radius, 0], ['lineTo', width - radius, 0], ['arcTo', width, 0, width, radius, radius],
  // ['lineTo', width, height - radius],
  ['arcTo', width, height, width - radius, height, radius], ['lineTo', radius, height], ['arcTo', 0, height, 0, height - radius, radius],
  // ['lineTo', 0, radius],
  ['arcTo', 0, 0, radius, 0, radius], ['closePath']];
}

function generateBar(backgroundWidth, width, height) {
  if (Math.abs(width - backgroundWidth) < 1e-6) {
    return generateBackgroundBar(backgroundWidth, height);
  }

  var radius = height / 2;
  if (width < radius) {
    var hypotenuse = Math.sqrt(2 * width * radius - width * width);
    var yCoordinate = width / hypotenuse * radius;
    return [['moveTo', width, radius - hypotenuse], ['lineTo', width, radius + hypotenuse], ['arcTo', 0, radius + yCoordinate, 0, radius, radius], ['arcTo', 0, radius - yCoordinate, width, radius - hypotenuse, radius], ['closePath']];
  } else if (width < backgroundWidth - radius) {
    return [['moveTo', radius, 0], ['lineTo', width, 0],
    // ['arcTo', width, 0, width, radius, radius],
    ['lineTo', width, height],
    // ['arcTo', width, height, width - radius, height, radius],
    ['lineTo', radius, height], ['arcTo', 0, height, 0, height - radius, radius],
    // ['lineTo', 0, radius],
    ['arcTo', 0, 0, radius, 0, radius], ['closePath']];
  } else {
    var tangent = width + radius - backgroundWidth;
    var _hypotenuse = Math.sqrt(radius * radius - tangent * tangent);
    var seta = Math.asin(tangent / radius);
    var xCoordinate = Math.tan(seta / 2) * radius + backgroundWidth - radius;
    return [['moveTo', radius, 0], ['lineTo', backgroundWidth - radius, 0], ['arcTo', xCoordinate, 0, width, radius - _hypotenuse, radius],
    // ['lineTo', width, radius - hypotenuse],
    ['lineTo', width, radius + _hypotenuse], ['arcTo', xCoordinate, height, backgroundWidth - radius, height, radius],
    // ['lineTo', backgroundWidth - radius, height],
    ['lineTo', radius, height], ['arcTo', 0, height, 0, radius, radius], ['arcTo', 0, 0, radius, 0, radius], ['closePath']];
  }
}

/***/ }),
/* 12 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var sendSocket = function sendSocket(data) {
  wx.sendSocketMessage({
    data: JSON.stringify(data)
  });
};

exports.sendSocket = sendSocket;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _inputSystem = __webpack_require__(56);

var _inputSystem2 = _interopRequireDefault(_inputSystem);

var _gameLoopSystem = __webpack_require__(55);

var _gameLoopSystem2 = _interopRequireDefault(_gameLoopSystem);

var _cmdSystem = __webpack_require__(54);

var _cmdSystem2 = _interopRequireDefault(_cmdSystem);

var _touchEffectSystem = __webpack_require__(57);

var _touchEffectSystem2 = _interopRequireDefault(_touchEffectSystem);

var _preloadSystem = __webpack_require__(86);

var _preloadSystem2 = _interopRequireDefault(_preloadSystem);

var _backgroundSystem = __webpack_require__(72);

var _backgroundSystem2 = _interopRequireDefault(_backgroundSystem);

var _buffSystem = __webpack_require__(73);

var _buffSystem2 = _interopRequireDefault(_buffSystem);

var _collisionSystem = __webpack_require__(78);

var _collisionSystem2 = _interopRequireDefault(_collisionSystem);

var _runSystem = __webpack_require__(111);

var _runSystem2 = _interopRequireDefault(_runSystem);

var _switchSystem = __webpack_require__(112);

var _switchSystem2 = _interopRequireDefault(_switchSystem);

var _colorSystem = __webpack_require__(79);

var _colorSystem2 = _interopRequireDefault(_colorSystem);

var _translateCoordinateSystem = __webpack_require__(113);

var _translateCoordinateSystem2 = _interopRequireDefault(_translateCoordinateSystem);

var _cameraSystem = __webpack_require__(74);

var _cameraSystem2 = _interopRequireDefault(_cameraSystem);

var _renderSystem = __webpack_require__(26);

var _renderSystem2 = _interopRequireDefault(_renderSystem);

var _pathSystem = __webpack_require__(85);

var _pathSystem2 = _interopRequireDefault(_pathSystem);

var _particleSystem = __webpack_require__(84);

var _particleSystem2 = _interopRequireDefault(_particleSystem);

var _coinSystem = __webpack_require__(77);

var _coinSystem2 = _interopRequireDefault(_coinSystem);

var _coinStarSystem = __webpack_require__(76);

var _coinStarSystem2 = _interopRequireDefault(_coinStarSystem);

var _obstacleSystem = __webpack_require__(82);

var _obstacleSystem2 = _interopRequireDefault(_obstacleSystem);

var _judgeSystem = __webpack_require__(80);

var _judgeSystem2 = _interopRequireDefault(_judgeSystem);

var _coinParticleSystem = __webpack_require__(75);

var _coinParticleSystem2 = _interopRequireDefault(_coinParticleSystem);

var _obsParticleSystem = __webpack_require__(81);

var _obsParticleSystem2 = _interopRequireDefault(_obsParticleSystem);

var _pacmanSystem = __webpack_require__(83);

var _pacmanSystem2 = _interopRequireDefault(_pacmanSystem);

var _ReplaySystem = __webpack_require__(71);

var _ReplaySystem2 = _interopRequireDefault(_ReplaySystem);

var _loadingAnimation = __webpack_require__(16);

var _loadingAnimation2 = _interopRequireDefault(_loadingAnimation);

var _deadAnimation = __webpack_require__(53);

var _deadAnimation2 = _interopRequireDefault(_deadAnimation);

var _init = __webpack_require__(14);

var _utils = __webpack_require__(1);

var _assetsLoader = __webpack_require__(15);

var _assetsLoader2 = _interopRequireDefault(_assetsLoader);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _loadingPanel = __webpack_require__(23);

var _loadingPanel2 = _interopRequireDefault(_loadingPanel);

var _startPanel = __webpack_require__(25);

var _startPanel2 = _interopRequireDefault(_startPanel);

var _pausePanel = __webpack_require__(24);

var _pausePanel2 = _interopRequireDefault(_pausePanel);

var _endPanel = __webpack_require__(65);

var _endPanel2 = _interopRequireDefault(_endPanel);

var _liveWaitingPanel = __webpack_require__(22);

var _liveWaitingPanel2 = _interopRequireDefault(_liveWaitingPanel);

var _liveLeavePanel = __webpack_require__(32);

var _liveLeavePanel2 = _interopRequireDefault(_liveLeavePanel);

var _liveEndPanel = __webpack_require__(67);

var _liveEndPanel2 = _interopRequireDefault(_liveEndPanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _leaderBoard = __webpack_require__(21);

var _leaderBoard2 = _interopRequireDefault(_leaderBoard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Game = function () {
  function Game() {
    _classCallCheck(this, Game);
  }

  _createClass(Game, null, [{
    key: 'init',
    value: function init(mode, id, level) {
      var _this = this;

      this._world = new _ECS.World();
      this._world.mode = mode;
      if (mode === _config2.default.GAME_MODE.LIVE) {
        _utils.Live.living = true;
      }
      level = level ? level : 0;
      this._world.mainColor = _config2.default.LEVEL_COLOR[level];
      this._world.circleColor = _config2.default.LEVEL_CIRCLE_COLOR[level];
      this._world.textColor = _config2.default.LEVEL_TEXT_COLOR[level];
      this._world.starColor = _config2.default.LEVEL_STAR_COLOR[level];
      this._world.level = level;

      this._world.delayTime = _utils.Storage.getDelayTime();

      _deadAnimation2.default.init(this._world);
      _loadingAnimation2.default.init(this._world);

      this._world.reset = function (cb) {
        _this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
        _renderSystem2.default.stop();
        _this._world.cmd = _config2.default.CMD.NONE;
        _this._world.combo = 0;
        _this._world.continuousCombo = 0;
        // 最高连击
        _this._world.maxContinuousCombo = 0;
        _this._world.perfectCoin = 0;
        _this._world.goodCoin = 0;
        // 遗漏的数量
        _this._world.missedCoin = 0;
        // 撞了多少次障碍物
        _this._world.touchedObstacle = 0;
        _this._world.score = undefined;
        _this._world.hearts = undefined;

        _this._world.realDistance = 0;

        if (_this._world.audioCtx) {
          _this._world.audioCtx.onSeekedOnceCb = cb;
          _this._world.audioCtx.seek(0);
          setTimeout(function () {
            if (_this._world.audioCtx && _this._world.audioCtx.onSeekedOnceCb && !_this._world.audioCtx.onSeekedOnceCb.called) {
              _this._world.audioCtx.onSeekedOnceCb.called = true;
              _this._world.audioCtx.onSeekedOnceCb();
            }
          }, 300);
        }

        _this._world.ball.buffManager = {};
        // this._world.buffSprites = {}

        _this._world.coins.length = 0;
        _this._world.coins.start = _this._world.coins.end = 0;
        _this._world.obstacles.length = 0;
        _this._world.obstacles.start = _this._world.obstacles.end = 0;
        // this._world.mileStones.length = 0
        // this._world.mileStones.start = this._world.mileStones.end = 0
      };

      _assetsLoader2.default.init(this._world, function () {
        // PanelManager.init(this._world, LeaderBoard)
        if (mode === _config2.default.GAME_MODE.LIVE) {
          _utils.Live.liveState = _config2.default.LIVE_STATE.PREPARE;
          _panelManager2.default.init(_this._world, _loadingPanel2.default, { id: id });
        } else {
          _panelManager2.default.init(_this._world, _selectPanel2.default);
        }
        //PanelManager.init(this._world, EndPanel)
        (0, _init.initBeforeSelect)(_this._world);

        _this._world.addBackgroundSystem(_gameLoopSystem2.default)
        // .addBackgroundSystem(InputSystem)
        .addBackgroundSystem(_cmdSystem2.default).addBackgroundSystem(_touchEffectSystem2.default);

        _this._world.addSystem(_ReplaySystem2.default).addSystem(_judgeSystem2.default).addSystem(_preloadSystem2.default).addSystem(_collisionSystem2.default).addSystem(_coinSystem2.default).addSystem(_buffSystem2.default).addSystem(_obstacleSystem2.default).addSystem(_runSystem2.default).addSystem(_switchSystem2.default).addSystem(_translateCoordinateSystem2.default).addSystem(_coinParticleSystem2.default).addSystem(_coinStarSystem2.default).addSystem(_obsParticleSystem2.default)
        //.addSystem(PacmanSystem)
        .addSystem(_cameraSystem2.default).addSystem(_renderSystem2.default);

        _utils.emitter.on(_config2.default.GAME_EVENT.GAME_PAUSE, _this.pauseHandler.bind(_this));
        _utils.emitter.on(_config2.default.GAME_EVENT.GAME_END, _this.endHandler.bind(_this));

        _utils.emitter.on(_config2.default.NETWORK_EVENT.LIVE_START, _this.liveStartHandler.bind(_this));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.LIVE_END, _this.liveEndHandler.bind(_this));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.LIVE_OVER, _this.liveOverHandler.bind(_this));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.WITNESS_JOIN, _utils.Live.witnessJoin.bind(_utils.Live));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.SYNC_CMDS, _utils.Live.syncCmds.bind(_utils.Live));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.SYNC_CMD, _utils.Live.syncCmd.bind(_utils.Live));
        _utils.emitter.on(_config2.default.NETWORK_EVENT.JOIN_ERROR, _this.liveLeaveHandler.bind(_this));

        _this._world.start();

        _utils.emitter.emit(_config2.default.GAME_EVENT.WORLD_CREATED);
      });
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      if (this._world.audioCtx) {
        this._world.audioCtx.stop();
      }
      this._world.reset();
      this._world.stop();
      this._world.clear();
      _utils.Live.end();
      _panelManager2.default.destroy();
      _utils.emitter.removeAllListeners(_config2.default.GAME_EVENT.GAME_PAUSE);
      _utils.emitter.removeAllListeners(_config2.default.GAME_EVENT.GAME_END);

      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.LIVE_START);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.LIVE_END);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.WITNESS_JOIN);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.SYNC_CMDS);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.SYNC_CMD);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.JOIN_ERROR);
      _utils.emitter.removeAllListeners(_config2.default.NETWORK_EVENT.LIVE_OVER);
    }
  }, {
    key: 'liveLeaveHandler',
    value: function liveLeaveHandler() {
      if (_utils.Live.playing) {
        console.log('主播不应该加入房间出错');
      } else if (_utils.Live.cmds.length === 0 || _panelManager2.default._currentPanel === _liveWaitingPanel2.default) {
        this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
        _utils.Live.liveState = _config2.default.LIVE_STATE.LEAVE;
        if (_panelManager2.default._currentPanel === _liveWaitingPanel2.default) {
          _panelManager2.default.redirectTo(_liveLeavePanel2.default);
        }
      }
    }
  }, {
    key: 'liveStartHandler',
    value: function liveStartHandler() {
      _utils.Live.liveState = _config2.default.LIVE_STATE.RUNNING;
      if (_panelManager2.default._currentPanel !== _loadingPanel2.default) {
        _panelManager2.default.destroy();
        _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PRELOAD, 'liveStart Handler');
      }
    }
  }, {
    key: 'liveOverHandler',
    value: function liveOverHandler() {
      if (this._world.audioCtx) {
        this._world.audioCtx.stop();
      }
      _utils.Live.liveState = _config2.default.LIVE_STATE.END;
      this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
      this._world.reset();
      _panelManager2.default.redirectTo(_liveLeavePanel2.default);
    }
  }, {
    key: 'liveEndHandler',
    value: function liveEndHandler(info) {
      console.log('live End Handler', info);
      if (this._world.audioCtx) {
        this._world.audioCtx.stop();
      }
      _utils.Live.liveState = _config2.default.LIVE_STATE.END;
      this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
      this._world.reset();
      _panelManager2.default.redirectTo(_liveEndPanel2.default, { info: info });
    }
  }, {
    key: 'endHandler',
    value: function endHandler(complete) {
      var _this2 = this;

      if (_utils.Live.living && !_utils.Live.playing) {
        return;
      }

      // if (DeadAnimation.running) {
      //   return
      // }

      this._world.audioCtx.stop();
      // this._world.mode = config.GAME_MODE.PLAYING_DEAD_ANIMATION

      _renderSystem2.default.stop();
      this._world.coins.length = 0;
      this._world.coins.start = this._world.coins.end = 0;
      this._world.obstacles.length = 0;
      this._world.obstacles.start = this._world.obstacles.end = 0;

      this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
      _panelManager2.default.redirectTo(_endPanel2.default, {
        complete: complete,
        cb: function cb() {
          _this2._world.reset();
        }
      });
      if (_utils.Live.living && _utils.Live.playing) {
        _utils.Live.living = false;
        _utils.Live.playing = false;
        _utils.Live.liveState = _config2.default.LIVE_STATE.END;
      }
      // DeadAnimation._onAnimationFinished = () => {
      //   this._world.mode = config.GAME_MODE.BACKGROUND
      //   PanelManager.redirectTo(EndPanel, {
      //     complete,
      //     cb: () => {
      //       this._world.reset()
      //     }
      //   })
      //   if (Live.living && Live.playing) {
      //     Live.living = false
      //     Live.playing = false
      //     Live.liveState = config.LIVE_STATE.END
      // }

      // DeadAnimation.running = true
    }
  }, {
    key: 'pauseHandler',
    value: function pauseHandler() {
      var _this3 = this;

      if (_utils.Live.living && _utils.Live.playing && this._world.mode === _config2.default.GAME_MODE.REAL) {
        console.log('主播离开');
        _utils.Network.quitGame();
        _utils.Live.end();
        _utils.Live.playing = true;
        _utils.emitter.emit('error', 'living player leave game and come back');
      } else if (this._world.mode === _config2.default.GAME_MODE.REAL) {
        console.log('暂停界面');
        if (this._world.audioCtx) {
          this._world.audioCtx.onPauseOnceCb = function () {
            _this3._world.pause();
            _panelManager2.default.redirectTo(_pausePanel2.default);
          };
          this._world.audioCtx.pause();
        }
      } else {
        console.log('pause');
        this._world.pause();
      }
    }
  }, {
    key: 'continueHanlder',
    value: function continueHanlder() {
      if (this._world.mode === _config2.default.GAME_MODE.REAL) {
        this._world.audioCtx.pause();
        // client has bug, so pause first, then seek and play when click continue
      } else {
        console.log('continue');
        this._world.start();
      }
    }
  }, {
    key: 'settlementHandler',
    value: function settlementHandler() {
      if (_utils.Live.living && !_utils.Live.playing) {
        return;
      }
      var preparationDistance = 0;
      if (this._world.preparationDistance) {
        preparationDistance = this._world.preparationDistance;
      }
      _utils.Network.settlement(this._world.songConfig.id, this._world.score, this._world.ball.distance - preparationDistance);
    }
  }]);

  return Game;
}();

exports.default = Game;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initSong = exports.initBeforeSelect = undefined;

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _gameHelper = __webpack_require__(20);

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var initLine = function initLine(world, mode, lineWidth, dWidth) {
  world.pathes = (0, _gameHelper.generateLines)(world);
  world.pathes.lineWidth = lineWidth || _config2.default.MAX_LINE_WIDTH;
  world.pathes.dWidth = dWidth || _config2.default.LINE_D_WIDTH;
  //console.log(config.MAX_LINE_WIDTH, config.LINE_D_WIDTH, world.pathes)
};

var initSong = function initSong(world) {
  world.song = world.songConfig.midi;
  world.duration = world.song.duration;

  // pixel / second
  var velocity = _config2.default.RUN_VEC * 1000;

  world.totalDistance = Math.ceil(velocity * world.duration);
};

var initCoins = function initCoins(world, mode) {
  world.coins = generateCoins(world, 0);
  // world.coins = []
};

var initObstacles = function initObstacles(world, mode) {
  world.obstacles = generateObstacles(world, 0);
  //console.log(world.obstacles)
  //world.obstacles = []
};

var initMileStones = function initMileStones(world, mode) {
  world.mileStones = generateMileStones(world, 0);
};

var initBeforeSelect = function initBeforeSelect(world) {
  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  // initSong(world)

  // 生成一分钟的随机路径作为背景
  world.totalDistance = Math.ceil(_config2.default.RUN_VEC * 1000 * _config2.default.BACKGROUND_LINE_DURATION);
  initLine(world, opt.lineWidth, opt.dWidth);

  world.coins = [];
  world.obstacles = [];
  // world.mileStones = []

  // initTouch(world, mode)
  // initSong(world, mode)
  // initLine(world, mode)
  // initCoins(world, mode)
  // initObstacles(world, mode)
  // initBackground(world, mode)

  // world.score = 0
  world.ball = {
    distance: 0,
    songDistance: 0,
    index: 0,
    x: 0,
    y: _config2.default.BALL.HEIGHT,
    size: _config2.default.BALL.SIZE,
    color: _config2.default.BALL.COLOR,
    yJumpDirection: 0, //0 默认方向，无意义 1 向上 2 向下
    // yInitV: config.INIT_Y_V, //y轴初始速度
    SWITCH_DISTANCE: 0, //切换操作x轴上已经走出去的距离
    // position: calculated by translateCoordinateSystem
    buffManager: {}

    // world.ball = new Ball()

  };world.movingCoins = [];
  // world.score = 0
  // world.totalDistance = 0
  world.currentSongLength = 0;
  world.cmd = _config2.default.CMD.NONE;
  world.pathes.start = 0;
  world.pathes.end = 0;
  world.coins.start = 0;
  world.coins.end = 0;
  world.obstacles.start = 0;
  world.obstacles.end = 0;
  world.runVec = _config2.default.RUN_VEC;
  world.particles = [];
  // world.mileStones.start = 0
  // world.mileStones.end = 0
};

exports.initBeforeSelect = initBeforeSelect;
exports.initSong = initSong;

// class Ball {
//   constructor() {
//     this._distance = 0,
//     this.index = 0,
//     this.x = 0,
//     this.y = config.BALL.HEIGHT,
//     this.size = config.BALL.SIZE,
//     this.color = config.BALL.COLOR,
//     this.yJumpDirection = 0, //0 默认方向，无意义 1 向上 2 向下
//     this.SWITCH_DISTANCE = 0, //切换操作x轴上已经走出去的距离
//     this.buffManager = {}
//   }

//   set distance(d) {
//     if (this._distance > d) {
//       debugger
//     }

//     this._distance = d
//   }

//   get distance() {
//     return this._distance
//   }
// }

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AssetsLoader = function () {
  function AssetsLoader() {
    _classCallCheck(this, AssetsLoader);
  }

  _createClass(AssetsLoader, null, [{
    key: 'load',
    value: function load(key, res, cb) {
      // res = res.replace('http', 'https')
      wx.downloadFile({
        url: res,
        success: function success(r) {
          var _this = this;

          var path = r.tempFilePath;
          Laya.loader.load([path], Laya.Handler.create(this, function () {
            if (!_this._world.assets) {
              _this._temp[key] = Laya.loader.getRes(path);
            } else {
              _this._world.assets[key] = Laya.loader.getRes(path);
            }
            if (_this.cbs[key]) {
              _this.cbs[key]();
            }
            cb && cb();
          }));
        },
        fail: function fail(err) {
          console.error(err);
        }
      });
    }
  }, {
    key: 'loaded',
    value: function loaded(key, cb) {
      if (this[key]) {
        cb();
      } else {
        this.cbs[key] = cb;
      }
    }
  }, {
    key: 'init',
    value: function init(world, cb) {
      var _this2 = this;

      if (this._loaded) {
        world.assets = this._assets;
        cb();
        return;
      }
      this._world = world;
      var uiRes = _config2.default.UI_RES;
      var assets = [];

      for (var name in uiRes) {
        var res = uiRes[name];
        if (typeof res === 'string') {
          assets.push(res);
        } else {
          for (var i = 0; i < res.NUMBER; ++i) {
            assets.push('' + res.PATH + i + '.png');
          }
        }
      }

      Laya.loader.load(assets, Laya.Handler.create(this, function () {
        var _assets$buffIcon;

        var assets = {};

        assets.tap = Laya.loader.getRes(_config2.default.UI_RES.TAP);
        assets.good = Laya.loader.getRes(_config2.default.UI_RES.GOOD);
        assets.perfect = Laya.loader.getRes(_config2.default.UI_RES.PERFECT);
        assets.miss = Laya.loader.getRes(_config2.default.UI_RES.MISS);
        assets.earphone = Laya.loader.getRes(_config2.default.UI_RES.EARPHONE);

        assets.note = Laya.loader.getRes(_config2.default.UI_RES.NOTE);
        assets.continue = Laya.loader.getRes(_config2.default.UI_RES.CONTINUE);
        assets.obs = Laya.loader.getRes(_config2.default.UI_RES.OBS);
        assets.collided_obs = Laya.loader.getRes(_config2.default.UI_RES.COLLIDED_OBS);
        assets.upRes = Laya.loader.getRes(_config2.default.UI_RES.UP);
        assets.settingRes = Laya.loader.getRes(_config2.default.UI_RES.SETTING);
        assets.buffIcon = (_assets$buffIcon = {}, _defineProperty(_assets$buffIcon, _config2.default.BUFF.MAGNET, Laya.loader.getRes(_config2.default.UI_RES.MAGNET)), _defineProperty(_assets$buffIcon, _config2.default.BUFF.X2, Laya.loader.getRes(_config2.default.UI_RES.X2)), _defineProperty(_assets$buffIcon, _config2.default.BUFF.SHIELD, Laya.loader.getRes(_config2.default.UI_RES.SHIELD)), _assets$buffIcon);
        assets.def = Laya.loader.getRes(_config2.default.UI_RES.DEF);
        // assets.plus = Laya.loader.getRes(config.UI_RES.PLUS)
        // assets.minus = Laya.loader.getRes(config.UI_RES.MINUS)
        assets.slider = Laya.loader.getRes(_config2.default.UI_RES.SLIDER);
        assets.sliderBar = Laya.loader.getRes(_config2.default.UI_RES.SLIDER_BAR);
        assets.accept = Laya.loader.getRes(_config2.default.UI_RES.ACCEPT);
        assets.cancel = Laya.loader.getRes(_config2.default.UI_RES.CANCEL);
        assets.starUnkindled = Laya.loader.getRes(_config2.default.UI_RES.STAR_UNKINDLED);
        assets.shareTip = Laya.loader.getRes(_config2.default.UI_RES.SHARE_TIP);
        assets.champion = Laya.loader.getRes(_config2.default.UI_RES.CHAMPION);
        //assets.left = Laya.loader.getRes(config.UI_RES.LEFT)
        //assets.right = Laya.loader.getRes(config.UI_RES.RIGHT)
        //assets.scoreStar = Laya.loader.getRes(config.UI_RES.SCORE_STAR)
        assets.scoreStarUnkindled = Laya.loader.getRes(_config2.default.UI_RES.SCORE_STAR_UNKINDLED);
        assets.list = Laya.loader.getRes(_config2.default.UI_RES.LIST);
        assets.list_highlight = Laya.loader.getRes(_config2.default.UI_RES.LIST_HIGHLIGHT);
        assets.new = Laya.loader.getRes(_config2.default.UI_RES.NEW);
        assets.expandLeaderboard = Laya.loader.getRes(_config2.default.UI_RES.EXPAND_LEADERBOARD);
        assets.songBackground = Laya.loader.getRes(_config2.default.UI_RES.SONG_BACKGROUND);
        assets.scoreBackground = Laya.loader.getRes(_config2.default.UI_RES.SCORE_BACKGROUND);
        assets.invited = Laya.loader.getRes(_config2.default.UI_RES.INVITED);
        assets.colorBg = Laya.loader.getRes(_config2.default.UI_RES.COLOR_BG);
        assets.noteMissed = Laya.loader.getRes(_config2.default.UI_RES.NOTE_MISSED);
        assets.restart = Laya.loader.getRes(_config2.default.UI_RES.RESTART);
        assets.home = Laya.loader.getRes(_config2.default.UI_RES.HOME);
        assets.fog = Laya.loader.getRes(_config2.default.UI_RES.FOG);

        assets.hearts = [];
        for (var _i = 0; _i <= 10; _i++) {
          assets.hearts.push(Laya.loader.getRes('' + _config2.default.UI_RES.HEART.PATH + _i + '.png'));
        }
        assets.witness = [];
        for (var _i2 = 0; _i2 < 5; _i2++) {
          assets.witness.push(Laya.loader.getRes('' + _config2.default.UI_RES.WITNESS.PATH + _i2 + '.png'));
        }
        assets.stop = [];
        for (var _i3 = 0; _i3 < 5; _i3++) {
          assets.stop.push(Laya.loader.getRes('' + _config2.default.UI_RES.STOP.PATH + _i3 + '.png'));
        }
        assets.left = [];
        for (var _i4 = 0; _i4 < 5; _i4++) {
          assets.left.push(Laya.loader.getRes('' + _config2.default.UI_RES.LEFT.PATH + _i4 + '.png'));
        }
        assets.right = [];
        for (var _i5 = 0; _i5 < 5; _i5++) {
          assets.right.push(Laya.loader.getRes('' + _config2.default.UI_RES.RIGHT.PATH + _i5 + '.png'));
        }
        assets.starKindled = [];
        for (var _i6 = 0; _i6 < 5; _i6++) {
          assets.starKindled.push(Laya.loader.getRes('' + _config2.default.UI_RES.STAR.PATH + _i6 + '.png'));
        }
        assets.share = [];
        for (var _i7 = 0; _i7 < 5; _i7++) {
          assets.share.push(Laya.loader.getRes('' + _config2.default.UI_RES.SHARE.PATH + _i7 + '.png'));
        }
        assets.next = [];
        for (var _i8 = 0; _i8 < 5; _i8++) {
          assets.next.push(Laya.loader.getRes('' + _config2.default.UI_RES.NEXT.PATH + _i8 + '.png'));
        }
        assets.close = [];
        for (var _i9 = 0; _i9 < 5; _i9++) {
          assets.close.push(Laya.loader.getRes('' + _config2.default.UI_RES.CLOSE.PATH + _i9 + '.png'));
        }
        assets.expand = [];
        for (var _i10 = 0; _i10 < 5; _i10++) {
          assets.expand.push(Laya.loader.getRes('' + _config2.default.UI_RES.EXPAND.PATH + _i10 + '.png'));
        }
        assets.lock = [];
        for (var _i11 = 0; _i11 < 5; _i11++) {
          assets.lock.push(Laya.loader.getRes('' + _config2.default.UI_RES.LOCK.PATH + _i11 + '.png'));
        }
        assets.circles = [];
        for (var _i12 = 0; _i12 < 5; _i12++) {
          assets.circles.push(Laya.loader.getRes('' + _config2.default.UI_RES.CIRCLE.PATH + _i12 + '.png'));
        }
        assets.borders = [];
        for (var _i13 = 0; _i13 < 5; _i13++) {
          assets.borders.push(Laya.loader.getRes('' + _config2.default.UI_RES.BORDER.PATH + _i13 + '.png'));
        }
        assets.scoreStar = [];
        for (var _i14 = 0; _i14 < 5; _i14++) {
          assets.scoreStar.push(Laya.loader.getRes('' + _config2.default.UI_RES.SCORE_STAR.PATH + _i14 + '.png'));
        }
        assets.combo = [];
        for (var _i15 = 0; _i15 < 4; _i15++) {
          assets.combo.push(Laya.loader.getRes('' + _config2.default.UI_RES.COMBO.PATH + _i15 + '.png'));
        }
        assets.levelNotes = [];
        for (var _i16 = 0; _i16 < 5; _i16++) {
          assets.levelNotes.push(Laya.loader.getRes('' + _config2.default.UI_RES.LEVEL_NOTE.PATH + _i16 + '.png'));
        }
        assets.randomNotes = assets.levelNotes.slice();
        for (var _i17 = 0; _i17 < 6; _i17++) {
          assets.randomNotes.push(Laya.loader.getRes('' + _config2.default.UI_RES.RANDOM_NOTE.PATH + _i17 + '.png'));
        }
        //assets.combo20 = Laya.loader.getRes(config.UI_RES.COMBO20)

        Object.assign(assets, _this2._temp);

        world.assets = assets;
        _this2._assets = assets;

        for (var _name in assets) {
          _this2[_name] = assets[_name];
        }
        for (var _name2 in _this2._temp) {
          _this2[_name2] = _this2._temp[_name2];
        }
        _this2._loaded = true;
        cb();
      }));
    }
  }]);

  return AssetsLoader;
}();

AssetsLoader.cbs = {};
AssetsLoader._temp = {};
AssetsLoader._loaded = false;
AssetsLoader._assets = {};
exports.default = AssetsLoader;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(19);

var _config2 = _interopRequireDefault(_config);

var _config3 = __webpack_require__(0);

var _config4 = _interopRequireDefault(_config3);

var _utils = __webpack_require__(1);

var _game = __webpack_require__(13);

var _game2 = _interopRequireDefault(_game);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LoadingAnimation = function () {
  function LoadingAnimation() {
    _classCallCheck(this, LoadingAnimation);
  }

  _createClass(LoadingAnimation, null, [{
    key: 'init',
    value: function init(world) {
      var _ballRadius;

      this._loading = false;

      this._world = world;
      this._ballRadius = _config4.default.BALL_RADIUS; // [23, 27, 29, 30, 33, 35, 36, 37]
      this._orbitRaduis = _config4.default.BALL_ORBIT_RADIUS; // 57

      this._currentMinIndex = 0;
      this._frameCnt = 0;
      this._stop = 0;
      this._notFirst = false;

      var orbitRaduisDividedBySqrt2 = Math.ceil(this._orbitRaduis / Math.sqrt(2));

      this._renderCirclePos = [{
        x: 0,
        y: -this._orbitRaduis
      }, {
        x: orbitRaduisDividedBySqrt2,
        y: -orbitRaduisDividedBySqrt2
      }, {
        x: this._orbitRaduis,
        y: 0
      }, {
        x: orbitRaduisDividedBySqrt2,
        y: orbitRaduisDividedBySqrt2
      }, {
        x: 0,
        y: this._orbitRaduis
      }, {
        x: -orbitRaduisDividedBySqrt2,
        y: orbitRaduisDividedBySqrt2
      }, {
        x: -this._orbitRaduis,
        y: 0
      }, {
        x: -orbitRaduisDividedBySqrt2,
        y: -orbitRaduisDividedBySqrt2
      }];

      (_ballRadius = this._ballRadius).push.apply(_ballRadius, _toConsumableArray(this._ballRadius));
    }
  }, {
    key: '_startLoading',
    value: function _startLoading(text) {
      this._loading = true;
      this._sp = new Laya.Sprite();
      this._world.ball.sprite.addChild(this._sp);

      //this._text = createTextSprite(Laya.stage, gameConfig.LoadingAnimation.WORDING)
      //this._text.width = config.SCREEN_WIDTH
      //this._text.text = text
      requestAnimationFrame(this.update.bind(this));
      --this._stop;
    }
  }, {
    key: 'start',
    value: function start(text) {
      var _this = this;

      if (this._world.ball && this._world.ball.sprite) {
        this._startLoading(text);
      } else {
        _utils.emitter.on('ballCreated', function () {
          _utils.emitter.removeAllListeners('ballCreated');
          _this._startLoading(text);
          _utils.emitter.emit('startLoading');
        });
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      var _this2 = this;

      if (this._world.ball) {
        if (this._loading) {
          console.log('loading stop');
          this._loading = false;
          this._sp.destroy();
        }
      } else {
        _utils.emitter.on('startLoading', function () {
          _utils.emitter.removeAllListeners('startLoading');
          if (_this2._loading) {
            console.log('loading stop');
            _this2._loading = false;
            _this2._sp.destroy();
          }
        });
      }
    }
  }, {
    key: 'update',
    value: function update() {
      var _this3 = this;

      this._sp.graphics.clear();

      var ball = this._world.ball;
      var camera = this._world.camera;

      var color = this._world.mainColor;

      // this._sp.pos(ball.position.x - camera.leftTopPoint.x, ball.position.y - camera.leftTopPoint.y)
      this._renderCirclePos.forEach(function (_ref, index) {
        var x = _ref.x,
            y = _ref.y;

        _this3._sp.graphics.drawCircle(x, y, _this3._ballRadius[_this3._currentMinIndex + index], color);
      });

      this._frameCnt++;

      if (this._frameCnt === _config4.default.LOADING_UPDATE_INTERVAL) {
        this._frameCnt = 0;
        this._currentMinIndex++;
        this._currentMinIndex %= 8;
      }

      if (this._loading) {
        requestAnimationFrame(this.update.bind(this));
      }
    }
  }, {
    key: 'loading',
    get: function get() {
      return this._loading;
    }
  }]);

  return LoadingAnimation;
}();

exports.default = LoadingAnimation;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _common = __webpack_require__(28);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var getArgumentsXY = function getArgumentsXY(args) {
  if (args.length === 1) {
    return { x: args[0].x, y: args[0].y };
  }
  return { x: args[0], y: args[1] };
};

var getArgumentsRatio = function getArgumentsRatio(args) {
  if (args.length === 1) {
    return { dx: args[0], dy: args[0] };
  }
  return { dx: args[0], dy: args[1] };
};

var getArgumentsLine = function getArgumentsLine(args) {
  if (args.length === 1) {
    return { a: args[0].a, b: args[0].b };
  }
  return { a: args[0], b: args[1] };
};

// TODO private & arguments

var Point = function () {
  function Point() {
    _classCallCheck(this, Point);

    var _getArgumentsXY = getArgumentsXY(arguments),
        x = _getArgumentsXY.x,
        y = _getArgumentsXY.y;

    this._x = x;
    this._y = y;
  }

  _createClass(Point, [{
    key: 'reset',
    value: function reset() {
      var _getArgumentsXY2 = getArgumentsXY(arguments),
          x = _getArgumentsXY2.x,
          y = _getArgumentsXY2.y;

      this._x = x;
      this._y = y;
      this._clear();
    }
  }, {
    key: '_clear',
    value: function _clear() {
      this._length = undefined;
    }
  }, {
    key: 'ADD',
    value: function ADD() {
      var _getArgumentsXY3 = getArgumentsXY(arguments),
          x = _getArgumentsXY3.x,
          y = _getArgumentsXY3.y;

      return new Point(this._x + x, this._y + y);
    }
  }, {
    key: 'SELF_ADD',
    value: function SELF_ADD() {
      var _getArgumentsXY4 = getArgumentsXY(arguments),
          x = _getArgumentsXY4.x,
          y = _getArgumentsXY4.y;

      this._x += x;
      this._y += y;
      this._clear();
      return this;
    }
  }, {
    key: 'ADD_LENGTH',
    value: function ADD_LENGTH(length) {
      var newLength = this.length + length;
      return this.MUL(newLength / this.length);
    }
  }, {
    key: 'SUB',
    value: function SUB() {
      var _getArgumentsXY5 = getArgumentsXY(arguments),
          x = _getArgumentsXY5.x,
          y = _getArgumentsXY5.y;

      return new Point(this._x - x, this._y - y);
    }
  }, {
    key: 'SELF_SUB',
    value: function SELF_SUB() {
      var _getArgumentsXY6 = getArgumentsXY(arguments),
          x = _getArgumentsXY6.x,
          y = _getArgumentsXY6.y;

      this._x -= x;
      this._y -= y;
      this._clear();
      return this;
    }
  }, {
    key: 'MUL',
    value: function MUL() {
      var _getArgumentsRatio = getArgumentsRatio(arguments),
          dx = _getArgumentsRatio.dx,
          dy = _getArgumentsRatio.dy;

      return new Point(this._x * dx, this._y * dy);
    }
  }, {
    key: 'SELF_MUL',
    value: function SELF_MUL() {
      var _getArgumentsRatio2 = getArgumentsRatio(arguments),
          dx = _getArgumentsRatio2.dx,
          dy = _getArgumentsRatio2.dy;

      this._x *= dx;
      this._y *= dy;
      this._clear();
      return this;
    }
  }, {
    key: 'DIV',
    value: function DIV() {
      var _getArgumentsRatio3 = getArgumentsRatio(arguments),
          dx = _getArgumentsRatio3.dx,
          dy = _getArgumentsRatio3.dy;

      return new Point(this._x / dx, this._y / dy);
    }
  }, {
    key: 'SELF_DIV',
    value: function SELF_DIV() {
      var _getArgumentsRatio4 = getArgumentsRatio(arguments),
          dx = _getArgumentsRatio4.dx,
          dy = _getArgumentsRatio4.dy;

      this._x /= dx;
      this._y /= dy;
      this._clear();
      return this;
    }
  }, {
    key: 'FLOOR',
    value: function FLOOR() {
      return new Point(Math.floor(this._x), Math.floor(this._y));
    }
  }, {
    key: 'CROSS',
    value: function CROSS() {
      var _getArgumentsXY7 = getArgumentsXY(arguments),
          x = _getArgumentsXY7.x,
          y = _getArgumentsXY7.y;

      return this._x * y - this._y * x;
    }
  }, {
    key: 'DOT',
    value: function DOT() {
      var _getArgumentsXY8 = getArgumentsXY(arguments),
          x = _getArgumentsXY8.x,
          y = _getArgumentsXY8.y;

      return this._x * x + this._y * y;
    }
  }, {
    key: 'COS',
    value: function COS() {
      var _getArgumentsXY9 = getArgumentsXY(arguments),
          x = _getArgumentsXY9.x,
          y = _getArgumentsXY9.y;

      return this.DOT(x, y) / this.len() / p.lenth;
    }
  }, {
    key: 'SIN',
    value: function SIN() {
      var _getArgumentsXY10 = getArgumentsXY(arguments),
          x = _getArgumentsXY10.x,
          y = _getArgumentsXY10.y;

      return Math.abs(this.CROSS(x, y) / this.lenth / p.length);
    }
  }, {
    key: 'SELF_NEG',
    value: function SELF_NEG() {
      this._x = -this._x;
      this._y = -this._y;
      return this;
    }
  }, {
    key: 'NEG',
    value: function NEG() {
      return new Point(-this._x, -this._y);
    }
  }, {
    key: 'ROTATE',
    value: function ROTATE(radian) {
      var c = Math.cos(radian);
      var s = Math.sin(radian);

      return new Point(this._x * c - this._y * s, this._y * c + this._x * s);
    }
  }, {
    key: 'SELF_ROTATE',
    value: function SELF_ROTATE(radian) {
      var c = Math.cos(radian);
      var s = Math.sin(radian);

      var x = this._x * c - this._y * s;
      var y = this._y * c + this._x * s;
      this._x = x;
      this._y = y;
    }
  }, {
    key: 'distance2',
    value: function distance2() {
      var _getArgumentsXY11 = getArgumentsXY(arguments),
          x = _getArgumentsXY11.x,
          y = _getArgumentsXY11.y;

      return (this._x - x) * (this._x - x) + (this._y - y) * (this._y - y);
    }
  }, {
    key: 'distance',
    value: function distance() {
      var _getArgumentsXY12 = getArgumentsXY(arguments),
          x = _getArgumentsXY12.x,
          y = _getArgumentsXY12.y;

      return Math.pow((this._x - x) * (this._x - x) + (this._y - y) * (this._y - y), 0.5);
    }
  }, {
    key: 'normalize',
    value: function normalize() {
      if (this.length < 0.0001) {
        this._x = 0;
        this._y = 0;
      } else {
        this._x /= this.length;
        this._y /= this.length;
      }
      this._clear();

      return this;
    }
  }, {
    key: 'disToSeg',
    value: function disToSeg() {
      var _getArgumentsLine = getArgumentsLine(arguments),
          a = _getArgumentsLine.a,
          b = _getArgumentsLine.b;

      if ((0, _common.dcmp)(this.SUB(a).DOT(b.SUB(a))) <= 0) {
        return this.distance(a);
      }
      if ((0, _common.dcmp)(this.SUB(b).DOT(a.SUB(b))) <= 0) {
        return this.distance(b);
      }
      return Math.abs(this.SUB(a).CROSS(b.SUB(a))) / a.distance(b);
    }
  }, {
    key: 'equal',
    value: function equal() {
      var _getArgumentsXY13 = getArgumentsXY(arguments),
          x = _getArgumentsXY13.x,
          y = _getArgumentsXY13.y;

      return this._x === x && this._y === y;
    }
  }, {
    key: 'length',
    get: function get() {
      if (!this._length) {
        this._length = Math.sqrt(this._x * this._x + this._y * this._y);
      }

      return this._length;
    }
  }, {
    key: 'args',
    get: function get() {
      return [this._x, this._y];
    }
  }, {
    key: 'clone',
    get: function get() {
      return new Point(this._x, this._y);
    }
  }, {
    key: 'x',
    get: function get() {
      return this._x;
    },
    set: function set(x) {
      this._x = x;
      this._clear();
    }
  }, {
    key: 'y',
    get: function get() {
      return this._y;
    },
    set: function set(y) {
      this._y = y;
      this._clear();
    }
  }], [{
    key: 'inline',
    value: function inline(a, b, c) {
      return (0, _common.dcmp)(b.SUB(a).CROSS(c.SUB(a))) === 0;
    }

    // -1 内
    // 0 上
    // 1 外

  }, {
    key: 'btw',
    value: function btw(a, b, p) {
      return (0, _common.dcmp)(a.SUB(p).DOT(b.SUB(p)));
    }
  }]);

  return Point;
}();

exports.default = Point;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Storage = function () {
  function Storage() {
    _classCallCheck(this, Storage);
  }

  _createClass(Storage, null, [{
    key: 'storeFriendsScore',
    value: function storeFriendsScore(res, songId) {
      wx.setStorage({
        key: 'friendsScore_' + songId,
        data: res,
        fail: function fail(err) {
          console.log('storeFriendsScore fail', err);
        }
      });
    }
    // static firstOpen() {
    //   const firstOpen = wx.getStorageSync('firstOpen')
    //   if (!firstOpen) {
    //     wx.setStorage({
    //       key: 'firstOpen',
    //       data: true
    //     })
    //     return true
    //   }

    //   return false
    // }

  }, {
    key: 'fetchFriendsScore',
    value: function fetchFriendsScore(songId) {
      var val = wx.getStorageSync('friendsScore_' + songId);
      if (!val) {
        return undefined;
      }

      val.user_info.push(val.my_user_info);
      val.user_info.forEach(function (user_info_item) {
        user_info_item.score_info.forEach(function (score_info_item) {
          if (score_info_item.type === 1) {
            user_info_item.distance_score = score_info_item.score;
          }
        });
        if (user_info_item.distance_score === undefined) {
          user_info_item.distance_score = Number.MAX_VALUE;
        }
      });

      val.user_info.sort(function (a, b) {
        // return a.score_info[0].score > b.score_info[0].score
        return a.distance_score > b.distance_score;
      });

      // val.user_info = [val.my_user_info]

      return val;
    }
  }, {
    key: 'updateMyScore',
    value: function updateMyScore(songId, myScore) {
      var val = wx.getStorageSync('friendsScore_' + songId);

      if (!val) {
        console.log('can not find friend score info of song id:', songId);
        return;
      }

      if (val.my_user_info) {
        val.my_user_info.score_info = myScore.score_info;
      } else {
        val.my_user_info = myScore;
      }

      wx.setStorage({
        key: 'friendsScore_' + songId,
        data: val,
        fail: function fail(err) {
          console.log('storeFriendsScore fail', err);
        }
      });
    }
  }, {
    key: 'setDelayTime',
    value: function setDelayTime(time) {
      wx.setStorageSync('delayTime', time);
    }
  }, {
    key: 'getDelayTime',
    value: function getDelayTime() {
      var time = wx.getStorageSync('delayTime');
      if (!time) {
        time = _config2.default.GEN_TIME;
        wx.setStorageSync('delayTime', time);
      }

      return time;
    }
  }]);

  return Storage;
}();

Storage._friendsScore = {};
exports.default = Storage;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  SCREEN_WIDTH: 1242,
  SCREEN_HEIGHT: 2208,
  FRAME_PRE_SECOND: 60,

  //BOOT_PIC: './assets/boot.jpg',
  BOOT_PIC: 'http://139.199.73.145/tapMusic/assets/boot.jpg',
  BOOT_STOP_TIME: 1000,
  BOOT_CREATE_BALL_TIME: 5000,
  BOOT_BALL_MOVE_TIME: 5000,
  BALL_CENTER_X: 385,
  BALL_CENTER_Y: 867,
  PARTICLE_PRE_FRAME: 5,
  PARTICLE_MAX_SIZE: 3,
  START_HUE: 230,

  APPID: 'wxd3ae9f954fda16cc',
  VERSION: '0.0.1'
};

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reset = exports.generateMileStones = exports.generateObstacles = exports.generateCoins = exports.generateLines = undefined;

var _generateLines = __webpack_require__(61);

var _generateLines2 = _interopRequireDefault(_generateLines);

var _generateCoins = __webpack_require__(60);

var _generateCoins2 = _interopRequireDefault(_generateCoins);

var _generateObstacles = __webpack_require__(63);

var _generateObstacles2 = _interopRequireDefault(_generateObstacles);

var _generateMileStones = __webpack_require__(62);

var _generateMileStones2 = _interopRequireDefault(_generateMileStones);

var _reset = __webpack_require__(64);

var _reset2 = _interopRequireDefault(_reset);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.generateLines = _generateLines2.default;
exports.generateCoins = _generateCoins2.default;
exports.generateObstacles = _generateObstacles2.default;
exports.generateMileStones = _generateMileStones2.default;
exports.reset = _reset2.default;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(1);

var _mask = __webpack_require__(27);

var _mask2 = _interopRequireDefault(_mask);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RankItem = function (_Laya$Box) {
  _inherits(RankItem, _Laya$Box);

  _createClass(RankItem, null, [{
    key: 'init',
    value: function init(world) {
      this._world = world;

      var c = _config2.default.LEADER_BOARD;

      this._itemArgs = (0, _utils.getScaleArgs)(c.ITEM);
      this._rankArgs = (0, _utils.getScaleArgs)(c.RANK);
      this._avatarArgs = (0, _utils.getScaleArgs)(c.AVATAR);
      this._nicknameArgs = (0, _utils.getScaleArgs)(c.NICKNAME);
      this._scoreArgs = (0, _utils.getScaleArgs)(c.SCORE);
      this._closeArgs = (0, _utils.getScaleArgs)(c.CLOSE);

      this._textConfig = {
        font: 'Helvetica',
        height: this._itemArgs.HEIGHT,
        align: 'center',
        valign: 'middle',
        color: '#FFFFFF',
        fontSize: 48,
        zOrder: 100
      };
    }
  }]);

  function RankItem() {
    _classCallCheck(this, RankItem);

    var _this = _possibleConstructorReturn(this, (RankItem.__proto__ || Object.getPrototypeOf(RankItem)).call(this));

    var itemArgs = _this.constructor._itemArgs;
    var avatarArgs = _this.constructor._avatarArgs;
    var rankArgs = _this.constructor._rankArgs;
    var nicknameArgs = _this.constructor._nicknameArgs;
    var scoreArgs = _this.constructor._scoreArgs;
    var textConfig = _this.constructor._textConfig;

    _this.size(itemArgs.WIDTH, itemArgs.HEIGHT);

    _this.avatar = new Laya.Sprite();
    _this.avatar.width = _this.avatar.height = avatarArgs.RADIUS;
    _this.avatar.pos(rankArgs.WIDTH, (itemArgs.HEIGHT - avatarArgs.RADIUS) / 2);
    _this.addChild(_this.avatar);

    _this.rankText = new Laya.Text();
    Object.assign(_this.rankText, textConfig);
    _this.rankText.width = rankArgs.WIDTH;
    _this.rankText.pos(0, 0);
    _this.rankText.color = _this.constructor._world.mainColor;
    _this.addChild(_this.rankText);

    _this.nicknameText = new Laya.Text();
    Object.assign(_this.nicknameText, textConfig);
    _this.nicknameText.width = nicknameArgs.WIDTH;
    _this.nicknameText.align = 'left';
    _this.nicknameText.pos(rankArgs.WIDTH + avatarArgs.RADIUS + nicknameArgs.X, 0);
    _this.addChild(_this.nicknameText);

    _this.scoreText = new Laya.Text();
    Object.assign(_this.scoreText, textConfig);
    _this.scoreText.width = scoreArgs.WIDTH;
    _this.scoreText.align = 'right';
    _this.scoreText.color = _this.constructor._world.mainColor;
    _this.scoreText.pos(itemArgs.WIDTH - scoreArgs.WIDTH, 0);
    _this.addChild(_this.scoreText);
    return _this;
  }

  _createClass(RankItem, [{
    key: 'setAvatar',
    value: function setAvatar(src) {
      var _this2 = this;

      var avatarArgs = this.constructor._avatarArgs;

      this.avatar.graphics.clear();

      // this.avatar.graphics.loadImage(src, 0, 0, avatarArgs.RADIUS, config.LEADER_BOARD.LEADER_BOARD_AVATAR_WIDTH)
      // src = src.replace('http', 'https')
      this.avatar.loadImage(src, 0, 0, avatarArgs.RADIUS, avatarArgs.RADIUS, Laya.Handler.create(this, function () {
        _this2.constructor._avatarMask.forEach(function (path) {
          _this2.avatar.graphics.drawPath(-1, -1, path, {
            fillStyle: '#303036'
          });
        });
      }));
    }
  }]);

  return RankItem;
}(Laya.Box);

var LeaderBoard = function (_Panel) {
  _inherits(LeaderBoard, _Panel);

  function LeaderBoard() {
    _classCallCheck(this, LeaderBoard);

    return _possibleConstructorReturn(this, (LeaderBoard.__proto__ || Object.getPrototypeOf(LeaderBoard)).apply(this, arguments));
  }

  _createClass(LeaderBoard, null, [{
    key: 'onLoad',
    value: function onLoad(userInfo) {
      var _this4 = this;

      var world = this._world;
      var c = _config2.default.LEADER_BOARD;

      var leaderBoardArgs = this._leaderboardArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD);
      var closeArgs = this._closeArgs = (0, _utils.getScaleArgs)(c.CLOSE);
      this._championArgs = (0, _utils.getScaleArgs)(c.CHAMPION);

      RankItem.init(world);
      RankItem._avatarMask = (0, _mask2.default)(RankItem._avatarArgs.RADIUS);

      this._textConfig = RankItem._textConfig;
      this._itemArgs = RankItem._itemArgs;

      this._leaderboard = new Laya.Sprite();
      this._leaderboard.pos(leaderBoardArgs.X, leaderBoardArgs.Y);

      (0, _utils.drawRoundedRect)(this._leaderboard, 0, 0, leaderBoardArgs.WIDTH, leaderBoardArgs.HEIGHT, leaderBoardArgs.RADIUS, { fillStyle: 'rgba(61,62,71,0.59)' });

      // this._leaderboard.graphics.drawPath(0, 0, [
      //   ['moveTo', config.LEADER_BOARD.BORDER_RADIUS, 0],
      //   ['lineTo', config.LEADER_BOARD.LEADER_BOARD_WIDTH - config.LEADER_BOARD.BORDER_RADIUS, 0],
      //   ['arcTo', config.LEADER_BOARD.LEADER_BOARD_WIDTH, 0, config.LEADER_BOARD.LEADER_BOARD_WIDTH, config.LEADER_BOARD.BORDER_RADIUS, config.LEADER_BOARD.BORDER_RADIUS],
      //   ['lineTo', config.LEADER_BOARD.LEADER_BOARD_WIDTH, config.LEADER_BOARD.LEADER_BOARD_HEIGHT - config.LEADER_BOARD.BORDER_RADIUS],
      //   ['arcTo', config.LEADER_BOARD.LEADER_BOARD_WIDTH, config.LEADER_BOARD.LEADER_BOARD_HEIGHT, config.LEADER_BOARD.LEADER_BOARD_WIDTH - config.LEADER_BOARD.BORDER_RADIUS, config.LEADER_BOARD.LEADER_BOARD_HEIGHT, config.LEADER_BOARD.BORDER_RADIUS],
      //   ['lineTo', config.LEADER_BOARD.BORDER_RADIUS, config.LEADER_BOARD.LEADER_BOARD_HEIGHT],
      //   ['arcTo', 0, config.LEADER_BOARD.LEADER_BOARD_HEIGHT, 0, config.LEADER_BOARD.LEADER_BOARD_HEIGHT - config.LEADER_BOARD.BORDER_RADIUS, config.LEADER_BOARD.BORDER_RADIUS],
      //   ['lineTo', 0, config.LEADER_BOARD.BORDER_RADIUS],
      //   ['arcTo', 0, 0, config.LEADER_BOARD.BORDER_RADIUS, 0, config.LEADER_BOARD.BORDER_RADIUS],
      //   ['closePath']
      // ], {
      //   fillStyle: 'rgba(61,62,71,0.59)'
      // })

      this._panel.addChild(this._leaderboard);

      this._songTitleText = new Laya.Text();
      Object.assign(this._songTitleText, this._textConfig);
      this._leaderboard.addChild(this._songTitleText);
      this._songTitleText.text = this._world.songConfig.title;
      this._songTitleText.fontSize = 72;
      this._songTitleText.width = leaderBoardArgs.WIDTH;
      this._songTitleText.pos(0, 64);

      this._descriptionText = new Laya.Text();
      Object.assign(this._descriptionText, this._textConfig);
      this._leaderboard.addChild(this._descriptionText);
      this._descriptionText.text = '分数排行';
      this._descriptionText.color = this._world.mainColor;
      this._descriptionText.fontSize = 42;
      this._descriptionText.width = leaderBoardArgs.WIDTH;
      this._descriptionText.pos(0, 144);

      this._closeButton = new Laya.Sprite();
      this._closeButton.graphics.drawTexture(this._world.assets.close[this._world.level], 0, 0, closeArgs.WIDTH, closeArgs.WIDTH);
      // 点击区域为X号的两倍
      this._closeButton.pos((_config2.default.SCREEN_WIDTH - closeArgs.WIDTH) / 2, closeArgs.Y);
      this._panel.addChild(this._closeButton);

      var closeArea = new Laya.Sprite();
      closeArea.pos(0, closeArgs.Y - closeArgs.WIDTH);
      closeArea.size(_config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT - closeArgs.Y + closeArgs.WIDTH);
      this._panel.addChild(closeArea);

      closeArea.on(Laya.Event.MOUSE_UP, this, function () {
        _this4._pm.navigateBack();
      });

      this.drawList(userInfo);

      // this._panel.on(Laya.Event.MOUSE_UP, this, () => {
      //   this._pm.destroy()
      //   emitter.emit(config.GAME_EVENT.GAME_PRELOAD, 'start')
      //   this._world.started = true
      // })
    }
  }, {
    key: 'drawList',
    value: function drawList(userInfo) {
      var leaderboardArgs = this._leaderboardArgs;
      var itemArgs = this._itemArgs;

      this.rankList = new Laya.List();

      this.rankList.itemRender = RankItem;
      this.rankList._world = this._world;

      // 水平方向单元格数量
      this.rankList.repeatX = 1;
      // 竖直方向
      this.rankList.repeatY = 7;

      this.rankList.x = (leaderboardArgs.WIDTH - itemArgs.WIDTH) / 3;
      this.rankList.y = 335;

      this.rankList.vScrollBarSkin = "";

      this.rankList.selectEnable = true;
      //this.rankList.selectHandler = new Laya.Handler(this, this.onSelect)
      this.rankList.renderHandler = new Laya.Handler(this, this.updateItem);

      this.rankList.array = userInfo || [];

      this._leaderboard.addChild(this.rankList);
    }
  }, {
    key: 'onSelect',
    value: function onSelect(index) {
      console.log('tap rank list on index:', index);
    }
  }, {
    key: 'updateItem',
    value: function updateItem(cell, index) {
      var itemArgs = this._itemArgs;
      var championArgs = this._championArgs;

      cell.setAvatar(cell._dataSource.headimg);
      // cell.nicknameText.text = '红红火火恍恍惚惚含含糊糊很好很好何厚铧'
      var nickname = cell._dataSource.nickname;
      cell.nicknameText.text = nickname;

      while (cell.nicknameText.textWidth > cell.nicknameText.width) {
        nickname = nickname.substr(0, nickname.length - 1);
        cell.nicknameText.text = nickname + '...';
      }
      if (cell._dataSource.score_info && cell._dataSource.score_info[0]) {
        cell.scoreText.text = cell._dataSource.score_info[0].score;
      } else {
        cell.scoreText.text = 0;
      }

      if (cell.championSp) {
        cell.championSp.graphics.clear();
      }

      if (index === 0) {
        cell.rankText.text = '';

        cell.championSp = new Laya.Sprite();
        cell.championSp.pos(championArgs.X, (itemArgs.HEIGHT - championArgs.HEIGHT) / 2);
        cell.championSp.graphics.drawTexture(this._world.assets.champion, 0, 0, championArgs.WIDTH, championArgs.HEIGHT);
        cell.addChild(cell.championSp);

        cell.scoreText.color = '#FF4C25';
        cell.scoreText.fontSize = 64;
      } else {
        if (cell.championSp) {
          cell.championSp.graphics.clear();
        }
        cell.scoreText.color = this._world.mainColor;
        cell.scoreText.fontSize = 48;
        cell.rankText.text = index + 1;
      }
    }
  }]);

  return LeaderBoard;
}(_panel2.default);

exports.default = LeaderBoard;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _utils = __webpack_require__(1);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  color: '#FFFFFF',
  align: 'center',
  valign: 'middle'
};

var LiveWaitingPanel = function (_Panel) {
  _inherits(LiveWaitingPanel, _Panel);

  function LiveWaitingPanel() {
    _classCallCheck(this, LiveWaitingPanel);

    return _possibleConstructorReturn(this, (LiveWaitingPanel.__proto__ || Object.getPrototypeOf(LiveWaitingPanel)).apply(this, arguments));
  }

  _createClass(LiveWaitingPanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      var _this2 = this;

      var c = _config2.default.LiveWaitingPanel;

      var waitingArgs = (0, _utils.getScaleArgs)(c.WAITING);
      var notStartArgs = (0, _utils.getScaleArgs)(c.NOT_START);
      var playArgs = (0, _utils.getScaleArgs)(c.PLAY);

      var waiting = new Laya.Text();
      this._panel.addChild(waiting);
      Object.assign(waiting, textConfig);
      waiting.text = c.WAITING.TEXT;
      waiting.pos(0, waitingArgs.Y);
      waiting.height = waitingArgs.HEIGHT;
      waiting.fontSize = waitingArgs.RADIUS;

      var notStart = new Laya.Text();
      this._panel.addChild(notStart);
      Object.assign(notStart, textConfig);
      notStart.text = c.NOT_START.TEXT;
      notStart.pos(0, notStartArgs.Y);
      notStart.height = notStartArgs.HEIGHT;
      notStart.fontSize = notStartArgs.RADIUS;
      notStart.color = (0, _utils.alphaColor)(this._world.mainColor, c.NOT_START.ALPHA);

      var play = new Laya.Text();
      // this._panel.addChild(play)
      Object.assign(play, textConfig);
      play.text = c.PLAY.TEXT;
      // play.pos(playArgs.X, playArgs.Y + (playArgs.HEIGHT - playArgs.SIZE) / 2)
      play.pos(0, 0);
      play.size(playArgs.WIDTH, playArgs.HEIGHT);
      play.fontSize = 36;
      play.color = this._world.mainColor;

      var playBorder = new Laya.Sprite();
      this._panel.addChild(playBorder);
      (0, _utils.drawRoundedRect)(playBorder, 0, 0, playArgs.WIDTH, playArgs.HEIGHT, playArgs.RADIUS, null, { strokeStyle: this._world.mainColor, lineWidth: c.PLAY.BORDER_WIDTH });
      playBorder.pos(playArgs.X, playArgs.Y);
      playBorder.size(playArgs.WIDTH, playArgs.HEIGHT);
      playBorder.on(Laya.Event.MOUSE_UP, this, function () {
        _this2._world.mode = _config2.default.GAME_MODE.BACKGROUND;
        _utils.Live.end();
        _panelManager2.default.redirectTo(_selectPanel2.default);
      });
      playBorder.addChild(play);
    }
  }]);

  return LiveWaitingPanel;
}(_panel2.default);

exports.default = LiveWaitingPanel;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(1);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _init = __webpack_require__(14);

var _startPanel = __webpack_require__(25);

var _startPanel2 = _interopRequireDefault(_startPanel);

var _liveWaitingPanel = __webpack_require__(22);

var _liveWaitingPanel2 = _interopRequireDefault(_liveWaitingPanel);

var _liveLeavePanel = __webpack_require__(32);

var _liveLeavePanel2 = _interopRequireDefault(_liveLeavePanel);

var _loadingAnimation = __webpack_require__(16);

var _loadingAnimation2 = _interopRequireDefault(_loadingAnimation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LoadingPanel = function (_Panel) {
  _inherits(LoadingPanel, _Panel);

  function LoadingPanel() {
    _classCallCheck(this, LoadingPanel);

    return _possibleConstructorReturn(this, (LoadingPanel.__proto__ || Object.getPrototypeOf(LoadingPanel)).apply(this, arguments));
  }

  _createClass(LoadingPanel, null, [{
    key: 'onLoad',
    value: function onLoad(_ref) {
      var _this2 = this;

      var id = _ref.id;

      this._loadingWording = (0, _utils.createWording)('正在加载歌曲');
      _loadingAnimation2.default.start();

      var startTime = Date.now();
      if (_utils.Live.living && !_utils.Live.playing) {
        _song2.default.onSongSetLoaded(function () {
          _this2._songLoaded(startTime, id);
        });
      } else {
        _utils.Network.getFriendsScore(id, function (_ref2) {
          var user_info = _ref2.user_info;

          _utils.Score.setNetworkScore(id, user_info);
        });
        this._songLoaded(startTime, id);
      }
    }
  }, {
    key: '_songLoaded',
    value: function _songLoaded(startTime, id) {
      var _this3 = this;

      this._world.songConfig = _song2.default.songSet[id];
      var loaded = false;
      setTimeout(function () {
        if (!loaded) {
          if (_this3._loadingWording) {
            _this3._loadingWording.destroy();
            _this3._loadingWording = undefined;
          }
          var wording = (0, _utils.createWording)('网络异常，无法下载歌曲');
          setTimeout(function () {
            wording.destroy();
            wording = undefined;
            _utils.emitter.emit('error', 'download song fail');
          }, 2000);
        }
      }, 30000);

      _song2.default.load(id, function (song) {
        (0, _init.initSong)(_this3._world);
        if (_this3._loadingWording) {
          _this3._loadingWording.destroy();
          _this3._loadingWording = undefined;
        }
        _loadingAnimation2.default.stop();

        _this3._world.audioCtx = song.audioCtx;

        loaded = true;
        if (_utils.Live.living && !_utils.Live.playing) {
          console.log('LoadingPanel', _utils.Live.liveState);
          if (_utils.Live.liveState === _config2.default.LIVE_STATE.PREPARE) {
            _this3._pm.redirectTo(_liveWaitingPanel2.default);
          } else if (_utils.Live.liveState === _config2.default.LIVE_STATE.RUNNING) {
            console.log('LoadingPanel start');
            _this3._pm.destroy();
            _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PRELOAD, 'song loaded: live running');
          } else if (_utils.Live.liveState === _config2.default.LIVE_STATE.END) {} else if (_utils.Live.liveState === _config2.default.LIVE_STATE.LEAVE) {
            _this3._pm.redirectTo(_liveLeavePanel2.default);
          }
        } else {
          _this3._pm.destroy();
          _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PRELOAD, 'song loaded');
        }
      });
    }
  }]);

  return LoadingPanel;
}(_panel2.default);

exports.default = LoadingPanel;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PausePanel = function (_Panel) {
  _inherits(PausePanel, _Panel);

  function PausePanel() {
    _classCallCheck(this, PausePanel);

    return _possibleConstructorReturn(this, (PausePanel.__proto__ || Object.getPrototypeOf(PausePanel)).apply(this, arguments));
  }

  _createClass(PausePanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      var _this2 = this;

      var c = _config2.default.PAUSE_PANEL;
      var continueArgs = this._continueArgs = (0, _utils.getScaleArgs)(c.CONTINUE_PANEL);
      var continueButtonArgs = (0, _utils.getScaleArgs)(c.CONTINUE);
      var restartButtonArgs = (0, _utils.getScaleArgs)(c.RESTART);
      var homeButtonArgs = (0, _utils.getScaleArgs)(c.HOME);
      var restartTextArgs = (0, _utils.getScaleArgs)(c.RESTART_TEXT);
      var homeTextArgs = (0, _utils.getScaleArgs)(c.HOME_TEXT);

      var textConfig = {
        font: 'Helvetica',
        width: _config2.default.SCREEN_WIDTH,
        align: 'center',
        color: '#FFFFFF',
        fontSize: 48,
        zOrder: 100
      };

      this._panel.graphics.drawRect(0, 0, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT, 'rgba(0, 0, 0, 0.2)');
      if (this._world.stopSprite) {
        this._world.stopSprite.destroy();
        this._world.stopSprite = undefined;
      }
      var continuePanel = new Laya.Sprite();
      var continueButton = new Laya.Sprite();
      var home = new Laya.Sprite();
      var restart = new Laya.Sprite();
      var homeText = new Laya.Text();
      var restartText = new Laya.Text();
      this._panel.addChild(continuePanel);
      this._panel.addChild(continueButton);
      this._panel.addChild(home);
      this._panel.addChild(restart);
      this._panel.addChild(homeText);
      this._panel.addChild(restartText);

      continuePanel.pos(continueArgs.X, continueArgs.Y);
      continuePanel.size(continueArgs.WIDTH, continueArgs.WIDTH);
      (0, _utils.drawRoundedRect)(continuePanel, 0, 0, continueArgs.WIDTH, continueArgs.WIDTH, continueArgs.RADIUS, { fillStyle: c.CONTINUE_PANEL.COLOR });
      continueButton.graphics.drawTexture(this._world.assets.continue, continueButtonArgs.X, continueArgs.Y + (continueArgs.WIDTH - continueButtonArgs.WIDTH) / 2, continueButtonArgs.WIDTH, continueButtonArgs.WIDTH);

      restart.graphics.drawTexture(this._world.assets.restart, 0, 0, restartButtonArgs.WIDTH, restartButtonArgs.WIDTH);
      restart.pos(restartButtonArgs.X, restartButtonArgs.Y);
      restart.size(restartButtonArgs.WIDTH, restartButtonArgs.HEIGHT);

      home.graphics.drawTexture(this._world.assets.home, 0, 0, homeButtonArgs.WIDTH, homeButtonArgs.WIDTH);
      home.pos(homeButtonArgs.X, homeButtonArgs.Y);
      home.size(homeButtonArgs.WIDTH, homeButtonArgs.HEIGHT);

      var homeClick = new Laya.Sprite();
      this._panel.addChild(homeClick);
      var restartClick = new Laya.Sprite();
      this._panel.addChild(restartClick);

      //homeClick.pos(homeButtonArgs.X - homeButtonArgs.WIDTH, homeButtonArgs.Y - homeButtonArgs.HEIGHT)
      //homeClick.size(homeButtonArgs.WIDTH * 3, homeButtonArgs.HEIGHT * 3)

      //restartClick.pos(restartButtonArgs.X - restartButtonArgs.WIDTH, restartButtonArgs.Y - restartButtonArgs.HEIGHT)
      //restartClick.size(restartButtonArgs.WIDTH * 3, restartButtonArgs.HEIGHT * 3)

      //Object.assign(homeText, textConfig)
      //homeText.fontSize = c.HOME_TEXT.SIZE
      //homeText.text = c.HOME_TEXT.TEXT
      //homeText.width = homeTextArgs.WIDTH
      //homeText.color = this._world.mainColor
      //homeText.pos(homeTextArgs.X, homeTextArgs.Y)

      //Object.assign(restartText, textConfig)
      //restartText.fontSize = c.RESTART_TEXT.SIZE
      //restartText.text = c.RESTART_TEXT.TEXT
      //restartText.color = this._world.mainColor
      //restartText.width = restartTextArgs.WIDTH
      //restartText.pos(restartTextArgs.X, restartTextArgs.Y)

      setTimeout(function () {
        continuePanel.on(Laya.Event.MOUSE_UP, _this2, function (e) {
          var time = _this2._world.ball.songDistance / _this2._world.totalDistance * _this2._world.duration;
          _this2._world.audioCtx.onSeekedOnceCb = function () {
            _this2._world.audioCtx.onPlayOnceCb = function () {
              _this2._pm.destroy();
              _this2._world.start();
            };
            _this2._world.audioCtx.play();
          };
          _this2._world.audioCtx.seek(time);
          setTimeout(function () {
            if (_this2._world.audioCtx && _this2._world.audioCtx.onSeekedOnceCb && !_this2._world.audioCtx.onSeekedOnceCb.called) {
              _this2._world.audioCtx.onSeekedOnceCb.called = true;
              _this2._world.audioCtx.onSeekedOnceCb();
            }
          }, 300);
        });

        home.on(Laya.Event.MOUSE_UP, _this2, function (e) {
          e.stopPropagation();
          _this2._world.mode = _config2.default.GAME_MODE.BACKGROUND;
          _this2._pm.redirectTo(_selectPanel2.default);
          _this2._world.reset(function () {
            _this2._world.start();
          });
        });

        restart.on(Laya.Event.MOUSE_UP, _this2, function (e) {
          e.stopPropagation();
          _this2._pm.destroy();
          _this2._world.reset(function () {
            _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PRELOAD, 'pause restart');
            _this2._world.start();
          });
        });
      }, 200);
    }
  }]);

  return PausePanel;
}(_panel2.default);

exports.default = PausePanel;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  align: 'center',
  color: '#FFFFFF',
  fontSize: 48,
  zOrder: 100
};

var StartPanel = function () {
  function StartPanel() {
    _classCallCheck(this, StartPanel);
  }

  _createClass(StartPanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      this._panel = new Laya.Sprite();
      this._panel.width = _config2.default.SCREEN_WIDTH;
      this._panel.height = _config2.default.SCREEN_HEIGHT;
      this._panel.graphics.drawRect(0, 0, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT, '#000000');
      this._panel.pos(0, 0);
      this._panel.zOrder = 999;
      this._panel.alpha = 1;
      Laya.stage.addChild(this._panel);

      var size = 256;
      var earphone = new Laya.Sprite();
      earphone.loadImage('assets/earphone.png', _config2.default.SCREEN_WIDTH / 2 - size / 2, _config2.default.SCREEN_HEIGHT / 2 - size, size, size);
      this._panel.addChild(earphone);

      var text = new Laya.Text();
      text.align = 'center';
      text.width = _config2.default.SCREEN_WIDTH;
      text.pos(0, _config2.default.SCREEN_HEIGHT / 2 + size / 2);
      text.fontSize = 48;
      text.color = '#FFFFFF';
      text.text = '推荐使用耳机以获得更好的游戏体验';
      this._panel.addChild(text);

      this.disappear = this.disappear.bind(this);
      this.destroy = this.destroy.bind(this);
      setTimeout(this.disappear, 1500);
    }
  }, {
    key: 'disappear',
    value: function disappear() {
      var _ = this;
      var handle = setInterval(function () {
        _._panel.alpha -= 1 / 60;
        if (_._panel.alpha <= 0) {
          clearInterval(handle);
          _.destroy();
        }
      }, 16);
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this._panel.destroy();
    }
  }]);

  return StartPanel;
}();

exports.default = StartPanel;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _renderPathes = __webpack_require__(102);

var _renderPathes2 = _interopRequireDefault(_renderPathes);

var _renderBall = __webpack_require__(88);

var _renderBall2 = _interopRequireDefault(_renderBall);

var _renderCoins = __webpack_require__(92);

var _renderCoins2 = _interopRequireDefault(_renderCoins);

var _renderCoinStar = __webpack_require__(91);

var _renderCoinStar2 = _interopRequireDefault(_renderCoinStar);

var _renderObstacles = __webpack_require__(100);

var _renderObstacles2 = _interopRequireDefault(_renderObstacles);

var _renderBackground = __webpack_require__(87);

var _renderBackground2 = _interopRequireDefault(_renderBackground);

var _renderScore = __webpack_require__(105);

var _renderScore2 = _interopRequireDefault(_renderScore);

var _renderParticles = __webpack_require__(101);

var _renderParticles2 = _interopRequireDefault(_renderParticles);

var _renderFriendsMileStone = __webpack_require__(96);

var _renderFriendsMileStone2 = _interopRequireDefault(_renderFriendsMileStone);

var _renderHearts = __webpack_require__(98);

var _renderHearts2 = _interopRequireDefault(_renderHearts);

var _renderCombo = __webpack_require__(93);

var _renderCombo2 = _interopRequireDefault(_renderCombo);

var _renderStop = __webpack_require__(107);

var _renderStop2 = _interopRequireDefault(_renderStop);

var _renderCountDown = __webpack_require__(95);

var _renderCountDown2 = _interopRequireDefault(_renderCountDown);

var _renderSongName = __webpack_require__(106);

var _renderSongName2 = _interopRequireDefault(_renderSongName);

var _renderBuffs = __webpack_require__(89);

var _renderBuffs2 = _interopRequireDefault(_renderBuffs);

var _renderCoinParticles = __webpack_require__(90);

var _renderCoinParticles2 = _interopRequireDefault(_renderCoinParticles);

var _renderObsParticles = __webpack_require__(99);

var _renderObsParticles2 = _interopRequireDefault(_renderObsParticles);

var _renderWitness = __webpack_require__(109);

var _renderWitness2 = _interopRequireDefault(_renderWitness);

var _renderPlay = __webpack_require__(103);

var _renderPlay2 = _interopRequireDefault(_renderPlay);

var _renderProgress = __webpack_require__(104);

var _renderProgress2 = _interopRequireDefault(_renderProgress);

var _renderComboBorder = __webpack_require__(94);

var _renderComboBorder2 = _interopRequireDefault(_renderComboBorder);

var _renderWording = __webpack_require__(110);

var _renderWording2 = _interopRequireDefault(_renderWording);

var _renderTouchEffect = __webpack_require__(108);

var _renderTouchEffect2 = _interopRequireDefault(_renderTouchEffect);

var _renderGetCoinEffect = __webpack_require__(97);

var _renderGetCoinEffect2 = _interopRequireDefault(_renderGetCoinEffect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import renderTrueCoins from './renderSystemHelper/renderTrueCoins'


var RenderSystem = function (_System) {
  _inherits(RenderSystem, _System);

  function RenderSystem() {
    _classCallCheck(this, RenderSystem);

    return _possibleConstructorReturn(this, (RenderSystem.__proto__ || Object.getPrototypeOf(RenderSystem)).apply(this, arguments));
  }

  _createClass(RenderSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      (0, _renderBackground2.default)(this._world);
      (0, _renderObstacles2.default)(this._world);
      (0, _renderPathes2.default)(this._world);
      (0, _renderCoins2.default)(this._world);
      //renderWording(this._world)
      //renderTrueCoins(this._world)
      (0, _renderCoinStar2.default)(this._world, dt);
      (0, _renderGetCoinEffect2.default)(this._world);
      (0, _renderBall2.default)(this._world, now, dt);

      (0, _renderScore2.default)(this._world);
      (0, _renderProgress2.default)(this._world);
      (0, _renderParticles2.default)(this._world, now);
      (0, _renderHearts2.default)(this._world);
      (0, _renderCombo2.default)(this._world, now, dt);
      (0, _renderComboBorder2.default)(this._world, now, dt);
      (0, _renderCountDown2.default)(this._world, now, dt);
      (0, _renderStop2.default)(this._world);
      (0, _renderSongName2.default)(this._world);
      //renderBuffs(this._world, now, dt)
      (0, _renderCoinParticles2.default)(this._world);
      (0, _renderObsParticles2.default)(this._world);
      (0, _renderWitness2.default)(this._world);
      (0, _renderPlay2.default)(this._world);
      (0, _renderTouchEffect2.default)(this._world, dt);
    }
  }, {
    key: 'stop',
    value: function stop() {
      if (this._world.coins.end) {
        for (var i = this._world.coins.start; i < this._world.coins.end; i++) {
          this._world.coins[i].sprite && this._world.coins[i].sprite.destroy();
        }
      }

      // if (this._world.trueCoins.end) {
      //   for (let i = this._world.coins.start; i < this._world.coins.end; i++) {
      //     this._world.coins[i].sprite && this._world.coins[i].sprite.destroy()
      //   }
      // }

      if (this._world.obstacles.end) {
        for (var _i = this._world.obstacles.start; _i < this._world.obstacles.end; _i++) {
          this._world.obstacles[_i].sprite && this._world.obstacles[_i].sprite.destroy();
        }
      }

      // if (this._world.mileStones.end) {
      //   for (let i = this._world.mileStones.start; i < this._world.mileStones.end; i++) {
      //     if (this._world.mileStones[i].render) {
      //       this._world.mileStones[i].render.line.sprite && this._world.mileStones[i].render.line.sprite.destroy()
      //       this._world.mileStones[i].render.sprite && this._world.mileStones[i].render.sprite.destroy()
      //     }
      //   }
      // }

      if (this._world.particles) {
        this._world.particles.forEach(function (particle) {
          return particle.sprite && particle.sprite.destroy();
        });
      }

      // if (this._world.scoreSprite) {
      //   this._world.scoreSprite.destroy()
      //   this._world.noteSprite && this._world.noteSprite.destroy()
      //   this._world.scoreSprite = null
      //   this._world.noteSprite = null
      // }

      if (this._world.scoreBarSprite) {
        this._world.scoreBarSprite.destroy();
        this._world.scoreBarBgSprite.destroy();
        this._world.scoreBarSprite = this._world.scoreBarBgSprite = null;
      }

      if (this._world.progressBarSprite) {
        this._world.progressBarSprite.destroy();
        this._world.progressBarBgSprite.destroy();

        this._world.progressBarSprite = this._world.progressBarBgSprite = null;
      }

      if (this._world.comboSprite) {
        this._world.comboSprite.destroy();
        this._world.comboSprite = null;
      }

      if (this._world.comboNumberSprite) {
        this._world.comboNumberSprite.destroy();
        this._world.comboNumberSprite = null;
      }

      // if (this._world.heartSprites) {
      //   this._world.heartSprites.forEach(sp => {
      //     sp && sp.destroy()
      //   })
      // }

      if (this._world.lifeBarSprite) {
        this._world.lifeBarSprite.destroy();
        this._world.lifeBarBgSprite.destroy();
        this._world.lifeBarSprite = this._world.lifeBarBgSprite = null;
      }

      if (this._world.stopSprite) {
        this._world.stopSprite.destroy();
        this._world.stopSprite = null;
      }

      if (this._world.songNameSprite) {
        this._world.songNameSprite.destroy();
        this._world.songNameSprite = undefined;
      }

      if (this._world.ball.flickerSprite) {
        this._world.ball.flickerSprite.destroy();
        this._world.ball.flickerSprite = undefined;
      }
      if (this._world.ball.hitSprite) {
        this._world.ball.hitSprite.destroy();
        this._world.ball.hitSprite = undefined;
      }

      if (this._world.ball.shieldSprite) {
        this._world.ball.shieldSprite.destroy();
        this._world.ball.shieldSprite = undefined;
      }

      for (var _i2 in this._world.buffSprites) {
        if (this._world.buffSprites[_i2]) {
          this._world.buffSprites[_i2].destroy();
          this._world.buffSprites[_i2] = null;
        }
      }

      if (this._world.witnessIconSprite) {
        this._world.witnessIconSprite.destroy();
        this._world.witnessIconSprite = undefined;
        this._world.witnessText.destroy();
        this._world.witnessText = undefined;
      }

      if (this._world.flyingCoinStars) {
        this._world.flyingCoinStars.forEach(function (coin) {
          return coin.sprite.destroy();
        });
        this._world.coinStars.forEach(function (coin) {
          return coin.sprite.destroy();
        });

        this._world.flyingCoinStars.length = this._world.coinStars.length = 0;
      }

      if (this._world.getCoinEffects) {
        for (var _i3 = 0; _i3 < this._world.getCoinEffects.length; ++_i3) {
          this._world.getCoinEffects[_i3].sp.destroy();
        }
        this._world.getCoinEffects = [];
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      console.log('render system destroy');
      if (this._world.ball && this._world.ball.sprite) {
        this._world.ball.sprite.destroy();
        this._world.ball.sprite = null;
      }

      if (this._world.pathes.end) {
        for (var i = this._world.pathes.start; i < this._world.pathes.end; i++) {
          this._world.pathes[i].sprite && this._world.pathes[i].sprite.destroy();
        }
      }

      if (this._world.coins.end) {
        for (var _i4 = this._world.coins.start; _i4 < this._world.coins.end; _i4++) {
          this._world.coins[_i4].sprite && this._world.coins[_i4].sprite.destroy();
        }
      }

      if (this._world.obstacles.end) {
        for (var _i5 = this._world.obstacles.start; _i5 < this._world.obstacles.end; _i5++) {
          this._world.obstacles[_i5].sprite && this._world.obstacles[_i5].sprite.destroy();
        }
      }

      if (this._world.particles) {
        this._world.particles.forEach(function (particle) {
          return particle.sprite && particle.sprite.destroy();
        });
      }

      // if (this._world.scoreSprite) {
      //   this._world.scoreSprite && this._world.scoreSprite.destroy()
      //   this._world.noteSprite && this._world.noteSprite.destroy()
      // }

      if (this._world.scoreBarSprite) {
        this._world.scoreBarSprite.destroy();
        this._world.scoreBarBgSprite.destroy();

        this._world.scoreBarSprite = this._world.scoreBarBgSprite = null;
      }

      if (this._world.progressBarSprite) {
        this._world.progressBarSprite.destroy();
        this._world.progressBarBgSprite.destroy();

        this._world.progressBarSprite = this._world.progressBarBgSprite = null;
      }

      // if (this._world.heartSprites) {
      //   this._world.heartSprites.forEach(sp => {
      //     sp && sp.destroy()
      //   })
      // }

      if (this._world.lifeBarSprite) {
        this._world.lifeBarSprite.destroy();
        this._world.lifeBarBgSprite.destroy();

        this._world.lifeBarSprite = this._world.lifeBarBgSprite = null;
      }

      if (this._world.comboSprite) {
        this._world.comboSprite.destroy();
        this._world.comboShadeSprite.destroy();

        this._world.comboSprite = this._world.comboShadeSprite = null;
      }

      if (this._world.comboBorderSprite) {
        this._world.comboBorderSprite.forEach(function (sp) {
          sp.destroy();
        });
        this._world.comboBorderSprite = null;
      }

      if (this._world.flyingCoinStars) {
        this._world.flyingCoinStars.forEach(function (coin) {
          return coin.sprite.destroy();
        });
        this._world.coinStars.forEach(function (coin) {
          return coin.sprite.destroy();
        });

        this._world.flyingCoinStars.length = this._world.coinStars.length = 0;
      }

      for (var _i6 in this._world.buffSprites) {
        if (this._world.buffSprites[_i6]) {
          this._world.buffSprites[_i6].destroy();
          this._world.buffSprites[_i6] = null;
        }
      }
    }
  }]);

  return RenderSystem;
}(_ECS.System);

exports.default = RenderSystem;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (size) {
  size += 2;
  var radius = size / 2;

  return [[['moveTo', 0, 0], ['lineTo', radius, 0], ['arcTo', 0, 0, 0, radius, radius], ['closePath']], [['moveTo', size, 0], ['lineTo', radius, 0], ['arcTo', size, 0, size, radius, radius], ['closePath']], [['moveTo', 0, size], ['lineTo', 0, radius], ['arcTo', 0, size, radius, size, radius], ['closePath']], [['moveTo', size, size], ['lineTo', radius, size], ['arcTo', size, size, size, radius, radius], ['closePath']]];
};

/***/ }),
/* 28 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var EPS = exports.EPS = 1e-6;

var eql = exports.eql = function eql(a, b) {
  var c = a - b;
  return -EPS < c && c < EPS;
};

var dcmp = exports.dcmp = function dcmp(x) {
  return (x > EPS) - (x < -EPS);
};

/***/ }),
/* 29 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNormalShareImage = exports.getResultShareImage = exports.getLiveShareImage = undefined;

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

wx.createCanvas();
var width = 700;
var height = 560;

var shareCanvas = wx.createCanvas();
shareCanvas.width = width;
shareCanvas.height = height;
var ctx = shareCanvas.getContext('2d');

var fillTextCenter = function fillTextCenter(ctx, height, text) {
  var textWidth = ctx.measureText(text).width;
  ctx.fillText(text, (width - textWidth) / 2, height);
  console.log(text, (width - textWidth) / 2, height);
};

var getLiveShareImage = exports.getLiveShareImage = function getLiveShareImage(song, cb) {
  ctx.clearRect(0, 0, width, height);
  var bg = new Image();
  bg.onload = function () {
    ctx.drawImage(bg, 0, 0, width, height);
    ctx.fillStyle = '#FFFFFF';
    ctx.font = '48px Helvetica';
    fillTextCenter(ctx, 213 + 48 * 1.39, song.title);
    ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';
    ctx.font = '36px Helvetica';
    fillTextCenter(ctx, 288 + 36 * 1.39, song.singer_name);
    cb(shareCanvas.toTempFilePathSync());
  };
  bg.src = 'assets/share.png';
};

var getResultShareImage = exports.getResultShareImage = function getResultShareImage(title, score, cb) {
  ctx.clearRect(0, 0, width, height);
  var bg = new Image();
  bg.onload = function () {
    ctx.drawImage(bg, 0, 0, width, height);
    ctx.fillStyle = '#FFFFFF';
    ctx.font = '36px Helvetica';
    fillTextCenter(ctx, 96 + 36 * 1.39, title);

    ctx.fillStyle = '#0E74A0';
    ctx.font = '36px Helvetica';
    fillTextCenter(ctx, 179 + 36 * 1.39, '分数');

    ctx.fillStyle = '#FFFFFF';
    ctx.font = '80px Helvetica';
    fillTextCenter(ctx, 217 + 80 * 1.39, score);
    cb(shareCanvas.toTempFilePathSync());
  };
  bg.src = 'assets/share.png';
};

var getNormalShareImage = exports.getNormalShareImage = function getNormalShareImage(cb) {
  ctx.clearRect(0, 0, width, height);
  var bg = new Image();
  bg.onload = function () {
    //const h = 250
    //const w = 250 / 4 * 6
    //const ww = 650
    //ctx.drawImage(bg, (ww - w) / 2, 0, w, h, 0, 0, width, height)
    ctx.drawImage(bg, 0, 0, width, height);
    ctx.fillStyle = '#FFFFFF';
    ctx.font = '48px Helvetica';
    fillTextCenter(ctx, 188 + 48 * 1.39, '游戏玩的不好');

    ctx.fillStyle = '#FFFFFF';
    ctx.font = '48px Helvetica';
    fillTextCenter(ctx, 250 + 48 * 1.39, '说明乐感不溜');

    cb(shareCanvas.toTempFilePathSync());
  };
  bg.src = 'assets/share.png';
};

/***/ }),
/* 31 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var capitalize = function capitalize(name) {
  return name[0].toLowerCase() + name.slice(1);
};

var getName = function getName(component) {
  if (typeof component === 'function') {
    return component.name;
  } else {
    return component.constructor.name;
  }
};

exports.capitalize = capitalize;
exports.getName = getName;

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  color: '#FFFFFF',
  align: 'center',
  valign: 'middle'
};

var LiveLeavePanel = function (_Panel) {
  _inherits(LiveLeavePanel, _Panel);

  function LiveLeavePanel() {
    _classCallCheck(this, LiveLeavePanel);

    return _possibleConstructorReturn(this, (LiveLeavePanel.__proto__ || Object.getPrototypeOf(LiveLeavePanel)).apply(this, arguments));
  }

  _createClass(LiveLeavePanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      var _this2 = this;

      var c = _config2.default.LiveLeavePanel;

      var playArgs = (0, _utils.getScaleArgs)(c.PLAY);

      var wording = (0, _utils.createTextSprite)(this._panel, (0, _utils.getScaleArgs)(c.WORDING));
      wording.text = c.WORDING.TEXT;
      wording.fontSize = c.WORDING.SIZE;

      var play = (0, _utils.createTextSprite)(this._panel, playArgs);
      play.text = c.PLAY.TEXT;
      play.fontSize = c.PLAY.SIZE;
      play.width = _config2.default.SCREEN_WIDTH;
      play.x = 0;
      play.color = this._world.mainColor;

      var playBorder = new Laya.Sprite();
      this._panel.addChild(playBorder);
      (0, _utils.drawRoundedRect)(playBorder, 0, 0, playArgs.WIDTH, playArgs.HEIGHT, playArgs.RADIUS, null, { strokeStyle: this._world.mainColor, lineWidth: c.PLAY.BORDER_WIDTH });
      playBorder.pos(playArgs.X, playArgs.Y);
      playBorder.size(playArgs.WIDTH, playArgs.HEIGHT);

      playBorder.on(Laya.Event.MOUSE_UP, this, function () {
        _this2._world.mode = _config2.default.GAME_MODE.BACKGROUND;
        _utils.Live.end();
        _panelManager2.default.redirectTo(_selectPanel2.default);
      });
    }
  }]);

  return LiveLeavePanel;
}(_panel2.default);

exports.default = LiveLeavePanel;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _renderSystem = __webpack_require__(26);

var _renderSystem2 = _interopRequireDefault(_renderSystem);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(8);

var _gameHelper = __webpack_require__(20);

var _init = __webpack_require__(14);

var _slider = __webpack_require__(70);

var _slider2 = _interopRequireDefault(_slider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  align: 'center',
  valign: 'middle',
  color: '#FFFFFF',
  fontSize: 48,
  zOrder: 100
};

var SettingPanel = function (_Panel) {
  _inherits(SettingPanel, _Panel);

  function SettingPanel() {
    _classCallCheck(this, SettingPanel);

    return _possibleConstructorReturn(this, (SettingPanel.__proto__ || Object.getPrototypeOf(SettingPanel)).apply(this, arguments));
  }

  _createClass(SettingPanel, null, [{
    key: 'onLoad',
    value: function onLoad() {
      this._value = this._world.delayTime;

      this.initTestAudio();
      this.drawDashboard();
      this.drawButtons();
      this.initSettingWorld();
      // this.drawLine()
      this.addTouch();

      _utils.emitter.on(_config2.default.GAME_EVENT.GAME_SETTING_RESET, this.resetHandler.bind(this));
      _utils.emitter.on(_config2.default.GAME_EVENT.GAME_SETTING_RUN, this.runHandler.bind(this));
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this._panel.destroy(true);
      _renderSystem2.default.destroy();
      this._world.mode = _config2.default.GAME_MODE.BACKGROUND;
      this._world.reset();
      (0, _init.initBeforeSelect)(this._world);
      this._world.ball.notLoading = true;
    }
  }, {
    key: 'addTouch',
    value: function addTouch() {
      var _this2 = this;

      var sp = new Laya.Sprite();
      this._panel.addChild(sp);
      // sp.graphics.drawRect(0, 0, config.SCREEN_WIDTH, config.SCREEN_HEIGHT, config.BACKGROUND_COLOR)
      sp.pos(100, _config2.default.SCREEN_HEIGHT / 2 - 100);
      sp.width = _config2.default.SCREEN_WIDTH - 200;
      sp.height = _config2.default.SCREEN_HEIGHT / 2 - 100;

      sp.on(Laya.Event.MOUSE_DOWN, this, function () {
        _this2._world.cmd = _config2.default.CMD.TAP;
        // if (this._world.mode === config.GAME_MODE.ADJUST) {
        // }
      });
      sp.on(Laya.Event.MOUSE_UP, this, function () {
        // if (this._world.mode === config.GAME_MODE.ADJUST) {
        _this2._world.cmd = _config2.default.CMD.NONE;
        // }
      });
    }
  }, {
    key: 'initTestAudio',
    value: function initTestAudio() {
      this._distanceAdjustment = (_config2.default.GEN_TIME - this._value) * _config2.default.RUN_VEC;

      this._testCtx = wx.createInnerAudioContext();
      this._testCtx.src = '/test.mp3';
    }
  }, {
    key: 'initSettingWorld',
    value: function initSettingWorld() {
      var world = this._world;
      _renderSystem2.default.destroy();

      world.mode = _config2.default.GAME_MODE.ADJUST;
      world.totalDistance = _config2.default.SCREEN_HEIGHT;

      this._initialDistance = _config2.default.SCREEN_HEIGHT / 2;
      world.pathes = [{
        type: 'line',
        rotation: 0,
        startPoint: new _utils.Point(0, _config2.default.SCREEN_HEIGHT),
        endPoint: new _utils.Point(0, -_config2.default.SCREEN_HEIGHT),
        length: _config2.default.SCREEN_HEIGHT * 2
      }, {
        type: 'line',
        rotation: 0,
        startPoint: new _utils.Point(0, -_config2.default.SCREEN_HEIGHT),
        endPoint: new _utils.Point(0, -_config2.default.SCREEN_HEIGHT * 2),
        length: _config2.default.SCREEN_HEIGHT
      }];

      world.ball = {
        distance: this._initialDistance,
        songDistance: 0,
        index: 0,
        x: _config2.default.SCREEN_HEIGHT / 2,
        y: _config2.default.BALL.HEIGHT,
        size: _config2.default.BALL.SIZE,
        color: _config2.default.BALL.COLOR,
        yJumpDirection: 0, //0 默认方向，无意义 1 向上 2 向下
        // yInitV: config.INIT_Y_V, //y轴初始速度
        SWITCH_DISTANCE: 0, //切换操作x轴上已经走出去的距离
        // position: calculated by translateCoordinateSystem
        buffManager: {}
      };

      world.duration = _config2.default.SCREEN_HEIGHT / _config2.default.RUN_VEC / 1000;
      // this._presetNotes = [1.5, 1.75, 2, 2.25]
      this._presetNotes = [0.25, 0.5, 0.75, 1];
      this._prepareDistance = _config2.default.SCREEN_HEIGHT / 2;

      world.coins = (0, _gameHelper.generateCoins)(world, _config2.default.SCREEN_HEIGHT, this._presetNotes).coins;
      world.obstacles = [];
      world.mileStones = [];

      var centerPoint = world.camera.centerPoint = (0, _utils2.translateCoordinate)(world, world.ball.index, _config2.default.SCREEN_HEIGHT, 0);
      world.camera = new _utils.Rect(centerPoint.x - _config2.default.SCREEN_WIDTH / 2, centerPoint.y - _config2.default.SCREEN_HEIGHT / 2, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT);

      world.movingCoins = [];
      world.currentSongLength = 0;
      world.cmd = _config2.default.CMD.NONE;
      world.pathes.start = 0;
      world.pathes.end = 0;
      world.coins.start = 0;
      world.coins.end = 0;
      world.obstacles.start = 0;
      world.obstacles.end = 0;
      world.runVec = _config2.default.RUN_VEC;
      world.particles = [];
      world.mileStones.start = 0;
      world.mileStones.end = 0;
    }
  }, {
    key: 'runHandler',
    value: function runHandler() {
      if (!this._playing && this._world.ball.distance > this._initialDistance + this._prepareDistance + this._distanceAdjustment) {
        this._testCtx.play();
        this._playing = true;
      }
    }
  }, {
    key: 'resetHandler',
    value: function resetHandler() {
      var _world$coins;

      Object.assign(this._world.ball, {
        distance: this._initialDistance,
        SWITCH_DISTANCE: 0,
        index: 0,
        x: _config2.default.SCREEN_HEIGHT / 2,
        y: _config2.default.BALL.HEIGHT
      });

      this._playing = false;

      var newCoins = (0, _gameHelper.generateCoins)(this._world, _config2.default.SCREEN_HEIGHT, this._presetNotes).coins;
      this._world.coins.forEach(function (coin) {
        return coin.sprite && coin.sprite.destroy();
      });
      this._world.coins.length = 0;
      (_world$coins = this._world.coins).push.apply(_world$coins, _toConsumableArray(newCoins));
    }
  }, {
    key: 'drawDashboard',
    value: function drawDashboard() {
      var _this3 = this;

      this._slider = _slider2.default.init(this._world);

      _slider2.default.touchEndCallback = function (value) {
        console.log(value);

        _this3._distanceAdjustment = (_config2.default.GEN_TIME - value) * _config2.default.RUN_VEC;
        _this3._value = value;
      };

      this._panel.addChild(this._slider);
    }
  }, {
    key: 'drawButtons',
    value: function drawButtons() {
      var _this4 = this;

      _config2.default.SETTING_PANEL.BUTTONS.forEach(function (buttonConfig) {
        var button = new Laya.Sprite();
        button.graphics.drawTexture(_this4._world.assets[buttonConfig.ASSET]);
        button.pos(buttonConfig.X, buttonConfig.Y);
        button.height = button.width = buttonConfig.WIDTH;
        button.on(Laya.Event.MOUSE_UP, _this4, function () {
          if (buttonConfig.ASSET === 'accept') {
            // this._world.genTime = this._slider.value
            _this4._world.delayTime = _this4._value;
            _utils.Storage.setDelayTime(_this4._value);
          } else {
            // discard
          }

          _this4._pm.navigateBack();
        });

        _this4._panel.addChild(button);
      });
    }
  }, {
    key: 'drawLine',
    value: function drawLine() {
      var c = _config2.default.SETTING_PANEL.LINE;

      this._lineSprite = new Laya.Sprite();
      this._lineY = _config2.default.SCREEN_HEIGHT / 2 - _config2.default.GEN_TIME * _config2.default.RUN_VEC - this._world.ball.size;
      this._lineSprite.pos(0, this._lineY);

      var identity = c.LENGTH + c.MARGIN;
      var length = Math.ceil(_config2.default.SCREEN_WIDTH / identity);
      for (var i = 0; i < length; i++) {
        var offsetX = i * identity;
        this._lineSprite.graphics.drawLine(offsetX, 0, offsetX + c.LENGTH, 0, c.COLOR, c.WIDTH);
      }
      this._panel.addChild(this._lineSprite);
    }
  }, {
    key: 'rePosLine',
    value: function rePosLine() {
      this._lineSprite.pos(0, this._lineY - this._distanceAdjustment);
    }
  }]);

  return SettingPanel;
}(_panel2.default);

exports.default = SettingPanel;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _eventemitter = __webpack_require__(46);

var _eventemitter2 = _interopRequireDefault(_eventemitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var emitter = new _eventemitter2.default();

emitter.setMaxListeners(100);

exports.default = emitter;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _storage = __webpack_require__(18);

var _storage2 = _interopRequireDefault(_storage);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var tryToRemoveTheOldestFile = function tryToRemoveTheOldestFile(fileInfo, size, cb, failCb) {
  if (fileInfo.files.length && fileInfo.totalSize + size > _config2.default.MAX_FILE_SIZE) {
    wx.removeSavedFile({
      filePath: fileInfo.files[0].localPath,
      success: function success(res) {
        fileInfo.totalSize -= fileInfo.files[0].size;
        fileInfo.files.splice(0, 1);
        tryToRemoveTheOldestFile(fileInfo, size, cb, failCb);
      },
      fail: function fail(res) {
        console.error('[File] wx.removeSavedFile fail', res, 'Abort save file');
        failCb && failCb();
      }
    });
  } else {
    cb();
  }
};

var saveFile = function saveFile(fileInfo, id, tempPath, cb, failCb) {
  wx.getFileInfo({
    filePath: tempPath,
    success: function success(res) {
      var size = res.size;
      tryToRemoveTheOldestFile(fileInfo, size, function () {
        wx.saveFile({
          tempFilePath: tempPath,
          success: function success(res) {
            var localPath = res.savedFilePath;
            cb(localPath);
            fileInfo.files.push({
              title: _song2.default._songSet[id].name,
              size: size,
              localPath: localPath
            });
            fileInfo.totalSize += size;
            wx.setStorage({
              key: _config2.default.STORAGE_KEY.SONG_FILE_PREFIX + id,
              data: localPath,
              fail: function fail(res) {
                console.error('[File] unknown error when save file wx.setStorage', res, 'but file already saved, TODO remove the abandon file');
              }
            });
            wx.setStorage({
              key: _config2.default.STORAGE_KEY.SONG_FILES_INFO,
              data: fileInfo,
              success: function success(res) {
                console.log('[File] save file success, fileInfo: ', fileInfo);
                wx.getSavedFileList({
                  success: function success(res) {
                    console.log('[File] save file success, savedFile: ', res.fileList);
                  }
                });
              },
              fail: function fail(res) {
                console.error('[File] unknown error when save file wx.setStorage', res, 'but file already saved, TODO remove the abandon file');
              }
            });
          },
          fail: function fail(res) {
            console.error('[File] wx.saveFile fail', res, 'Abort save file');
            failCb && failCb();
          }
        });
      }, failCb);
    },
    fail: function fail(res) {
      console.error('[File] wx.getFileInfo fail', res, 'Abort save file');
      failCb && failCb();
    }
  });
};

var getSavedFileInfoAndSaveFile = function getSavedFileInfoAndSaveFile(id, tempPath, cb, failCb) {
  wx.getStorage({
    key: _config2.default.STORAGE_KEY.SONG_FILES_INFO,
    success: function success(res) {
      saveFile(res.data, id, tempPath, cb, failCb);
    },
    fail: function fail(res) {
      var fileInfo = {
        totalSize: 0,
        files: []
      };
      saveFile(fileInfo, id, tempPath, cb, failCb);
    }
  });
};

var updateSavedFileInfo = function updateSavedFileInfo(id) {
  // don't need check success or fail
  //fuck linchao
  //wx.setStorage({
  //key: `${config.STORAGE_KEY.SONG_FILE_PREFIX}${id}`,
  //data: undefined
  //})
  wx.removeStorage({
    key: '' + _config2.default.STORAGE_KEY.SONG_FILE_PREFIX + id,
    success: function success(res) {
      console.log('[File] remove broken', '' + _config2.default.STORAGE_KEY.SONG_FILE_PREFIX + id, 'success');
    },
    fail: function fail(res) {
      console.log('[File] remove broken fail', res);
    }
  });

  wx.getSavedFileList({
    success: function success(res) {
      var fileList = res.fileList;
      wx.getStorage({
        key: _config2.default.STORAGE_KEY.SONG_FILES_INFO,
        success: function success(res) {
          var fileInfo = res.data;
          // remove abandon files
          fileList.forEach(function (file) {
            var found = false;
            fileInfo.files.forEach(function (info) {
              if (info.localPath === file.filePath) {
                found = true;
              }
            });
            if (!found) {
              console.log('[File] remove broken file');
              wx.removeSavedFile({
                filePath: file.filePath
              });
            }
          });

          // update fileInfo in localStorage

          var _loop = function _loop(i) {
            var found = false;
            fileList.forEach(function (file) {
              if (fileInfo.files[i].localPath === file.filePath) {
                found = true;
              }
            });

            if (!found) {
              fileInfo.files.splice(i, 1);
            }
          };

          for (var i = fileInfo.files.length - 1; i >= 0; i--) {
            _loop(i);
          }

          fileInfo.totalSize = 0;
          fileInfo.files.forEach(function (info) {
            fileInfo.totalSize += info.size;
          });

          wx.setStorage({
            key: _config2.default.STORAGE_KEY.SONG_FILES_INFO,
            data: fileInfo,
            success: function success(res) {
              console.log('[File] update broken file success');
            }
          });
        }
      });
    }
  });
};

var File = function () {
  function File() {
    _classCallCheck(this, File);
  }

  _createClass(File, null, [{
    key: 'getFile',
    value: function getFile(id, cb) {
      var tryToDownload = function tryToDownload() {
        console.log('[Network] try to download song', id);
        var url = _song2.default._songSet[id].url;
        wx.downloadFile({
          url: url,
          success: function success(res) {
            var tempPath = res.tempFilePath;
            console.log('[Network] download song success', tempPath);
            //          cb(tempPath)
            getSavedFileInfoAndSaveFile(id, tempPath, cb, function () {
              cb(url);
              updateSavedFileInfo(id);
            });
          },
          fail: function fail(res) {
            console.error('[Network] download file fail, rollback to url');
            cb(url);
          }
        });
      };

      wx.getStorage({
        key: '' + _config2.default.STORAGE_KEY.SONG_FILE_PREFIX + id,
        success: function success(res) {
          var localPath = res.data;
          wx.getSavedFileInfo({
            filePath: localPath,
            success: function success(res) {
              console.log('[File] have saved file, don\'t need download again');
              cb(localPath);
            },
            fail: function fail(res) {
              console.log('[File] saved file is out of date or first time, try to update storage');
              updateSavedFileInfo(id);

              tryToDownload();
            }
          });
        },
        fail: function fail(res) {
          tryToDownload();
        }
      });
    }
  }, {
    key: 'removeFile',
    value: function removeFile(id) {
      updateSavedFileInfo(id);
    }
  }]);

  return File;
}();

exports.default = File;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _point = __webpack_require__(17);

var _point2 = _interopRequireDefault(_point);

var _common = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Line = function () {
  function Line(a, b) {
    _classCallCheck(this, Line);

    this.a = a;
    this.b = b;
  }

  _createClass(Line, [{
    key: 'inLine',
    value: function inLine(p) {
      return _point2.default.inline(this.a, this.b, p);
    }
  }, {
    key: 'btw',
    value: function btw(p) {
      return _point2.default.btw(this.a, this.b, p);
    }
    //0: 不相交
    //1: 规范相交
    //2: 非规范相交

  }, {
    key: 'cross',
    value: function cross(l) {
      var a = this.a;
      var b = this.b;
      var c = l.a;
      var d = l.b;
      var s1 = b.SUB(a).CROSS(c.SUB(a));
      var s2 = b.SUB(a).CROSS(d.SUB(a));
      var d1 = (0, _common.dcmp)(s1);
      var d2 = (0, _common.dcmp)(s2);
      var d3 = (0, _common.dcmp)(d.SUB(c).CROSS(a.SUB(c)));
      var d4 = (0, _common.dcmp)(d.SUB(c).CROSS(b.SUB(c)));

      if ((d1 ^ d2) === -2 && (d3 ^ d4) == -2) {
        var crossPoint = new _point2.default((c.x * s2 - d.x * s1) / (s2 - s1), (c.y * s2 - d.y * s1) / (s2 - s1));
        return {
          res: 1,
          crossPoint: crossPoint
        };
      }
      if (d1 === 0 && _point2.default.btw(c, a, b) <= 0 || d2 === 0 && _point2.default.btw(d, a, b) <= 0 || d3 === 0 && _point2.default.btw(a, c, d) <= 0 || d4 === 0 && _point2.default.btw(b, c, d) <= 0) {
        return {
          res: 2,
          crossPoint: null
        };
      }
      return {
        res: 0,
        crossPoint: null
      };
    }
  }]);

  return Line;
}();

exports.default = Line;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _arguments = arguments;

var _point = __webpack_require__(17);

var _point2 = _interopRequireDefault(_point);

var _line = __webpack_require__(36);

var _line2 = _interopRequireDefault(_line);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var getArguments = function getArguments(args) {
  var ret = void 0;
  if (args.length == 1) {
    ret = {
      x: args[0].x,
      y: args[0].y,
      w: args[0].w === undefined ? args[0].width : args[0].w,
      h: args[0].h === undefined ? args[0].height : args[0].h
    };
  } else if (args.length === 2) {
    ret = {
      x: args[0].x,
      y: args[0].y,
      w: args[1].w === undefined ? args[1].width : args[1].w,
      h: args[1].h === undefined ? args[1].height : args[1].h
    };
  } else if (args.length === 3) {
    ret = {
      x: args[0].x,
      y: args[0].y,
      w: args[1],
      h: args[2]
    };
  } else if (args.length === 4) {
    ret = {
      x: args[0],
      y: args[1],
      w: args[2],
      h: args[3]
    };
  } else {
    console.error('rect error args', _arguments);
  }
  if (ret.w === undefined || ret.h === undefined) {
    console.error('rect error args', ret);
  }
  return ret;
};

var getArgumentsXY = function getArgumentsXY(args) {
  if (args.length === 1) {
    return { x: args[0].x, y: args[0].y };
  }
  return { x: args[0], y: args[1] };
};

var Rect = function () {
  function Rect() {
    _classCallCheck(this, Rect);

    var _getArguments = getArguments(arguments),
        x = _getArguments.x,
        y = _getArguments.y,
        w = _getArguments.w,
        h = _getArguments.h;

    this._x = x;
    this._y = y;
    this._h = h;
    this._w = w;
  }

  _createClass(Rect, [{
    key: 'contain',
    value: function contain(p) {
      return this.left < p.x && p.x < this.right && this.top < p.y && p.y < this.bottom;
    }
  }, {
    key: 'intersectionLine',
    value: function intersectionLine(a, b) {
      var minx = Math.min(a.x, b.x);
      var maxx = Math.max(a.x, b.x);
      var miny = Math.min(a.y, b.y);
      var maxy = Math.max(a.y, b.y);
      return this._x < maxx && this._x + this._w > minx && this._y < maxy && this._y + this._h > miny;
    }
  }, {
    key: 'intersection',
    value: function intersection(rect) {
      return this._x < rect.x + rect.w && this._x + this._w > rect.x && this._y < rect.y + rect.h && this._y + this._h > rect.y;

      //let c1 = rect.contain(this.leftTopPoint)
      //let c2 = rect.contain(this.leftBottomPoint)
      //let c3 = rect.contain(this.rightTopPoint)
      //let c4 = rect.contain(this.rightBottomPoint)
      //if (c1 && c2 && c3 && c4) {
      //return true
      //}
      //if (c1 || c2 || c3 || c4) {
      //return true
      //}
      //c1 = this.contain(rect.leftTopPoint)
      //c2 = this.contain(rect.leftBottomPoint)
      //c3 = this.contain(rect.rightTopPoint)
      //c4 = this.contain(rect.rightBottomPoint)
      //if (c1 && c2 && c3 && c4) {
      //return true
      //}
      //if (c1 || c2 || c3 || c4) {
      //return true
      //}
      //if (this.leftLine.cross(rect.topLine).res) {
      //return true
      //}
      //if (this.topLine.cross(rect.leftLine).res) {
      //return true
      //}
      //return false
    }
  }, {
    key: 'reset',
    value: function reset(rect) {
      this._x = rect.x;
      this._y = rect.y;
      this._w = rect.width;
      this._h = rect.height;
      this._clear();
      return this;
    }
  }, {
    key: 'size',
    value: function size(w, h) {
      this._w = w;
      this._h = h;
      this._clear();
      return this;
    }
  }, {
    key: 'pos',
    value: function pos(x, y) {
      this.x = x;
      this.y = y;
      this._clear();
      return this;
    }
  }, {
    key: 'move',
    value: function move() {
      var _getArgumentsXY = getArgumentsXY(arguments),
          x = _getArgumentsXY.x,
          y = _getArgumentsXY.y;

      this.x += x;
      this.y += y;
      this._clear();
      return this;
    }
  }, {
    key: '_clear',
    value: function _clear() {
      this._r = undefined;
      this._b = undefined;
      this._rightTopPoint = undefined;
      this._leftTopPoint = undefined;
      this._rightBottomPoint = undefined;
      this._leftBottomPoint = undefined;
      this._centerPoint = undefined;
      this._points = undefined;
      this._leftLine = undefined;
      this._rightLine = undefined;
      this._bottomLine = undefined;
      this._topLine = undefined;
      this._lines = undefined;
    }
  }, {
    key: 'carve',


    // slice the rect by given point, used in qt
    value: function carve(p) {
      var result = [],
          deltaX = p.x - this.x,
          deltaY = p.y - this.y;

      var carveX = deltaX > 0 && deltaX < this.width,
          carveY = deltaY > 0 && deltaY < this.height;

      // slice the rect by x-axis & y-axis
      if (carveX && carveY) {
        var temp = this.carve(new _point2.default(p.x, this.y));
        while (temp.length) {
          result = result.concat(temp.shift().carve(new _point2.default(this.x, p.y)));
        }

        // only slice by x-axis
      } else if (carveX) {
        result.push(new this.constructor(this.x, this.y, deltaX, this.height), new this.constructor(p.x, this.y, this.width - deltaX, this.height));

        // only slice by y-axis
      } else if (carveY) {
        result.push(new this.constructor(this.x, this.y, this.width, deltaY), new this.constructor(this.x, p.y, this.width, this.height - deltaY));
      }

      return result;
    }
  }, {
    key: 'x',
    set: function set(x) {
      this._x = x;
      this._clear();
    },
    get: function get() {
      return this._x;
    }
  }, {
    key: 'y',
    set: function set(y) {
      this._y = y;
      this._clear();
    },
    get: function get() {
      return this._y;
    }
  }, {
    key: 'width',
    set: function set(w) {
      this._w = w;
      this._clear();
    },
    get: function get() {
      return this._w;
    }
  }, {
    key: 'height',
    set: function set(h) {
      this._h = h;
      this._clear();
    },
    get: function get() {
      return this._h;
    }
  }, {
    key: 'left',
    set: function set(x) {
      this._x = x;
      this._clear();
    },
    get: function get() {
      return this._x;
    }
  }, {
    key: 'right',
    set: function set(y) {
      this._y = y;
      this._clear();
    },
    get: function get() {
      if (!this._r) {
        this._r = this._x + this._w;
      }
      return this._r;
    }
  }, {
    key: 'w',
    get: function get() {
      return this._w;
    }
  }, {
    key: 'h',
    get: function get() {
      return this._h;
    }
  }, {
    key: 'top',
    get: function get() {
      return this._y;
    }
  }, {
    key: 'bottom',
    get: function get() {
      if (!this._b) {
        this._b = this._y + this._h;
      }
      return this._b;
    }
  }, {
    key: 'centerPoint',
    get: function get() {
      if (!this._centerPoint) {
        this._centerPoint = new _point2.default(this._x + (this._w >> 1), this._y + (this._h >> 1));
      }
      return this._centerPoint;
    }
  }, {
    key: 'leftTopPoint',
    get: function get() {
      if (!this._leftTopPoint) {
        this._leftTopPoint = new _point2.default(this._x, this._y);
      }
      return this._leftTopPoint;
    }
  }, {
    key: 'leftBottomPoint',
    get: function get() {
      if (!this._leftBottomPoint) {
        this._leftBottomPoint = new _point2.default(this._x, this.bottom);
      }
      return this._leftBottomPoint;
    }
  }, {
    key: 'rightTopPoint',
    get: function get() {
      if (!this._rightTopPoint) {
        this._rightTopPoint = new _point2.default(this.right, this._y);
      }
      return this._rightTopPoint;
    }
  }, {
    key: 'rightBottomPoint',
    get: function get() {
      if (!this._rightBottomPoint) {
        this._rightBottomPoint = new _point2.default(this.right, this.bottom);
      }
      return this._rightBottomPoint;
    }
  }, {
    key: 'points',
    get: function get() {
      if (!this._points) {
        this._points = [this.leftTopPoint, this.leftBottomPoint, this.rightBottomPoint, this.rightTopPoint];
      }
      return this._points;
    }
  }, {
    key: 'leftLine',
    get: function get() {
      if (!this._leftLine) {
        this._leftLine = new _line2.default(this.leftTopPoint, this.leftBottomPoint);
      }
      return this._leftLine;
    }
  }, {
    key: 'rightLine',
    get: function get() {
      if (!this._rightLine) {
        this._rightLine = new _line2.default(this.rightTopPoint, this.rightBottomPoint);
      }
      return this._rightLine;
    }
  }, {
    key: 'bottomLine',
    get: function get() {
      if (!this._bottomLine) {
        this._bottomLine = new _line2.default(this.leftBottomPoint, this.rightBottomPoint);
      }
      return this._bottomLine;
    }
  }, {
    key: 'topLine',
    get: function get() {
      if (!this._topLine) {
        this._topLine = new _line2.default(this.leftTopPoint, this.rightTopPoint);
      }
      return this._topLine;
    }
  }, {
    key: 'lines',
    get: function get() {
      if (!this._lines) {
        this._lines = [this.rightLine, this.bottomLine, this.leftLine, this.topLine];
      }
      return this._lines;
    }
  }, {
    key: 'size',
    get: function get() {
      return [this._w, this._h];
    }
  }, {
    key: 'clone',
    get: function get() {
      return new Rect(this._x, this._y, this._w, this._h);
    }
  }, {
    key: 'args',
    get: function get() {
      return [this._x, this._y, this._w, this._h];
    }
  }]);

  return Rect;
}();

exports.default = Rect;

/***/ }),
/* 38 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var random = exports.random = function random() {
  if (arguments.length === 0) {
    return Math.random();
  } else if (arguments.length === 1) {
    var e = arguments[0];
    return Math.floor(Math.random() * e);
  } else {
    var s = arguments[0];
    var _e = arguments[1];
    return Math.floor(Math.random() * (_e - s)) + s;
  }
};

var seed = 0;

var rand = function rand() {
  seed = (seed * 9301 + 49297) % 233280;
  return seed / 233280.0;
};

var setSeedStr = exports.setSeedStr = function setSeedStr(str) {
  seed = 0;
  for (var i = 0; i < str.length; i++) {
    var chr = str.charCodeAt(i);
    seed = (seed << 5) - seed + chr;
    seed |= 0;
  }
  if (seed < 0) {
    seed = -seed;
  }
  return seed;
};

var setSeed = exports.setSeed = function setSeed(number) {
  return seed = number;
};

// stable random
var srandom = exports.srandom = function srandom() {
  // TODO self generate random number
  if (arguments.length === 0) {
    return rand();
  } else if (arguments.length === 1) {
    var e = arguments[0];
    return Math.floor(rand() * e);
  } else {
    var s = arguments[0];
    var _e2 = arguments[1];
    return Math.floor(rand() * (_e2 - s)) + s;
  }
};

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _game = __webpack_require__(13);

var _game2 = _interopRequireDefault(_game);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var onHide = function onHide(onShowOptions) {
  wx.gameLogoutReport({
    data: {
      gameVersion: 1,
      zoneId: 0,
      serverId: 0,
      roleId: '',
      roleName: '',
      userLevel: 1
    }
  });
  console.log('on hide');
  if (onShowOptions && onShowOptions.query && onShowOptions.query.live) {
    //wx.exitMiniProgram()
    _utils.Network.witnessQuit(onShowOptions.query.gameId);
  }
  _game2.default.pauseHandler();
};

exports.default = onHide;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _game = __webpack_require__(13);

var _game2 = _interopRequireDefault(_game);

var _utils = __webpack_require__(1);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _assetsLoader = __webpack_require__(15);

var _assetsLoader2 = _interopRequireDefault(_assetsLoader);

var _startPanel = __webpack_require__(25);

var _startPanel2 = _interopRequireDefault(_startPanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_utils.emitter.on('error', function (msg) {
  setTimeout(function () {
    console.log('onError', msg);
    _game2.default.destroy();
    _game2.default.init(_config2.default.GAME_MODE.BACKGROUND);
  }, 0);
});

var loaded = false;
var onShow = function onShow(options) {
  wx.gameLoginReport({
    data: {
      gameVersion: 1,
      zoneId: 0,
      serverId: 0,
      roleId: '',
      roleName: '',
      userLevel: 1
    }
  });
  if (!loaded) {
    _startPanel2.default.onLoad();
  }

  if (options.query.live) {
    if (loaded) {
      _game2.default.destroy();
    }
    var _options$query = options.query,
        gameId = _options$query.gameId,
        id = _options$query.id,
        level = _options$query.level;

    console.log('query: ', gameId, id, level);
    _utils.Network.login(function () {
      _utils.Network.getUserInfo(function () {
        return loadMyAvatar();
      });

      _utils.Network.getMusicList(function (music, dataSource) {
        // 如果列表从本地获取，则不更新
        if (dataSource !== 'storage') {
          _utils.Score.setMyScores(calculateMyInfo(music));
          _song2.default.initSongSet(music);
        } else {
          _song2.default.initSongSet(music);
        }

        _utils.Network.connectSocket(function () {
          _utils.Network.joinGame(gameId);
        });
      });

      _utils.Network.syncCmd(gameId);
    });

    _game2.default.init(_config2.default.GAME_MODE.LIVE, id, level);
    loaded = true;
  } else {
    if (loaded) {
      _game2.default.continueHanlder();
      return;
    }
    _utils.Network.login(function () {
      _utils.Network.getUserInfo(function () {
        return loadMyAvatar();
      });
      _utils.Network.getMusicList(function (music, dataSource) {
        // 如果列表从本地获取，则不更新
        if (dataSource !== 'storage') {
          _utils.Score.setMyScores(calculateMyInfo(music));
          _song2.default.initSongSet(music);
        } else {
          _song2.default.initSongSet(music);
        }
      });
    });

    _utils.Network.connectSocket();
    _game2.default.init(_config2.default.GAME_MODE.BACKGROUND);
    loaded = true;
  }
};

function calculateMyInfo(music) {
  return music.reduce(function (result, current) {
    var score = current.score_info_list;
    if (score.length === 0) {
      score.push({
        type: 0,
        score: 0
      }, {
        type: 1,
        score: 0
      });
    }

    result[current.music_id] = score;

    return result;
  }, {});
}

function loadMyAvatar() {
  // AssetsLoader.load('myAvatar', Network._userInfo.avatarUrl)
}

exports.default = onShow;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var Laya = window.Laya = function (t, e) {
  var i = { __internals: [], __packages: {}, __classmap: { Object: Object, Function: Function, Array: Array, String: String }, __sysClass: { object: "Object", array: "Array", string: "String", dictionary: "Dictionary" }, __propun: { writable: !0, enumerable: !1, configurable: !0 }, __presubstr: String.prototype.substr, __substr: function __substr(t, e) {
      return 1 == arguments.length ? i.__presubstr.call(this, t) : i.__presubstr.call(this, t, e > 0 ? e : this.length + e);
    }, __init: function __init(t) {
      t.forEach(function (t) {
        t.__init$ && t.__init$();
      });
    }, __isClass: function __isClass(t) {
      return t && (t.__isclass || t == Object || t == String || t == Array);
    }, __newvec: function __newvec(t, e) {
      var i = [];i.length = t;for (var n = 0; n < t; n++) {
        i[n] = e;
      }return i;
    }, __extend: function __extend(t, e) {
      function n() {
        i.un(this, "constructor", t);
      }for (var s in e) {
        if (e.hasOwnProperty(s)) {
          var r = Object.getOwnPropertyDescriptor(e, s),
              a = r.get,
              o = r.set;a || o ? a && o ? Object.defineProperty(t, s, r) : (a && Object.defineProperty(t, s, a), o && Object.defineProperty(t, s, o)) : t[s] = e[s];
        }
      }n.prototype = e.prototype, t.prototype = new n(), i.un(t.prototype, "__imps", i.__copy({}, e.prototype.__imps));
    }, __copy: function __copy(t, e) {
      if (!e) return null;t = t || {};for (var i in e) {
        t[i] = e[i];
      }return t;
    }, __package: function __package(e, n) {
      if (!i.__packages[e]) {
        i.__packages[e] = !0;var s = t,
            r = e.split(".");if (r.length > 1) for (var a = 0, o = r.length - 1; a < o; a++) {
          var h = s[r[a]];s = h || (s[r[a]] = {});
        }s[r[r.length - 1]] || (s[r[r.length - 1]] = n || {});
      }
    }, __hasOwnProperty: function __hasOwnProperty(t, e) {
      function i(t, e) {
        if (Object.hasOwnProperty.call(e.prototype, t)) return !0;var n = e.prototype.__super;return null == n ? null : i(t, n);
      }return e = e || this, Object.hasOwnProperty.call(e, t) || i(t, e.__class);
    }, __typeof: function __typeof(t, e) {
      if (!t || !e) return !1;if (e === String) return "string" == typeof t;if (e === Number) return "number" == typeof t;if (e.__interface__) e = e.__interface__;else if ("string" != typeof e) return t instanceof e;return t.__imps && t.__imps[e] || t.__class == e;
    }, __as: function __as(t, e) {
      return this.__typeof(t, e) ? t : null;
    }, interface: function _interface(e, n) {
      i.__package(e, {});var s = i.__internals,
          r = s[e] = s[e] || { self: e };if (n) {
        var a = n.split(",");r.extend = [];for (u = 0; u < a.length; u++) {
          var o = a[u];s[o] = s[o] || { self: o }, r.extend.push(s[o]);
        }
      }for (var h = t, l = e.split("."), u = 0; u < l.length - 1; u++) {
        h = h[l[u]];
      }h[l[l.length - 1]] = { __interface__: e };
    }, class: function _class(e, n, s, r) {
      if (s && i.__extend(e, s), n) if (i.__package(n, e), i.__classmap[n] = e, n.indexOf(".") > 0) {
        if (0 == n.indexOf("laya.")) {
          var a = n.split(".");r = r || a[a.length - 1], i[r] && console.log("Warning!,this class[" + r + "] already exist:", i[r]), i[r] = e;
        }
      } else "Main" == n ? t.Main = e : (i[n] && console.log("Error!,this class[" + n + "] already exist:", i[n]), i[n] = e);var o = i.un,
          h = e.prototype;o(h, "hasOwnProperty", i.__hasOwnProperty), o(h, "__class", e), o(h, "__super", s), o(h, "__className", n), o(e, "__super", s), o(e, "__className", n), o(e, "__isclass", !0), o(e, "super", function (t) {
        this.__super.call(t);
      });
    }, imps: function imps(t, e) {
      function n(t) {
        var e, r;if ((e = i.__internals[t]) && (s[t] = !0, r = e.extend)) for (var a = 0; a < r.length; a++) {
          n(r[a].self);
        }
      }if (!e) return null;var s = t.__imps || i.un(t, "__imps", {});for (var r in e) {
        n(r);
      }
    }, superSet: function superSet(t, e, i, n) {
      var s = t.prototype["_$set_" + i];s && s.call(e, n);
    }, superGet: function superGet(t, e, i) {
      var n = t.prototype["_$get_" + i];return n ? n.call(e) : null;
    }, getset: function getset(t, e, n, s, r) {
      t ? (s && (e["_$GET_" + n] = s), r && (e["_$SET_" + n] = r)) : (s && i.un(e, "_$get_" + n, s), r && i.un(e, "_$set_" + n, r)), s && r ? Object.defineProperty(e, n, { get: s, set: r, enumerable: !1 }) : (s && Object.defineProperty(e, n, { get: s, enumerable: !1 }), r && Object.defineProperty(e, n, { set: r, enumerable: !1 }));
    }, static: function _static(t, e) {
      for (var i = 0, n = e.length; i < n; i += 2) {
        "length" == e[i] ? t.length = e[i + 1].call(t) : function () {
          var n = e[i],
              s = e[i + 1];Object.defineProperty(t, n, { get: function get() {
              return delete this[n], this[n] = s.call(this);
            }, set: function set(t) {
              delete this[n], this[n] = t;
            }, enumerable: !0, configurable: !0 });
        }();
      }
    }, un: function un(t, e, n) {
      return n || (n = t[e]), i.__propun.value = n, Object.defineProperty(t, e, i.__propun), n;
    }, uns: function uns(t, e) {
      e.forEach(function (e) {
        i.un(t, e);
      });
    } };return t.console = t.console || { log: function log() {} }, t.trace = t.console.log, Error.prototype.throwError = function () {
    throw arguments;
  }, Object.defineProperty(Array.prototype, "fixed", { enumerable: !1 }), i;
}(window, document);!function (t, e, i) {
  i.un, i.uns, i.static, i.class, i.getset, i.__newvec;
}(window, document, Laya), function (window, document, Laya) {
  var __un = Laya.un,
      __uns = Laya.uns,
      __static = Laya.static,
      __class = Laya.class,
      __getset = Laya.getset,
      __newvec = Laya.__newvec;Laya.interface("laya.runtime.IMarket"), Laya.interface("laya.filters.IFilter"), Laya.interface("laya.display.ILayout"), Laya.interface("laya.resource.IDispose"), Laya.interface("laya.runtime.IPlatform"), Laya.interface("laya.resource.IDestroy"), Laya.interface("laya.runtime.IConchNode"), Laya.interface("laya.filters.IFilterAction"), Laya.interface("laya.runtime.ICPlatformClass"), Laya.interface("laya.resource.ICreateResource"), Laya.interface("laya.runtime.IConchRenderObject"), Laya.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");var RunDriver = function () {
    function t() {}return __class(t, "laya.utils.RunDriver"), t.FILTER_ACTIONS = [], t.pixelRatio = -1, t._charSizeTestDiv = null, t.now = function () {
      return Date.now();
    }, t.getWindow = function () {
      return window;
    }, t.getPixelRatio = function () {
      if (t.pixelRatio < 0) {
        var e = Browser.context,
            i = e.backingStorePixelRatio || e.webkitBackingStorePixelRatio || e.mozBackingStorePixelRatio || e.msBackingStorePixelRatio || e.oBackingStorePixelRatio || e.backingStorePixelRatio || 1;(t.pixelRatio = (Browser.window.devicePixelRatio || 1) / i) < 1 && (t.pixelRatio = 1);
      }return t.pixelRatio;
    }, t.getIncludeStr = function (t) {
      return null;
    }, t.createShaderCondition = function (t) {
      var e = "(function() {return " + t + ";})";return Browser.window.eval(e);
    }, t.fontMap = [], t.measureText = function (e, i) {
      var n = t.hanzi.test(e);if (n && t.fontMap[i]) return t.fontMap[i];var s = Browser.context;s.font = i;var r = s.measureText(e);return n && (t.fontMap[i] = r), r;
    }, t.getWebGLContext = function (t) {}, t.beginFlush = function () {}, t.endFinish = function () {}, t.addToAtlas = null, t.flashFlushImage = function (t) {}, t.drawToCanvas = function (t, e, i, n, s, r) {
      var a = HTMLCanvas.create("2D"),
          o = new RenderContext(i, n, a);return RenderSprite.renders[e]._fun(t, o, s, r), a;
    }, t.createParticleTemplate2D = null, t.createGLTextur = null, t.createWebGLContext2D = null, t.changeWebGLSize = function (t, e) {}, t.createRenderSprite = function (t, e) {
      return new RenderSprite(t, e);
    }, t.createFilterAction = function (t) {
      return new ColorFilterAction();
    }, t.createGraphics = function () {
      return new Graphics();
    }, t.clear = function (t) {
      Render._context.ctx.clear();
    }, t.clearAtlas = function (t) {}, t.isAtlas = function (t) {
      return !1;
    }, t.addTextureToAtlas = function (t) {}, t.getTexturePixels = function (t, e, i, n, s) {
      return null;
    }, t.skinAniSprite = function () {
      return null;
    }, t.update3DLoop = function () {}, __static(t, ["hanzi", function () {
      return this.hanzi = new RegExp("^[一-龥]$");
    }]), t;
  }(),
      ___Laya = (__getset(1, Laya, "alertGlobalError", null, function (t) {
    var e = 0;Browser.window.onerror = t ? function (t, i, n, s, r) {
      e++ < 5 && r && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + r.stack || r);
    } : null;
  }), Laya.init = function (t, e, i) {
    for (var n = [], s = 2, r = arguments.length; s < r; s++) {
      n.push(arguments[s]);
    }if (!Laya._isinit) {
      ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = Laya._arrayBufferSlice), Laya._isinit = !0, Browser.__init__(), Context.__init__(), Graphics.__init__(), Laya.timer = new Timer(), Laya.scaleTimer = new Timer(), Laya.loader = new LoaderManager(), WeakObject.__init__();for (var s = 0, a = n.length; s < a; s++) {
        n[s].enable && n[s].enable();
      }return Font.__init__(), Style.__init__(), ResourceManager.__init__(), CacheManager.beginCheck(), Laya._currentStage = Laya.stage = new Stage(), Laya.stage.conchModel && Laya.stage.conchModel.setRootNode(), Laya.getUrlPath(), Laya.render = new Render(0, 0), Laya.stage.size(t, e), RenderSprite.__init__(), KeyBoardManager.__init__(), MouseManager.instance.__init__(Laya.stage, Render.canvas), Input.__init__(), SoundManager.autoStopMusic = !0, LocalStorage.__init__(), Render.canvas;
    }
  }, Laya.getUrlPath = function () {
    var t = Browser.window.location,
        e = t.pathname;e = ":" == e.charAt(2) ? e.substring(1) : e, URL.rootPath = URL.basePath = URL.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname);
  }, Laya._arrayBufferSlice = function (t, e) {
    var i = new Uint8Array(this, t, e - t),
        n = new Uint8Array(i.length);return n.set(i), n.buffer;
  }, Laya.stage = null, Laya.timer = null, Laya.scaleTimer = null, Laya.loader = null, Laya.version = "1.7.13beta", Laya.render = null, Laya._currentStage = null, Laya._isinit = !1, __static(Laya, ["conchMarket", function () {
    return this.conchMarket = window.conch ? conchMarket : null;
  }, "PlatformClass", function () {
    return this.PlatformClass = window.PlatformClass;
  }]), Laya),
      Config = function () {
    function t() {}return __class(t, "Config"), t.WebGLTextCacheCount = 500, t.atlasEnable = !1, t.showCanvasMark = !1, t.animationInterval = 50, t.isAntialias = !1, t.isAlpha = !1, t.premultipliedAlpha = !0, t.isStencil = !0, t.preserveDrawingBuffer = !1, t;
  }(),
      EventDispatcher = function () {
    function t() {
      this._events = null;
    }var e;__class(t, "laya.events.EventDispatcher");var i = t.prototype;return i.hasListener = function (t) {
      return !!(this._events && this._events[t]);
    }, i.event = function (t, e) {
      if (!this._events || !this._events[t]) return !1;var i = this._events[t];if (i.run) i.once && delete this._events[t], null != e ? i.runWith(e) : i.run();else {
        for (var n = 0, s = i.length; n < s; n++) {
          var r = i[n];r && (null != e ? r.runWith(e) : r.run()), r && !r.once || (i.splice(n, 1), n--, s--);
        }0 === i.length && this._events && delete this._events[t];
      }return !0;
    }, i.on = function (t, e, i, n) {
      return this._createListener(t, e, i, n, !1);
    }, i.once = function (t, e, i, n) {
      return this._createListener(t, e, i, n, !0);
    }, i._createListener = function (t, i, n, s, r, a) {
      void 0 === a && (a = !0), a && this.off(t, i, n, r);var o = e.create(i || this, n, s, r);this._events || (this._events = {});var h = this._events;return h[t] ? h[t].run ? h[t] = [h[t], o] : h[t].push(o) : h[t] = o, this;
    }, i.off = function (t, e, i, n) {
      if (void 0 === n && (n = !1), !this._events || !this._events[t]) return this;var s = this._events[t];if (null != i) if (s.run) e && s.caller !== e || s.method !== i || n && !s.once || (delete this._events[t], s.recover());else {
        for (var r = 0, a = 0, o = s.length; a < o; a++) {
          var h = s[a];!h || e && h.caller !== e || h.method !== i || n && !h.once || (r++, s[a] = null, h.recover());
        }r === o && delete this._events[t];
      }return this;
    }, i.offAll = function (t) {
      var e = this._events;if (!e) return this;if (t) this._recoverHandlers(e[t]), delete e[t];else {
        for (var i in e) {
          this._recoverHandlers(e[i]);
        }this._events = null;
      }return this;
    }, i._recoverHandlers = function (t) {
      if (t) if (t.run) t.recover();else for (var e = t.length - 1; e > -1; e--) {
        t[e] && (t[e].recover(), t[e] = null);
      }
    }, i.isMouseEvent = function (e) {
      return t.MOUSE_EVENTS[e];
    }, __static(t, ["MOUSE_EVENTS", function () {
      return this.MOUSE_EVENTS = { rightmousedown: !0, rightmouseup: !0, rightclick: !0, mousedown: !0, mouseup: !0, mousemove: !0, mouseover: !0, mouseout: !0, click: !0, doubleclick: !0 };
    }]), t.__init$ = function () {
      Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", { enumerable: !1, writable: !0 }), e = function (t) {
        function e(t, i, n, s) {
          e.__super.call(this, t, i, n, s);
        }__class(e, "", Handler);return e.prototype.recover = function () {
          this._id > 0 && (this._id = 0, e._pool.push(this.clear()));
        }, e.create = function (t, i, n, s) {
          return void 0 === s && (s = !0), e._pool.length ? e._pool.pop().setTo(t, i, n, s) : new e(t, i, n, s);
        }, e._pool = [], e;
      }();
    }, t;
  }(),
      Handler = function () {
    function t(t, e, i, n) {
      this.once = !1, this._id = 0, void 0 === n && (n = !1), this.setTo(t, e, i, n);
    }__class(t, "laya.utils.Handler");var e = t.prototype;return e.setTo = function (e, i, n, s) {
      return this._id = t._gid++, this.caller = e, this.method = i, this.args = n, this.once = s, this;
    }, e.run = function () {
      if (null == this.method) return null;var t = this._id,
          e = this.method.apply(this.caller, this.args);return this._id === t && this.once && this.recover(), e;
    }, e.runWith = function (t) {
      if (null == this.method) return null;var e = this._id;if (null == t) var i = this.method.apply(this.caller, this.args);else i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);return this._id === e && this.once && this.recover(), i;
    }, e.clear = function () {
      return this.caller = null, this.method = null, this.args = null, this;
    }, e.recover = function () {
      this._id > 0 && (this._id = 0, t._pool.push(this.clear()));
    }, t.create = function (e, i, n, s) {
      return void 0 === s && (s = !0), t._pool.length ? t._pool.pop().setTo(e, i, n, s) : new t(e, i, n, s);
    }, t._pool = [], t._gid = 1, t;
  }(),
      BitmapFont = function () {
    function t() {
      this._texture = null, this._fontCharDic = {}, this._fontWidthMap = {}, this._complete = null, this._path = null, this._maxWidth = 0, this._spaceWidth = 10, this._padding = null, this.fontSize = 12, this.autoScaleSize = !1, this.letterSpacing = 0;
    }__class(t, "laya.display.BitmapFont");var e = t.prototype;return e.loadFont = function (t, e) {
      this._path = t, this._complete = e, Laya.loader.load([{ url: this._path, type: "xml" }, { url: this._path.replace(".fnt", ".png"), type: "image" }], Handler.create(this, this.onLoaded));
    }, e.onLoaded = function () {
      this.parseFont(Loader.getRes(this._path), Loader.getRes(this._path.replace(".fnt", ".png"))), this._complete && this._complete.run();
    }, e.parseFont = function (t, e) {
      if (null != t && null != e) {
        this._texture = e;var i = t.getElementsByTagName("info");if (!i[0].getAttributeNode) return this.parseFont2(t, e);this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);var n = i[0].getAttributeNode("padding").nodeValue.split(",");this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];var s;s = t.getElementsByTagName("char");var r = 0;for (r = 0; r < s.length; r++) {
          var a = s[r],
              o = parseInt(a.getAttributeNode("id").nodeValue),
              h = parseInt(a.getAttributeNode("xoffset").nodeValue) / 1,
              l = parseInt(a.getAttributeNode("yoffset").nodeValue) / 1,
              u = parseInt(a.getAttributeNode("xadvance").nodeValue) / 1,
              c = new Rectangle();c.x = parseInt(a.getAttributeNode("x").nodeValue), c.y = parseInt(a.getAttributeNode("y").nodeValue), c.width = parseInt(a.getAttributeNode("width").nodeValue), c.height = parseInt(a.getAttributeNode("height").nodeValue);var _ = Texture.create(e, c.x, c.y, c.width, c.height, h, l);this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _, this._fontWidthMap[o] = u;
        }
      }
    }, e.parseFont2 = function (t, e) {
      if (null != t && null != e) {
        this._texture = e;var i = t.getElementsByTagName("info");this.fontSize = parseInt(i[0].attributes.size.nodeValue);var n = i[0].attributes.padding.nodeValue.split(",");this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];var s = t.getElementsByTagName("char"),
            r = 0;for (r = 0; r < s.length; r++) {
          var a = s[r].attributes,
              o = parseInt(a.id.nodeValue),
              h = parseInt(a.xoffset.nodeValue) / 1,
              l = parseInt(a.yoffset.nodeValue) / 1,
              u = parseInt(a.xadvance.nodeValue) / 1,
              c = new Rectangle();c.x = parseInt(a.x.nodeValue), c.y = parseInt(a.y.nodeValue), c.width = parseInt(a.width.nodeValue), c.height = parseInt(a.height.nodeValue);var _ = Texture.create(e, c.x, c.y, c.width, c.height, h, l);this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing), this._fontCharDic[o] = _, this._fontWidthMap[o] = u;
        }
      }
    }, e.getCharTexture = function (t) {
      return this._fontCharDic[t.charCodeAt(0)];
    }, e.destroy = function () {
      if (this._texture) {
        for (var t in this._fontCharDic) {
          var e = this._fontCharDic[t];e && e.destroy();
        }this._texture.destroy(), this._fontCharDic = null, this._fontWidthMap = null, this._texture = null;
      }
    }, e.setSpaceWidth = function (t) {
      this._spaceWidth = t;
    }, e.getCharWidth = function (t) {
      var e = t.charCodeAt(0);return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0;
    }, e.getTextWidth = function (t) {
      for (var e = 0, i = 0, n = t.length; i < n; i++) {
        e += this.getCharWidth(t.charAt(i));
      }return e;
    }, e.getMaxWidth = function () {
      return this._maxWidth;
    }, e.getMaxHeight = function () {
      return this.fontSize;
    }, e.drawText = function (t, e, i, n, s, r) {
      var a,
          o = this.getTextWidth(t),
          h = 0;"center" === s && (h = (r - o) / 2), "right" === s && (h = r - o);for (var l = 0, u = 0, c = t.length; u < c; u++) {
        (a = this.getCharTexture(t.charAt(u))) && (e.graphics.drawTexture(a, i + l + h, n), l += this.getCharWidth(t.charAt(u)));
      }
    }, t;
  }(),
      Style = function () {
    function t() {
      this.alpha = 1, this.visible = !0, this.scrollRect = null, this.blendMode = null, this._type = 0, this._tf = t._TF_EMPTY;
    }__class(t, "laya.display.css.Style");var e = t.prototype;return e.getTransform = function () {
      return this._tf;
    }, e.setTransform = function (e) {
      this._tf = "none" !== e && e ? e : t._TF_EMPTY;
    }, e.setTranslateX = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.translateX = e;
    }, e.setTranslateY = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.translateY = e;
    }, e.setScaleX = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.scaleX = e;
    }, e.setScale = function (e, i) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.scaleX = e, this._tf.scaleY = i;
    }, e.setScaleY = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.scaleY = e;
    }, e.setRotate = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.rotate = e;
    }, e.setSkewX = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.skewX = e;
    }, e.setSkewY = function (e) {
      this._tf === t._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.skewY = e;
    }, e.destroy = function () {
      this.scrollRect = null;
    }, e.render = function (t, e, i, n) {}, e.getCSSStyle = function () {
      return CSSStyle.EMPTY;
    }, e._enableLayout = function () {
      return !1;
    }, __getset(0, e, "scaleX", function () {
      return this._tf.scaleX;
    }, function (t) {
      this.setScaleX(t);
    }), __getset(0, e, "transform", function () {
      return this.getTransform();
    }, function (t) {
      this.setTransform(t);
    }), __getset(0, e, "translateX", function () {
      return this._tf.translateX;
    }, function (t) {
      this.setTranslateX(t);
    }), __getset(0, e, "translateY", function () {
      return this._tf.translateY;
    }, function (t) {
      this.setTranslateY(t);
    }), __getset(0, e, "scaleY", function () {
      return this._tf.scaleY;
    }, function (t) {
      this.setScaleY(t);
    }), __getset(0, e, "block", function () {
      return 0 != (1 & this._type);
    }), __getset(0, e, "skewY", function () {
      return this._tf.skewY;
    }, function (t) {
      this.setSkewY(t);
    }), __getset(0, e, "rotate", function () {
      return this._tf.rotate;
    }, function (t) {
      this.setRotate(t);
    }), __getset(0, e, "skewX", function () {
      return this._tf.skewX;
    }, function (t) {
      this.setSkewX(t);
    }), __getset(0, e, "paddingLeft", function () {
      return 0;
    }), __getset(0, e, "paddingTop", function () {
      return 0;
    }), __getset(0, e, "absolute", function () {
      return !0;
    }), t.__init__ = function () {
      t._TF_EMPTY = new TransformInfo(), t.EMPTY = new t();
    }, t.EMPTY = null, t._TF_EMPTY = null, t;
  }(),
      Font = function () {
    function t(e) {
      this._type = 0, this._weight = 0, this._decoration = null, this._text = null, this.indent = 0, this._color = Color.create(t.defaultColor), this.family = t.defaultFamily, this.stroke = t._STROKE, this.size = t.defaultSize, e && e !== t.EMPTY && e.copyTo(this);
    }__class(t, "laya.display.css.Font");var e = t.prototype;return e.set = function (t) {
      this._text = null;for (var e = t.split(" "), i = 0, n = e.length; i < n; i++) {
        var s = e[i];switch (s) {case "italic":
            this.italic = !0;continue;case "bold":
            this.bold = !0;continue;}s.indexOf("px") > 0 && (this.size = parseInt(s), this.family = e[i + 1], i++);
      }
    }, e.toString = function () {
      return this._text = "", this.italic && (this._text += "italic "), this.bold && (this._text += "bold "), this._text += this.size + "px " + this.family;
    }, e.copyTo = function (e) {
      e._type = this._type, e._text = this._text, e._weight = this._weight, e._color = this._color, e.family = this.family, e.stroke = this.stroke != t._STROKE ? this.stroke.slice() : t._STROKE, e.indent = this.indent, e.size = this.size;
    }, __getset(0, e, "password", function () {
      return 0 != (1024 & this._type);
    }, function (t) {
      t ? this._type |= 1024 : this._type &= -1025;
    }), __getset(0, e, "color", function () {
      return this._color.strColor;
    }, function (t) {
      this._color = Color.create(t);
    }), __getset(0, e, "italic", function () {
      return 0 != (512 & this._type);
    }, function (t) {
      t ? this._type |= 512 : this._type &= -513;
    }), __getset(0, e, "bold", function () {
      return 0 != (2048 & this._type);
    }, function (t) {
      t ? this._type |= 2048 : this._type &= -2049;
    }), __getset(0, e, "weight", function () {
      return "" + this._weight;
    }, function (t) {
      var e = 0;switch (t) {case "normal":
          break;case "bold":
          this.bold = !0, e = 700;break;case "bolder":
          e = 800;break;case "lighter":
          e = 100;break;default:
          e = parseInt(t);}this._weight = e, this._text = null;
    }), __getset(0, e, "decoration", function () {
      return this._decoration ? this._decoration.value : "none";
    }, function (t) {
      var e = t.split(" ");switch (this._decoration || (this._decoration = {}), e[0]) {case "_":
          this._decoration.type = "underline";break;case "-":
          this._decoration.type = "line-through";break;case "overline":
          this._decoration.type = "overline";break;default:
          this._decoration.type = e[0];}e[1] && (this._decoration.color = Color.create(e)), this._decoration.value = t;
    }), t.__init__ = function () {
      t.EMPTY = new t(null);
    }, t.EMPTY = null, t.defaultColor = "#000000", t.defaultSize = 12, t.defaultFamily = "Arial", t.defaultFont = "12px Arial", t._ITALIC = 512, t._PASSWORD = 1024, t._BOLD = 2048, __static(t, ["_STROKE", function () {
      return this._STROKE = [0, "#000000"];
    }]), t;
  }(),
      TransformInfo = function () {
    function t() {
      this.translateX = 0, this.translateY = 0, this.scaleX = 1, this.scaleY = 1, this.rotate = 0, this.skewX = 0, this.skewY = 0;
    }return __class(t, "laya.display.css.TransformInfo"), t;
  }(),
      Graphics = function () {
    function t() {
      if (this._one = null, this._cmds = null, this._render = this._renderEmpty, Render.isConchNode) {
        this._nativeObj = new window._conchGraphics(), this.id = this._nativeObj.conchID;
      }
    }__class(t, "laya.display.Graphics");var e = t.prototype;return e.destroy = function () {
      this.clear(), this._graphicBounds && this._graphicBounds.destroy(), this._graphicBounds = null, this._vectorgraphArray = null, this._sp && (this._sp._renderType = 0), this._sp = null;
    }, e.clear = function (e) {
      void 0 === e && (e = !1);var i = 0,
          n = 0;if (e) {
        var s = this._one;if (this._cmds) {
          for (n = this._cmds.length, i = 0; i < n; i++) {
            !(s = this._cmds[i]) || s.callee !== Render._context._drawTexture && s.callee !== Render._context._drawTextureWithTransform || (s[0] = null, t._cache.push(s));
          }this._cmds.length = 0;
        } else s && (!s || s.callee !== Render._context._drawTexture && s.callee !== Render._context._drawTextureWithTransform || (s[0] = null, t._cache.push(s)));
      } else this._cmds = null;if (this._one = null, this._render = this._renderEmpty, this._sp && (this._sp._renderType &= -514), this._repaint(), this._vectorgraphArray) {
        for (i = 0, n = this._vectorgraphArray.length; i < n; i++) {
          VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);
        }this._vectorgraphArray.length = 0;
      }
    }, e._clearBoundsCache = function () {
      this._graphicBounds && this._graphicBounds.reset();
    }, e._initGraphicBounds = function () {
      this._graphicBounds || (this._graphicBounds = new GraphicsBounds(), this._graphicBounds._graphics = this);
    }, e._repaint = function () {
      this._clearBoundsCache(), this._sp && this._sp.repaint();
    }, e._isOnlyOne = function () {
      return !this._cmds || 0 === this._cmds.length;
    }, e.getBounds = function (t) {
      return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBounds(t);
    }, e.getBoundPoints = function (t) {
      return void 0 === t && (t = !1), this._initGraphicBounds(), this._graphicBounds.getBoundPoints(t);
    }, e._addCmd = function (t) {
      this._cmds = this._cmds || [], t.callee = t.shift(), this._cmds.push(t);
    }, e.setFilters = function (t) {
      this._saveToCmd(Render._context._setFilters, t);
    }, e.drawTexture = function (e, i, n, s, r, a, o) {
      if (void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = 0), void 0 === o && (o = 1), !e || o < .01) return null;s || (s = e.sourceWidth), r || (r = e.sourceHeight), o = o < 0 ? 0 : o > 1 ? 1 : o;var h = s / e.sourceWidth,
          l = r / e.sourceHeight;if (s = e.width * h, r = e.height * l, e.loaded && (s <= 0 || r <= 0)) return null;i += e.offsetX * h, n += e.offsetY * l, this._sp && (this._sp._renderType |= 512);var u;return t._cache.length ? ((u = t._cache.pop())[0] = e, u[1] = i, u[2] = n, u[3] = s, u[4] = r, u[5] = a, u[6] = o) : u = [e, i, n, s, r, a, o], u.callee = a || 1 != o ? Render._context._drawTextureWithTransform : Render._context._drawTexture, null != this._one || a || 1 != o ? this._saveToCmd(u.callee, u) : (this._one = u, this._render = this._renderOneImg), e.loaded || e.once("loaded", this, this._textureLoaded, [e, u]), this._repaint(), u;
    }, e.cleanByTexture = function (t, e, i, n, s) {
      if (void 0 === n && (n = 0), void 0 === s && (s = 0), !t) return this.clear();if (this._one && this._render === this._renderOneImg) {
        n || (n = t.sourceWidth), s || (s = t.sourceHeight);var r = n / t.sourceWidth,
            a = s / t.sourceHeight;n = t.width * r, s = t.height * a, e += t.offsetX * r, i += t.offsetY * a, this._one[0] = t, this._one[1] = e, this._one[2] = i, this._one[3] = n, this._one[4] = s;
      } else this.clear(), t && this.drawTexture(t, e, i, n, s);
    }, e.drawTextures = function (t, e) {
      t && this._saveToCmd(Render._context._drawTextures, [t, e]);
    }, e.fillTexture = function (t, e, i, n, s, r, a) {
      if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"), t) {
        var o = [t, e, i, n, s, r, a || Point.EMPTY, {}];t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]), this._saveToCmd(Render._context._fillTexture, o);
      }
    }, e._textureLoaded = function (t, e) {
      e[3] = e[3] || t.width, e[4] = e[4] || t.height, this._repaint();
    }, e._saveToCmd = function (t, e) {
      return this._sp && (this._sp._renderType |= 512), null == this._one ? (this._one = e, this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2), this._render = this._renderAll, 0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one), this._cmds.push(e)), e.callee = t, this._repaint(), e;
    }, e.clipRect = function (t, e, i, n) {
      this._saveToCmd(Render._context._clipRect, [t, e, i, n]);
    }, e.fillText = function (t, e, i, n, s, r, a) {
      void 0 === a && (a = 0), this._saveToCmd(Render._context._fillText, [t, e, i, n || Font.defaultFont, s, r]);
    }, e.fillBorderText = function (t, e, i, n, s, r, a, o) {
      this._saveToCmd(Render._context._fillBorderText, [t, e, i, n || Font.defaultFont, s, r, a, o]);
    }, e.strokeText = function (t, e, i, n, s, r, a) {
      this._saveToCmd(Render._context._strokeText, [t, e, i, n || Font.defaultFont, s, r, a]);
    }, e.alpha = function (t) {
      t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(Render._context._alpha, [t]);
    }, e.setAlpha = function (t) {
      t = t < 0 ? 0 : t > 1 ? 1 : t, this._saveToCmd(Render._context._setAlpha, [t]);
    }, e.transform = function (t, e, i) {
      void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(Render._context._transform, [t, e, i]);
    }, e.rotate = function (t, e, i) {
      void 0 === e && (e = 0), void 0 === i && (i = 0), this._saveToCmd(Render._context._rotate, [t, e, i]);
    }, e.scale = function (t, e, i, n) {
      void 0 === i && (i = 0), void 0 === n && (n = 0), this._saveToCmd(Render._context._scale, [t, e, i, n]);
    }, e.translate = function (t, e) {
      this._saveToCmd(Render._context._translate, [t, e]);
    }, e.save = function () {
      this._saveToCmd(Render._context._save, []);
    }, e.restore = function () {
      this._saveToCmd(Render._context._restore, []);
    }, e.replaceText = function (t) {
      this._repaint();var e = this._cmds;if (e) {
        for (var i = e.length - 1; i > -1; i--) {
          if (this._isTextCmd(e[i].callee)) return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t), !0;
        }
      } else if (this._one && this._isTextCmd(this._one.callee)) return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t), !0;return !1;
    }, e._isTextCmd = function (t) {
      return t === Render._context._fillText || t === Render._context._fillBorderText || t === Render._context._strokeText;
    }, e.replaceTextColor = function (t) {
      this._repaint();var e = this._cmds;if (e) for (var i = e.length - 1; i > -1; i--) {
        this._isTextCmd(e[i].callee) && (e[i][4] = t, e[i][0].toUpperCase || (e[i][0].changed = !0));
      } else this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t, this._one[0].toUpperCase || (this._one[0].changed = !0));
    }, e.loadImage = function (t, e, i, n, s, r) {
      function a(t) {
        t && (o.drawTexture(t, e, i, n, s), null != r && r.call(o._sp, t));
      }var o = this;void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0);var h = Loader.getRes(t);h ? a(h) : Laya.loader.load(t, Handler.create(null, a), null, "image");
    }, e._renderEmpty = function (t, e, i, n) {}, e._renderAll = function (t, e, i, n) {
      for (var s, r = this._cmds, a = 0, o = r.length; a < o; a++) {
        (s = r[a]).callee.call(e, i, n, s);
      }
    }, e._renderOne = function (t, e, i, n) {
      this._one.callee.call(e, i, n, this._one);
    }, e._renderOneImg = function (t, e, i, n) {
      this._one.callee.call(e, i, n, this._one), 2305 !== t._renderType && (t._renderType |= 1);
    }, e.drawLine = function (t, e, i, n, s, r) {
      void 0 === r && (r = 1);var a = 0;Render.isWebGL && (a = VectorGraphManager.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(a));var o = r % 2 == 0 ? 0 : .5,
          h = [t + o, e + o, i + o, n + o, s, r, a];this._saveToCmd(Render._context._drawLine, h);
    }, e.drawLines = function (t, e, i, n, s) {
      void 0 === s && (s = 1);var r = 0;if (i && !(i.length < 4)) {
        Render.isWebGL && (r = VectorGraphManager.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(r));var a = s % 2 == 0 ? 0 : .5,
            o = [t + a, e + a, i, n, s, r];this._saveToCmd(Render._context._drawLines, o);
      }
    }, e.drawCurves = function (t, e, i, n, s) {
      void 0 === s && (s = 1);var r = [t, e, i, n, s];this._saveToCmd(Render._context._drawCurves, r);
    }, e.drawRect = function (t, e, i, n, s, r, a) {
      void 0 === a && (a = 1);var o = r ? a / 2 : 0,
          h = r ? a : 0,
          l = [t + o, e + o, i - h, n - h, s, r, a];this._saveToCmd(Render._context._drawRect, l);
    }, e.drawCircle = function (t, e, i, n, s, r) {
      void 0 === r && (r = 1);var a = s ? r / 2 : 0,
          o = 0;Render.isWebGL && (o = VectorGraphManager.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(o));var h = [t, e, i - a, n, s, r, o];this._saveToCmd(Render._context._drawCircle, h);
    }, e.drawPie = function (t, e, i, n, s, r, a, o) {
      void 0 === o && (o = 1);var h = a ? o / 2 : 0,
          l = a ? o : 0,
          u = 0;Render.isWebGL && (u = VectorGraphManager.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(u));var c = [t + h, e + h, i - l, n, s, r, a, o, u];c[3] = Utils.toRadian(n), c[4] = Utils.toRadian(s), this._saveToCmd(Render._context._drawPie, c);
    }, e.drawPoly = function (t, e, i, n, s, r) {
      void 0 === r && (r = 1);var a = 0,
          o = !1;Render.isWebGL && (a = VectorGraphManager.getInstance().getId(), null == this._vectorgraphArray && (this._vectorgraphArray = []), this._vectorgraphArray.push(a), o = !(i.length > 6));var h = s ? r % 2 == 0 ? 0 : .5 : 0,
          l = [t + h, e + h, i, n, s, r, a, o];this._saveToCmd(Render._context._drawPoly, l);
    }, e.drawPath = function (t, e, i, n, s) {
      var r = [t, e, i, n, s];this._saveToCmd(Render._context._drawPath, r);
    }, __getset(0, e, "cmds", function () {
      return this._cmds;
    }, function (t) {
      this._sp && (this._sp._renderType |= 512), this._cmds = t, this._render = this._renderAll, this._repaint();
    }), t.__init__ = function () {
      if (Render.isConchNode) {
        for (var t = laya.display.Graphics.prototype, e = Browser.window.ConchGraphics.prototype, i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], n = 0, s = i.length; n <= s; n++) {
          var r = i[n];t[r] = e[r];
        }t._saveToCmd = null, e.drawImageS && (t.drawTextures = function (t, e) {
          if (t && t.loaded && t.bitmap && t.source) {
            var i = t.uv,
                n = t.bitmap.width,
                s = t.bitmap.height;this.drawImageS(t.bitmap.source, i[0] * n, i[1] * s, (i[2] - i[0]) * n, (i[5] - i[3]) * s, t.offsetX, t.offsetY, t.width, t.height, e);
          }
        }), t.drawTexture = function (t, e, i, n, s, r, a) {
          if (void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === a && (a = 1), t) if (t.loaded) {
            if (t.loaded && t.bitmap && t.source && (n || (n = t.sourceWidth), s || (s = t.sourceHeight), a = a < 0 ? 0 : a > 1 ? 1 : a, n = n - t.sourceWidth + t.width, s = s - t.sourceHeight + t.height, !(n <= 0 || s <= 0))) {
              e += t.offsetX, i += t.offsetY;var o = t.uv,
                  h = t.bitmap.width,
                  l = t.bitmap.height;this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, n, s, r, a), this._repaint();
            }
          } else t.once("loaded", this, function () {
            this.drawTexture(t, e, i, n, s, r);
          });
        }, t.fillTexture = function (t, e, i, n, s, r, a) {
          if (void 0 === n && (n = 0), void 0 === s && (s = 0), void 0 === r && (r = "repeat"), t && t.loaded) {
            var o,
                h = Render._context.ctx,
                l = t.bitmap.width,
                u = t.bitmap.height,
                c = t.uv;o = t.uv != Texture.DEF_UV ? h.createPattern(t.bitmap.source, r, c[0] * l, c[1] * u, (c[2] - c[0]) * l, (c[5] - c[3]) * u) : h.createPattern(t.bitmap.source, r);var _ = 0,
                d = 0;a && (e += a.x % t.width, i += a.y % t.height, _ -= a.x % t.width, d -= a.y % t.height), this._fillImage(o, e, i, _, d, n, s);
          }
        };
      }
    }, t._cache = [], t;
  }(),
      GraphicsBounds = function () {
    function t() {
      this._cacheBoundsType = !1;
    }__class(t, "laya.display.GraphicsBounds");var e = t.prototype;return e.destroy = function () {
      this._graphics = null, this._temp = null, this._rstBoundPoints = null, this._bounds = null;
    }, e.reset = function () {
      this._temp && (this._temp.length = 0);
    }, e.getBounds = function (t) {
      return void 0 === t && (t = !1), (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = Rectangle._getWrapRec(this.getBoundPoints(t), this._bounds)), this._cacheBoundsType = t, this._bounds;
    }, e.getBoundPoints = function (t) {
      return void 0 === t && (t = !1), (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)), this._cacheBoundsType = t, this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);
    }, e._getCmdPoints = function (e) {
      void 0 === e && (e = !1);var i,
          n = Render._context,
          s = this._graphics.cmds;if (i = this._temp || (this._temp = []), i.length = 0, s || null == this._graphics._one || (t._tempCmds.length = 0, t._tempCmds.push(this._graphics._one), s = t._tempCmds), !s) return i;var r;(r = t._tempMatrixArrays).length = 0;var a = t._initMatrix;a.identity();for (var o, h, l = t._tempMatrix, u = NaN, c = NaN, _ = NaN, d = NaN, f = NaN, p = NaN, g = 0, m = s.length; g < m; g++) {
        if ((o = s[g]).callee) switch (o.callee) {case n._save:case 7:
            r.push(a), a = a.clone();break;case n._restore:case 8:
            a = r.pop();break;case n._scale:case 5:
            l.identity(), l.translate(-o[2], -o[3]), l.scale(o[0], o[1]), l.translate(o[2], o[3]), this._switchMatrix(a, l);break;case n._rotate:case 3:
            l.identity(), l.translate(-o[1], -o[2]), l.rotate(o[0]), l.translate(o[1], o[2]), this._switchMatrix(a, l);break;case n._translate:case 6:
            l.identity(), l.translate(o[0], o[1]), this._switchMatrix(a, l);break;case n._transform:case 4:
            l.identity(), l.translate(-o[1], -o[2]), l.concat(o[0]), l.translate(o[1], o[2]), this._switchMatrix(a, l);break;case 16:case 24:
            t._addPointArrToRst(i, Rectangle._getBoundPointS(o[0], o[1], o[2], o[3]), a);break;case 17:
            a.copyTo(l), l.concat(o[4]), t._addPointArrToRst(i, Rectangle._getBoundPointS(o[0], o[1], o[2], o[3]), l);break;case n._drawTexture:
            h = o[0], e ? o[3] && o[4] ? t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], o[3], o[4]), a) : (h = o[0], t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], h.width, h.height), a)) : (u = (o[3] || h.sourceWidth) / h.width, c = (o[4] || h.sourceHeight) / h.height, _ = u * h.sourceWidth, d = c * h.sourceHeight, f = h.offsetX > 0 ? h.offsetX : 0, p = h.offsetY > 0 ? h.offsetY : 0, f *= u, p *= c, t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1] - f, o[2] - p, _, d), a));break;case n._fillTexture:
            o[3] && o[4] ? t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], o[3], o[4]), a) : (h = o[0], t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], h.width, h.height), a));break;case n._drawTextureWithTransform:
            var v;o[5] ? (a.copyTo(l), l.concat(o[5]), v = l) : v = a, e ? o[3] && o[4] ? t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], o[3], o[4]), v) : (h = o[0], t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1], o[2], h.width, h.height), v)) : (h = o[0], u = (o[3] || h.sourceWidth) / h.width, c = (o[4] || h.sourceHeight) / h.height, _ = u * h.sourceWidth, d = c * h.sourceHeight, f = h.offsetX > 0 ? h.offsetX : 0, p = h.offsetY > 0 ? h.offsetY : 0, f *= u, p *= c, t._addPointArrToRst(i, Rectangle._getBoundPointS(o[1] - f, o[2] - p, _, d), v));break;case n._drawRect:case 13:
            t._addPointArrToRst(i, Rectangle._getBoundPointS(o[0], o[1], o[2], o[3]), a);break;case n._drawCircle:case n._fillCircle:case 14:
            t._addPointArrToRst(i, Rectangle._getBoundPointS(o[0] - o[2], o[1] - o[2], o[2] + o[2], o[2] + o[2]), a);break;case n._drawLine:case 20:
            t._tempPoints.length = 0;var y = NaN;y = .5 * o[5], o[0] == o[2] ? t._tempPoints.push(o[0] + y, o[1], o[2] + y, o[3], o[0] - y, o[1], o[2] - y, o[3]) : o[1] == o[3] ? t._tempPoints.push(o[0], o[1] + y, o[2], o[3] + y, o[0], o[1] - y, o[2], o[3] - y) : t._tempPoints.push(o[0], o[1], o[2], o[3]), t._addPointArrToRst(i, t._tempPoints, a);break;case n._drawCurves:case 22:
            t._addPointArrToRst(i, Bezier.I.getBezierPoints(o[2]), a, o[0], o[1]);break;case n._drawPoly:case n._drawLines:case 18:
            t._addPointArrToRst(i, o[2], a, o[0], o[1]);break;case n._drawPath:case 19:
            t._addPointArrToRst(i, this._getPathPoints(o[2]), a, o[0], o[1]);break;case n._drawPie:case 15:
            t._addPointArrToRst(i, this._getPiePoints(o[0], o[1], o[2], o[3], o[4]), a);}
      }return i.length > 200 ? i = Utils.copyArray(i, Rectangle._getWrapRec(i)._getBoundPoints()) : i.length > 8 && (i = GrahamScan.scanPList(i)), i;
    }, e._switchMatrix = function (t, e) {
      e.concat(t), e.copyTo(t);
    }, e._getPiePoints = function (e, i, n, s, r) {
      var a = t._tempPoints;t._tempPoints.length = 0, a.push(e, i);var o = (r - s) % (2 * Math.PI) / 10,
          h = NaN,
          l = s;for (h = 0; h <= 10; h++) {
        a.push(e + n * Math.cos(l), i + n * Math.sin(l)), l += o;
      }return a;
    }, e._getPathPoints = function (e) {
      var i = 0,
          n = 0,
          s = t._tempPoints;s.length = 0, n = e.length;var r;for (i = 0; i < n; i++) {
        (r = e[i]).length > 1 && (s.push(r[1], r[2]), r.length > 3 && s.push(r[3], r[4]));
      }return s;
    }, t._addPointArrToRst = function (e, i, n, s, r) {
      void 0 === s && (s = 0), void 0 === r && (r = 0);var a = 0,
          o = 0;for (o = i.length, a = 0; a < o; a += 2) {
        t._addPointToRst(e, i[a] + s, i[a + 1] + r, n);
      }
    }, t._addPointToRst = function (t, e, i, n) {
      var s = Point.TEMP;s.setTo(e || 0, i || 0), n.transformPoint(s), t.push(s.x, s.y);
    }, t._tempPoints = [], t._tempMatrixArrays = [], t._tempCmds = [], __static(t, ["_tempMatrix", function () {
      return this._tempMatrix = new Matrix();
    }, "_initMatrix", function () {
      return this._initMatrix = new Matrix();
    }]), t;
  }(),
      Event = function () {
    function t() {}__class(t, "laya.events.Event");var e = t.prototype;return e.setTo = function (t, e, i) {
      return this.type = t, this.currentTarget = e, this.target = i, this;
    }, e.stopPropagation = function () {
      this._stoped = !0;
    }, __getset(0, e, "stageY", function () {
      return Laya.stage.mouseY;
    }), __getset(0, e, "charCode", function () {
      return this.nativeEvent.charCode;
    }), __getset(0, e, "touches", function () {
      var t = this.nativeEvent.touches;if (t) for (var e = Laya.stage, i = 0, n = t.length; i < n; i++) {
        var s = t[i],
            r = Point.TEMP;r.setTo(s.clientX, s.clientY), e._canvasTransform.invertTransformPoint(r), e.transform.invertTransformPoint(r), s.stageX = r.x, s.stageY = r.y;
      }return t;
    }), __getset(0, e, "keyLocation", function () {
      return this.nativeEvent.keyLocation;
    }), __getset(0, e, "ctrlKey", function () {
      return this.nativeEvent.ctrlKey;
    }), __getset(0, e, "altKey", function () {
      return this.nativeEvent.altKey;
    }), __getset(0, e, "shiftKey", function () {
      return this.nativeEvent.shiftKey;
    }), __getset(0, e, "stageX", function () {
      return Laya.stage.mouseX;
    }), t.MOUSE_DOWN = "mousedown", t.MOUSE_UP = "mouseup", t.CLICK = "click", t.RIGHT_MOUSE_DOWN = "rightmousedown", t.RIGHT_MOUSE_UP = "rightmouseup", t.RIGHT_CLICK = "rightclick", t.MOUSE_MOVE = "mousemove", t.MOUSE_OVER = "mouseover", t.MOUSE_OUT = "mouseout", t.MOUSE_WHEEL = "mousewheel", t.ROLL_OVER = "mouseover", t.ROLL_OUT = "mouseout", t.DOUBLE_CLICK = "doubleclick", t.CHANGE = "change", t.CHANGED = "changed", t.RESIZE = "resize", t.ADDED = "added", t.REMOVED = "removed", t.DISPLAY = "display", t.UNDISPLAY = "undisplay", t.ERROR = "error", t.COMPLETE = "complete", t.LOADED = "loaded", t.PROGRESS = "progress", t.INPUT = "input", t.RENDER = "render", t.OPEN = "open", t.MESSAGE = "message", t.CLOSE = "close", t.KEY_DOWN = "keydown", t.KEY_PRESS = "keypress", t.KEY_UP = "keyup", t.FRAME = "enterframe", t.DRAG_START = "dragstart", t.DRAG_MOVE = "dragmove", t.DRAG_END = "dragend", t.ENTER = "enter", t.SELECT = "select", t.BLUR = "blur", t.FOCUS = "focus", t.VISIBILITY_CHANGE = "visibilitychange", t.FOCUS_CHANGE = "focuschange", t.PLAYED = "played", t.PAUSED = "paused", t.STOPPED = "stopped", t.START = "start", t.END = "end", t.ENABLE_CHANGED = "enablechanged", t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged", t.COMPONENT_ADDED = "componentadded", t.COMPONENT_REMOVED = "componentremoved", t.LAYER_CHANGED = "layerchanged", t.HIERARCHY_LOADED = "hierarchyloaded", t.RECOVERED = "recovered", t.RELEASED = "released", t.LINK = "link", t.LABEL = "label", t.FULL_SCREEN_CHANGE = "fullscreenchange", t.DEVICE_LOST = "devicelost", t.MESH_CHANGED = "meshchanged", t.MATERIAL_CHANGED = "materialchanged", t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged", t.ANIMATION_CHANGED = "animationchanged", t.TRIGGER_ENTER = "triggerenter", t.TRIGGER_STAY = "triggerstay", t.TRIGGER_EXIT = "triggerexit", __static(t, ["EMPTY", function () {
      return this.EMPTY = new t();
    }]), t;
  }(),
      Keyboard = function () {
    function t() {}return __class(t, "laya.events.Keyboard"), t.NUMBER_0 = 48, t.NUMBER_1 = 49, t.NUMBER_2 = 50, t.NUMBER_3 = 51, t.NUMBER_4 = 52, t.NUMBER_5 = 53, t.NUMBER_6 = 54, t.NUMBER_7 = 55, t.NUMBER_8 = 56, t.NUMBER_9 = 57, t.A = 65, t.B = 66, t.C = 67, t.D = 68, t.E = 69, t.F = 70, t.G = 71, t.H = 72, t.I = 73, t.J = 74, t.K = 75, t.L = 76, t.M = 77, t.N = 78, t.O = 79, t.P = 80, t.Q = 81, t.R = 82, t.S = 83, t.T = 84, t.U = 85, t.V = 86, t.W = 87, t.X = 88, t.Y = 89, t.Z = 90, t.F1 = 112, t.F2 = 113, t.F3 = 114, t.F4 = 115, t.F5 = 116, t.F6 = 117, t.F7 = 118, t.F8 = 119, t.F9 = 120, t.F10 = 121, t.F11 = 122, t.F12 = 123, t.F13 = 124, t.F14 = 125, t.F15 = 126, t.NUMPAD = 21, t.NUMPAD_0 = 96, t.NUMPAD_1 = 97, t.NUMPAD_2 = 98, t.NUMPAD_3 = 99, t.NUMPAD_4 = 100, t.NUMPAD_5 = 101, t.NUMPAD_6 = 102, t.NUMPAD_7 = 103, t.NUMPAD_8 = 104, t.NUMPAD_9 = 105, t.NUMPAD_ADD = 107, t.NUMPAD_DECIMAL = 110, t.NUMPAD_DIVIDE = 111, t.NUMPAD_ENTER = 108, t.NUMPAD_MULTIPLY = 106, t.NUMPAD_SUBTRACT = 109, t.SEMICOLON = 186, t.EQUAL = 187, t.COMMA = 188, t.MINUS = 189, t.PERIOD = 190, t.SLASH = 191, t.BACKQUOTE = 192, t.LEFTBRACKET = 219, t.BACKSLASH = 220, t.RIGHTBRACKET = 221, t.QUOTE = 222, t.ALTERNATE = 18, t.BACKSPACE = 8, t.CAPS_LOCK = 20, t.COMMAND = 15, t.CONTROL = 17, t.DELETE = 46, t.ENTER = 13, t.ESCAPE = 27, t.PAGE_UP = 33, t.PAGE_DOWN = 34, t.END = 35, t.HOME = 36, t.LEFT = 37, t.UP = 38, t.RIGHT = 39, t.DOWN = 40, t.SHIFT = 16, t.SPACE = 32, t.TAB = 9, t.INSERT = 45, t;
  }(),
      KeyBoardManager = function () {
    function t() {}return __class(t, "laya.events.KeyBoardManager"), t.__init__ = function () {
      t._addEvent("keydown"), t._addEvent("keypress"), t._addEvent("keyup");
    }, t._addEvent = function (t) {
      Browser.document.addEventListener(t, function (e) {
        laya.events.KeyBoardManager._dispatch(e, t);
      }, !0);
    }, t._dispatch = function (e, i) {
      if (t.enabled) {
        t._event._stoped = !1, t._event.nativeEvent = e, t._event.keyCode = e.keyCode || e.which || e.charCode, "keydown" === i ? t._pressKeys[t._event.keyCode] = !0 : "keyup" === i && (t._pressKeys[t._event.keyCode] = null);for (var n = Laya.stage.focus && null != Laya.stage.focus.event && Laya.stage.focus.displayedInStage ? Laya.stage.focus : Laya.stage, s = n; s;) {
          s.event(i, t._event.setTo(i, s, n)), s = s.parent;
        }
      }
    }, t.hasKeyDown = function (e) {
      return t._pressKeys[e];
    }, t._pressKeys = {}, t.enabled = !0, __static(t, ["_event", function () {
      return this._event = new Event();
    }]), t;
  }(),
      KeyLocation = function () {
    function t() {}return __class(t, "laya.events.KeyLocation"), t.STANDARD = 0, t.LEFT = 1, t.RIGHT = 2, t.NUM_PAD = 3, t;
  }(),
      MouseManager = function () {
    function t() {
      this.mouseX = 0, this.mouseY = 0, this.disableMouseEvent = !1, this.mouseDownTime = 0, this.mouseMoveAccuracy = 2, this._stage = null, this._target = null, this._lastMoveTimer = 0, this._isLeftMouse = !1, this._eventList = [], this._touchIDs = {}, this._id = 1, this._tTouchID = 0, this._event = new Event(), this._matrix = new Matrix(), this._point = new Point(), this._rect = new Rectangle(), this._prePoint = new Point(), this._curTouchID = NaN;
    }__class(t, "laya.events.MouseManager");var e = t.prototype;return e.__init__ = function (e, i) {
      var n = this;this._stage = e;var s = this,
          r = this._eventList;i.oncontextmenu = function (e) {
        if (t.enabled) return !1;
      }, i.addEventListener("mousedown", function (e) {
        t.enabled && (Browser.onIE || e.preventDefault(), r.push(e), s.mouseDownTime = Browser.now());
      }), i.addEventListener("mouseup", function (e) {
        t.enabled && (e.preventDefault(), r.push(e), s.mouseDownTime = -Browser.now());
      }, !0), i.addEventListener("mousemove", function (e) {
        if (t.enabled) {
          e.preventDefault();var i = Browser.now();if (i - s._lastMoveTimer < 10) return;s._lastMoveTimer = i, r.push(e);
        }
      }, !0), i.addEventListener("mouseout", function (e) {
        t.enabled && r.push(e);
      }), i.addEventListener("mouseover", function (e) {
        t.enabled && r.push(e);
      }), i.addEventListener("touchstart", function (e) {
        t.enabled && (r.push(e), t._isFirstTouch || Input.isInputting || e.preventDefault(), s.mouseDownTime = Browser.now());
      }), i.addEventListener("touchend", function (e) {
        t.enabled ? (t._isFirstTouch || Input.isInputting || e.preventDefault(), t._isFirstTouch = !1, r.push(e), s.mouseDownTime = -Browser.now()) : n._curTouchID = NaN;
      }, !0), i.addEventListener("touchmove", function (e) {
        t.enabled && (e.preventDefault(), r.push(e));
      }, !0), i.addEventListener("touchcancel", function (e) {
        t.enabled ? (e.preventDefault(), r.push(e)) : n._curTouchID = NaN;
      }, !0), i.addEventListener("mousewheel", function (e) {
        t.enabled && r.push(e);
      }), i.addEventListener("DOMMouseScroll", function (e) {
        t.enabled && r.push(e);
      });
    }, e.initEvent = function (t, e) {
      this._event._stoped = !1, this._event.nativeEvent = e || t, this._target = null, this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY), this._stage._canvasTransform.invertTransformPoint(this._point), this.mouseX = this._point.x, this.mouseY = this._point.y, this._event.touchId = t.identifier || 0, this._tTouchID = this._event.touchId;var i;(i = TouchManager.I._event)._stoped = !1, i.nativeEvent = this._event.nativeEvent, i.touchId = this._event.touchId;
    }, e.checkMouseWheel = function (t) {
      this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;for (var e = TouchManager.I.getLastOvers(), i = 0, n = e.length; i < n; i++) {
        var s = e[i];s.event("mousewheel", this._event.setTo("mousewheel", s, this._target));
      }
    }, e.onMouseMove = function (t) {
      TouchManager.I.onMouseMove(t, this._tTouchID);
    }, e.onMouseDown = function (t) {
      if (Input.isInputting && Laya.stage.focus && Laya.stage.focus.focus && !Laya.stage.focus.contains(this._target)) {
        var e = Laya.stage.focus._tf || Laya.stage.focus,
            i = t._tf || t;i instanceof laya.display.Input && i.multiline == e.multiline ? e._focusOut() : e.focus = !1;
      }TouchManager.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
    }, e.onMouseUp = function (t) {
      TouchManager.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
    }, e.check = function (t, e, i, n) {
      this._point.setTo(e, i), t.fromParentPoint(this._point), e = this._point.x, i = this._point.y;var s = t.scrollRect;if (s && (this._rect.setTo(s.x, s.y, s.width, s.height), !this._rect.contains(e, i))) return !1;if (!this.disableMouseEvent) {
        if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i)) return !1;for (var r = t._childs.length - 1; r > -1; r--) {
          var a = t._childs[r];if (!a.destroyed && a.mouseEnabled && a.visible && this.check(a, e, i, n)) return !0;
        }
      }var o = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);return o ? (this._target = t, n.call(this, t)) : n === this.onMouseUp && t === this._stage && (this._target = this._stage, n.call(this, this._target)), o;
    }, e.hitTest = function (t, e, i) {
      var n = !1;if (t.scrollRect && (e -= t.scrollRect.x, i -= t.scrollRect.y), t.hitArea instanceof laya.utils.HitArea) return t.hitArea.isHit(e, i);if (t.width > 0 && t.height > 0 || t.mouseThrough || t.hitArea) if (t.mouseThrough) n = t.getGraphicBounds().contains(e, i);else {
        var s = this._rect;t.hitArea ? s = t.hitArea : s.setTo(0, 0, t.width, t.height), n = s.contains(e, i);
      }return n;
    }, e.runEvent = function () {
      var e = this._eventList.length;if (e) {
        for (var i, n = 0, s = 0, r = 0; n < e;) {
          var a = this._eventList[n];switch ("mousemove" !== a.type && (this._prePoint.x = this._prePoint.y = -1e6), a.type) {case "mousedown":
              this._touchIDs[0] = this._id++, t._isTouchRespond ? t._isTouchRespond = !1 : (this._isLeftMouse = 0 === a.button, this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));break;case "mouseup":
              this._isLeftMouse = 0 === a.button, this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp);break;case "mousemove":
              Math.abs(this._prePoint.x - a.clientX) + Math.abs(this._prePoint.y - a.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = a.clientX, this._prePoint.y = a.clientY, this.initEvent(a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));break;case "touchstart":
              t._isTouchRespond = !0, this._isLeftMouse = !0;var o = a.changedTouches;for (s = 0, r = o.length; s < r; s++) {
                i = o[s], (t.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = i.identifier, this._id % 200 == 0 && (this._touchIDs = {}), this._touchIDs[i.identifier] = this._id++, this.initEvent(i, a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseDown));
              }break;case "touchend":case "touchcancel":
              t._isTouchRespond = !0, this._isLeftMouse = !0;var h = a.changedTouches;for (s = 0, r = h.length; s < r; s++) {
                if (i = h[s], t.multiTouchEnabled || i.identifier == this._curTouchID) {
                  this._curTouchID = NaN, this.initEvent(i, a);this.check(this._stage, this.mouseX, this.mouseY, this.onMouseUp) || this.onMouseUp(null);
                }
              }break;case "touchmove":
              var l = a.changedTouches;for (s = 0, r = l.length; s < r; s++) {
                i = l[s], (t.multiTouchEnabled || i.identifier == this._curTouchID) && (this.initEvent(i, a), this.check(this._stage, this.mouseX, this.mouseY, this.onMouseMove));
              }break;case "wheel":case "mousewheel":case "DOMMouseScroll":
              this.checkMouseWheel(a);break;case "mouseout":
              TouchManager.I.stageMouseOut();break;case "mouseover":
              this._stage.event("mouseover", this._event.setTo("mouseover", this._stage, this._stage));}n++;
        }this._eventList.length = 0;
      }
    }, t.enabled = !0, t.multiTouchEnabled = !0, t._isTouchRespond = !1, t._isFirstTouch = !0, __static(t, ["instance", function () {
      return this.instance = new t();
    }]), t;
  }(),
      TouchManager = function () {
    function t() {
      this.preOvers = [], this.preDowns = [], this.preRightDowns = [], this.enable = !0, this._lastClickTime = 0, this._event = new Event();
    }__class(t, "laya.events.TouchManager");var e = t.prototype;return e._clearTempArrs = function () {
      t._oldArr.length = 0, t._newArr.length = 0, t._tEleArr.length = 0;
    }, e.getTouchFromArr = function (t, e) {
      var i = 0,
          n = 0;n = e.length;var s;for (i = 0; i < n; i++) {
        if ((s = e[i]).id == t) return s;
      }return null;
    }, e.removeTouchFromArr = function (t, e) {
      var i = 0;for (i = e.length - 1; i >= 0; i--) {
        e[i].id == t && e.splice(i, 1);
      }
    }, e.createTouchO = function (t, e) {
      var i;return i = Pool.getItem("TouchData") || {}, i.id = e, i.tar = t, i;
    }, e.onMouseDown = function (e, i, n) {
      if (void 0 === n && (n = !1), this.enable) {
        var s, r, a;s = this.getTouchFromArr(i, this.preOvers), a = this.getEles(e, null, t._tEleArr), s ? s.tar = e : (r = this.createTouchO(e, i), this.preOvers.push(r)), Browser.onMobile && this.sendEvents(a, "mouseover", i);var o;o = n ? this.preDowns : this.preRightDowns, (s = this.getTouchFromArr(i, o)) ? s.tar = e : (r = this.createTouchO(e, i), o.push(r)), this.sendEvents(a, n ? "mousedown" : "rightmousedown", i), this._clearTempArrs();
      }
    }, e.sendEvents = function (t, e, i) {
      void 0 === i && (i = 0);var n = 0,
          s = 0;s = t.length, this._event._stoped = !1;var r;r = t[0];var a;for (n = 0; n < s; n++) {
        if ((a = t[n]).destroyed) return;if (a.event(e, this._event.setTo(e, a, r)), this._event._stoped) break;
      }
    }, e.getEles = function (t, e, i) {
      for (i ? i.length = 0 : i = []; t && t != e;) {
        i.push(t), t = t.parent;
      }return i;
    }, e.checkMouseOutAndOverOfMove = function (e, i, n) {
      if (void 0 === n && (n = 0), i != e) {
        var s,
            r,
            a = 0,
            o = 0;if (i.contains(e)) r = this.getEles(e, i, t._tEleArr), this.sendEvents(r, "mouseover", n);else if (e.contains(i)) r = this.getEles(i, e, t._tEleArr), this.sendEvents(r, "mouseout", n);else {
          (r = t._tEleArr).length = 0;var h;h = this.getEles(i, null, t._oldArr);var l;l = this.getEles(e, null, t._newArr), o = h.length;var u = 0;for (a = 0; a < o; a++) {
            if (s = h[a], (u = l.indexOf(s)) >= 0) {
              l.splice(u, l.length - u);break;
            }r.push(s);
          }r.length > 0 && this.sendEvents(r, "mouseout", n), l.length > 0 && this.sendEvents(l, "mouseover", n);
        }
      }
    }, e.onMouseMove = function (e, i) {
      if (this.enable) {
        var n, s;(n = this.getTouchFromArr(i, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(e, n.tar), n.tar = e, s = this.getEles(e, null, t._tEleArr)) : (s = this.getEles(e, null, t._tEleArr), this.sendEvents(s, "mouseover", i), this.preOvers.push(this.createTouchO(e, i))), this.sendEvents(s, "mousemove", i), this._clearTempArrs();
      }
    }, e.getLastOvers = function () {
      return t._tEleArr.length = 0, this.preOvers.length > 0 && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, t._tEleArr) : (t._tEleArr.push(Laya.stage), t._tEleArr);
    }, e.stageMouseOut = function () {
      var t;t = this.getLastOvers(), this.preOvers.length = 0, this.sendEvents(t, "mouseout", 0);
    }, e.onMouseUp = function (e, i, n) {
      if (void 0 === n && (n = !1), this.enable) {
        var s,
            r,
            a,
            o,
            h,
            l = 0,
            u = 0,
            c = Browser.onMobile;r = this.getEles(e, null, t._tEleArr), this.sendEvents(r, n ? "mouseup" : "rightmouseup", i);var _;if (_ = n ? this.preDowns : this.preRightDowns, s = this.getTouchFromArr(i, _)) {
          var d = !1,
              f = Browser.now();if (d = f - this._lastClickTime < 300, this._lastClickTime = f, e == s.tar) h = r;else for (a = this.getEles(s.tar, null, t._oldArr), (h = t._newArr).length = 0, u = a.length, l = 0; l < u; l++) {
            o = a[l], r.indexOf(o) >= 0 && h.push(o);
          }h.length > 0 && this.sendEvents(h, n ? "click" : "rightclick", i), n && d && this.sendEvents(h, "doubleclick", i), this.removeTouchFromArr(i, _), s.tar = null, Pool.recover("TouchData", s);
        } else ;(s = this.getTouchFromArr(i, this.preOvers)) && c && ((h = this.getEles(s.tar, null, h)) && h.length > 0 && this.sendEvents(h, "mouseout", i), this.removeTouchFromArr(i, this.preOvers), s.tar = null, Pool.recover("TouchData", s)), this._clearTempArrs();
      }
    }, t._oldArr = [], t._newArr = [], t._tEleArr = [], __static(t, ["I", function () {
      return this.I = new t();
    }]), t;
  }(),
      Filter = function () {
    function t() {
      this._action = null;
    }__class(t, "laya.filters.Filter");var e = t.prototype;return Laya.imps(e, { "laya.filters.IFilter": !0 }), e.callNative = function (t) {}, __getset(0, e, "type", function () {
      return -1;
    }), __getset(0, e, "action", function () {
      return this._action;
    }), t.BLUR = 16, t.COLOR = 32, t.GLOW = 8, t._filterStart = null, t._filterEnd = null, t._EndTarget = null, t._recycleScope = null, t._filter = null, t._useSrc = null, t._endSrc = null, t._useOut = null, t._endOut = null, t;
  }(),
      ColorFilterAction = function () {
    function t() {
      this.data = null;
    }__class(t, "laya.filters.ColorFilterAction");var e = t.prototype;return Laya.imps(e, { "laya.filters.IFilterAction": !0 }), e.apply = function (t) {
      var e = t.ctx.ctx,
          i = t.ctx.ctx.canvas;if (0 == i.width || 0 == i.height) return i;for (var n, s = e.getImageData(0, 0, i.width, i.height), r = s.data, a = 0, o = r.length; a < o; a += 4) {
        n = this.getColor(r[a], r[a + 1], r[a + 2], r[a + 3]), 0 != r[a + 3] && (r[a] = n[0], r[a + 1] = n[1], r[a + 2] = n[2], r[a + 3] = n[3]);
      }return e.putImageData(s, 0, 0), t;
    }, e.getColor = function (t, e, i, n) {
      var s = [];if (this.data._mat && this.data._alpha) {
        var r = this.data._mat,
            a = this.data._alpha;s[0] = r[0] * t + r[1] * e + r[2] * i + r[3] * n + a[0], s[1] = r[4] * t + r[5] * e + r[6] * i + r[7] * n + a[1], s[2] = r[8] * t + r[9] * e + r[10] * i + r[11] * n + a[2], s[3] = r[12] * t + r[13] * e + r[14] * i + r[15] * n + a[3];
      }return s;
    }, t;
  }(),
      Arith = function () {
    function t() {}return __class(t, "laya.maths.Arith"), t.formatR = function (t) {
      return t > Math.PI && (t -= 2 * Math.PI), t < -Math.PI && (t += 2 * Math.PI), t;
    }, t.isPOT = function (t, e) {
      return t > 0 && 0 == (t & t - 1) && e > 0 && 0 == (e & e - 1);
    }, t.setMatToArray = function (t, e) {
      t.a, t.b, t.c, t.d, t.tx, t.ty, e[0] = t.a, e[1] = t.b, e[4] = t.c, e[5] = t.d, e[12] = t.tx, e[13] = t.ty;
    }, t;
  }(),
      Bezier = function () {
    function t() {
      this._controlPoints = [new Point(), new Point(), new Point()], this._calFun = this.getPoint2;
    }__class(t, "laya.maths.Bezier");var e = t.prototype;return e._switchPoint = function (t, e) {
      var i = this._controlPoints.shift();i.setTo(t, e), this._controlPoints.push(i);
    }, e.getPoint2 = function (t, e) {
      var i = this._controlPoints[0],
          n = this._controlPoints[1],
          s = this._controlPoints[2],
          r = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * n.x + Math.pow(t, 2) * s.x,
          a = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * n.y + Math.pow(t, 2) * s.y;e.push(r, a);
    }, e.getPoint3 = function (t, e) {
      var i = this._controlPoints[0],
          n = this._controlPoints[1],
          s = this._controlPoints[2],
          r = this._controlPoints[3],
          a = Math.pow(1 - t, 3) * i.x + 3 * n.x * t * (1 - t) * (1 - t) + 3 * s.x * t * t * (1 - t) + r.x * Math.pow(t, 3),
          o = Math.pow(1 - t, 3) * i.y + 3 * n.y * t * (1 - t) * (1 - t) + 3 * s.y * t * t * (1 - t) + r.y * Math.pow(t, 3);e.push(a, o);
    }, e.insertPoints = function (t, e) {
      var i = NaN,
          n = NaN;for (n = 1 / (t = t > 0 ? t : 5), i = 0; i <= 1; i += n) {
        this._calFun(i, e);
      }
    }, e.getBezierPoints = function (t, e, i) {
      void 0 === e && (e = 5), void 0 === i && (i = 2);var n = 0,
          s = 0;if ((s = t.length) < 2 * (i + 1)) return [];var r;switch (r = [], i) {case 2:
          this._calFun = this.getPoint2;break;case 3:
          this._calFun = this.getPoint3;break;default:
          return [];}for (; this._controlPoints.length <= i;) {
        this._controlPoints.push(new Point());
      }for (n = 0; n < 2 * i; n += 2) {
        this._switchPoint(t[n], t[n + 1]);
      }for (n = 2 * i; n < s; n += 2) {
        this._switchPoint(t[n], t[n + 1]), n / 2 % i == 0 && this.insertPoints(e, r);
      }return r;
    }, __static(t, ["I", function () {
      return this.I = new t();
    }]), t;
  }(),
      GrahamScan = function () {
    function t() {}return __class(t, "laya.maths.GrahamScan"), t.multiply = function (t, e, i) {
      return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
    }, t.dis = function (t, e) {
      return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
    }, t._getPoints = function (e, i, n) {
      for (void 0 === i && (i = !1), t._mPointList || (t._mPointList = []); t._mPointList.length < e;) {
        t._mPointList.push(new Point());
      }return n || (n = []), n.length = 0, i ? t.getFrom(n, t._mPointList, e) : t.getFromR(n, t._mPointList, e), n;
    }, t.getFrom = function (t, e, i) {
      var n = 0;for (n = 0; n < i; n++) {
        t.push(e[n]);
      }return t;
    }, t.getFromR = function (t, e, i) {
      var n = 0;for (n = 0; n < i; n++) {
        t.push(e.pop());
      }return t;
    }, t.pListToPointList = function (e, i) {
      void 0 === i && (i = !1);var n = 0,
          s = e.length / 2,
          r = t._getPoints(s, i, t._tempPointList);for (n = 0; n < s; n++) {
        r[n].setTo(e[n + n], e[n + n + 1]);
      }return r;
    }, t.pointListToPlist = function (e) {
      var i,
          n = 0,
          s = e.length,
          r = t._temPList;for (r.length = 0, n = 0; n < s; n++) {
        i = e[n], r.push(i.x, i.y);
      }return r;
    }, t.scanPList = function (e) {
      return Utils.copyArray(e, t.pointListToPlist(t.scan(t.pListToPointList(e, !0))));
    }, t.scan = function (e) {
      var i,
          n,
          s,
          r = 0,
          a = 0,
          o = 0,
          h = e.length,
          l = {};for ((n = t._temArr).length = 0, r = (h = e.length) - 1; r >= 0; r--) {
        s = (i = e[r]).x + "_" + i.y, l.hasOwnProperty(s) || (l[s] = !0, n.push(i));
      }for (h = n.length, Utils.copyArray(e, n), r = 1; r < h; r++) {
        (e[r].y < e[o].y || e[r].y == e[o].y && e[r].x < e[o].x) && (o = r);
      }for (i = e[0], e[0] = e[o], e[o] = i, r = 1; r < h - 1; r++) {
        for (o = r, a = r + 1; a < h; a++) {
          (t.multiply(e[a], e[o], e[0]) > 0 || 0 == t.multiply(e[a], e[o], e[0]) && t.dis(e[0], e[a]) < t.dis(e[0], e[o])) && (o = a);
        }i = e[r], e[r] = e[o], e[o] = i;
      }if (n = t._temArr, n.length = 0, e.length < 3) return Utils.copyArray(n, e);for (n.push(e[0], e[1], e[2]), r = 3; r < h; r++) {
        for (; n.length >= 2 && t.multiply(e[r], n[n.length - 1], n[n.length - 2]) >= 0;) {
          n.pop();
        }e[r] && n.push(e[r]);
      }return n;
    }, t._mPointList = null, t._tempPointList = [], t._temPList = [], t._temArr = [], t;
  }(),
      MathUtil = function () {
    function t() {}return __class(t, "laya.maths.MathUtil"), t.subtractVector3 = function (t, e, i) {
      i[0] = t[0] - e[0], i[1] = t[1] - e[1], i[2] = t[2] - e[2];
    }, t.lerp = function (t, e, i) {
      return t * (1 - i) + e * i;
    }, t.scaleVector3 = function (t, e, i) {
      i[0] = t[0] * e, i[1] = t[1] * e, i[2] = t[2] * e;
    }, t.lerpVector3 = function (t, e, i, n) {
      var s = t[0],
          r = t[1],
          a = t[2];n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = a + i * (e[2] - a);
    }, t.lerpVector4 = function (t, e, i, n) {
      var s = t[0],
          r = t[1],
          a = t[2],
          o = t[3];n[0] = s + i * (e[0] - s), n[1] = r + i * (e[1] - r), n[2] = a + i * (e[2] - a), n[3] = o + i * (e[3] - o);
    }, t.slerpQuaternionArray = function (t, e, i, n, s, r, a) {
      var o,
          h,
          l,
          u,
          c,
          _ = t[e + 0],
          d = t[e + 1],
          f = t[e + 2],
          p = t[e + 3],
          g = i[n + 0],
          m = i[n + 1],
          v = i[n + 2],
          y = i[n + 3];return (h = _ * g + d * m + f * v + p * y) < 0 && (h = -h, g = -g, m = -m, v = -v, y = -y), 1 - h > 1e-6 ? (o = Math.acos(h), l = Math.sin(o), u = Math.sin((1 - s) * o) / l, c = Math.sin(s * o) / l) : (u = 1 - s, c = s), r[a + 0] = u * _ + c * g, r[a + 1] = u * d + c * m, r[a + 2] = u * f + c * v, r[a + 3] = u * p + c * y, r;
    }, t.getRotation = function (t, e, i, n) {
      return Math.atan2(n - e, i - t) / Math.PI * 180;
    }, t.sortBigFirst = function (t, e) {
      return t == e ? 0 : e > t ? 1 : -1;
    }, t.sortSmallFirst = function (t, e) {
      return t == e ? 0 : e > t ? -1 : 1;
    }, t.sortNumBigFirst = function (t, e) {
      return parseFloat(e) - parseFloat(t);
    }, t.sortNumSmallFirst = function (t, e) {
      return parseFloat(t) - parseFloat(e);
    }, t.sortByKey = function (e, i, n) {
      void 0 === i && (i = !1), void 0 === n && (n = !0);var s;return s = i ? n ? t.sortNumBigFirst : t.sortBigFirst : n ? t.sortNumSmallFirst : t.sortSmallFirst, function (t, i) {
        return s(t[e], i[e]);
      };
    }, t;
  }(),
      Matrix = function () {
    function t(t, e, i, n, s, r) {
      this.inPool = !1, this.bTransform = !1, void 0 === t && (t = 1), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 1), void 0 === s && (s = 0), void 0 === r && (r = 0), this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r, this._checkTransform();
    }__class(t, "laya.maths.Matrix");var e = t.prototype;return e.identity = function () {
      return this.a = this.d = 1, this.b = this.tx = this.ty = this.c = 0, this.bTransform = !1, this;
    }, e._checkTransform = function () {
      return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d;
    }, e.setTranslate = function (t, e) {
      return this.tx = t, this.ty = e, this;
    }, e.translate = function (t, e) {
      return this.tx += t, this.ty += e, this;
    }, e.scale = function (t, e) {
      this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e, this.bTransform = !0;
    }, e.rotate = function (t) {
      var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          s = this.c,
          r = this.tx;this.a = n * e - this.b * i, this.b = n * i + this.b * e, this.c = s * e - this.d * i, this.d = s * i + this.d * e, this.tx = r * e - this.ty * i, this.ty = r * i + this.ty * e, this.bTransform = !0;
    }, e.skew = function (t, e) {
      var i = Math.tan(t),
          n = Math.tan(e),
          s = this.a,
          r = this.b;return this.a += n * this.c, this.b += n * this.d, this.c += i * s, this.d += i * r, this;
    }, e.invertTransformPoint = function (t) {
      var e = this.a,
          i = this.b,
          n = this.c,
          s = this.d,
          r = this.tx,
          a = e * s - i * n,
          o = s / a,
          h = -i / a,
          l = -n / a,
          u = e / a,
          c = (n * this.ty - s * r) / a,
          _ = -(e * this.ty - i * r) / a;return t.setTo(o * t.x + l * t.y + c, h * t.x + u * t.y + _);
    }, e.transformPoint = function (t) {
      return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty);
    }, e.transformPointN = function (t) {
      return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y);
    }, e.transformPointArray = function (t, e) {
      for (var i = t.length, n = 0; n < i; n += 2) {
        var s = t[n],
            r = t[n + 1];e[n] = this.a * s + this.c * r + this.tx, e[n + 1] = this.b * s + this.d * r + this.ty;
      }return e;
    }, e.transformPointArrayScale = function (t, e) {
      for (var i = t.length, n = 0; n < i; n += 2) {
        var s = t[n],
            r = t[n + 1];e[n] = this.a * s + this.c * r, e[n + 1] = this.b * s + this.d * r;
      }return e;
    }, e.getScaleX = function () {
      return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);
    }, e.getScaleY = function () {
      return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);
    }, e.invert = function () {
      var t = this.a,
          e = this.b,
          i = this.c,
          n = this.d,
          s = this.tx,
          r = t * n - e * i;return this.a = n / r, this.b = -e / r, this.c = -i / r, this.d = t / r, this.tx = (i * this.ty - n * s) / r, this.ty = -(t * this.ty - e * s) / r, this;
    }, e.setTo = function (t, e, i, n, s, r) {
      return this.a = t, this.b = e, this.c = i, this.d = n, this.tx = s, this.ty = r, this;
    }, e.concat = function (t) {
      var e = this.a,
          i = this.c,
          n = this.tx;return this.a = e * t.a + this.b * t.c, this.b = e * t.b + this.b * t.d, this.c = i * t.a + this.d * t.c, this.d = i * t.b + this.d * t.d, this.tx = n * t.a + this.ty * t.c + t.tx, this.ty = n * t.b + this.ty * t.d + t.ty, this;
    }, e.scaleEx = function (t, e) {
      var i = this.a,
          n = this.b,
          s = this.c,
          r = this.d;0 !== n || 0 !== s ? (this.a = t * i, this.b = t * n, this.c = e * s, this.d = e * r) : (this.a = t * i, this.b = 0 * r, this.c = 0 * i, this.d = e * r), this.bTransform = !0;
    }, e.rotateEx = function (t) {
      var e = Math.cos(t),
          i = Math.sin(t),
          n = this.a,
          s = this.b,
          r = this.c,
          a = this.d;0 !== s || 0 !== r ? (this.a = e * n + i * r, this.b = e * s + i * a, this.c = -i * n + e * r, this.d = -i * s + e * a) : (this.a = e * n, this.b = i * a, this.c = -i * n, this.d = e * a), this.bTransform = !0;
    }, e.clone = function () {
      var e = t.create();return e.a = this.a, e.b = this.b, e.c = this.c, e.d = this.d, e.tx = this.tx, e.ty = this.ty, e.bTransform = this.bTransform, e;
    }, e.copyTo = function (t) {
      return t.a = this.a, t.b = this.b, t.c = this.c, t.d = this.d, t.tx = this.tx, t.ty = this.ty, t.bTransform = this.bTransform, t;
    }, e.toString = function () {
      return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty;
    }, e.destroy = function () {
      if (!this.inPool) {
        var e = t._cache;this.inPool = !0, e._length || (e._length = 0), e[e._length++] = this, this.a = this.d = 1, this.b = this.c = this.tx = this.ty = 0, this.bTransform = !1;
      }
    }, t.mul = function (t, e, i) {
      var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          f = e.ty;return 0 !== u || 0 !== c ? (i.a = n * l + s * c, i.b = n * u + s * _, i.c = r * l + a * c, i.d = r * u + a * _, i.tx = l * o + c * h + d, i.ty = u * o + _ * h + f) : (i.a = n * l, i.b = s * _, i.c = r * l, i.d = a * _, i.tx = l * o + d, i.ty = _ * h + f), i;
    }, t.mul16 = function (t, e, i) {
      var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = t.tx,
          h = t.ty,
          l = e.a,
          u = e.b,
          c = e.c,
          _ = e.d,
          d = e.tx,
          f = e.ty;return 0 !== u || 0 !== c ? (i[0] = n * l + s * c, i[1] = n * u + s * _, i[4] = r * l + a * c, i[5] = r * u + a * _, i[12] = l * o + c * h + d, i[13] = u * o + _ * h + f) : (i[0] = n * l, i[1] = s * _, i[4] = r * l, i[5] = a * _, i[12] = l * o + d, i[13] = _ * h + f), i;
    }, t.mulPre = function (t, e, i, n, s, r, a, o) {
      var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;return 0 !== i || 0 !== n ? (o.a = h * e + l * n, o.b = h * i + l * s, o.c = u * e + c * n, o.d = u * i + c * s, o.tx = e * _ + n * d + r, o.ty = i * _ + s * d + a) : (o.a = h * e, o.b = l * s, o.c = u * e, o.d = c * s, o.tx = e * _ + r, o.ty = s * d + a), o;
    }, t.mulPos = function (t, e, i, n, s, r, a, o) {
      var h = t.a,
          l = t.b,
          u = t.c,
          c = t.d,
          _ = t.tx,
          d = t.ty;return 0 !== l || 0 !== u ? (o.a = e * h + i * u, o.b = e * l + i * c, o.c = n * h + s * u, o.d = n * l + s * c, o.tx = h * r + u * a + _, o.ty = l * r + c * a + d) : (o.a = e * h, o.b = i * c, o.c = n * h, o.d = s * c, o.tx = h * r + _, o.ty = c * a + d), o;
    }, t.preMul = function (t, e, i) {
      var n = t.a,
          s = t.b,
          r = t.c,
          a = t.d,
          o = e.a,
          h = e.b,
          l = e.c,
          u = e.d,
          c = e.tx,
          _ = e.ty;return i.a = o * n, i.b = i.c = 0, i.d = u * a, i.tx = c * n + t.tx, i.ty = _ * a + t.ty, 0 === h && 0 === l && 0 === s && 0 === r || (i.a += h * r, i.d += l * s, i.b += o * s + h * a, i.c += l * n + u * r, i.tx += _ * r, i.ty += c * s), i;
    }, t.preMulXY = function (t, e, i, n) {
      var s = t.a,
          r = t.b,
          a = t.c,
          o = t.d;return n.a = s, n.b = r, n.c = a, n.d = o, n.tx = e * s + t.tx + i * a, n.ty = i * o + t.ty + e * r, n;
    }, t.create = function () {
      var e = t._cache,
          i = e._length ? e[--e._length] : new t();return i.inPool = !1, i;
    }, t._cache = [], __static(t, ["EMPTY", function () {
      return this.EMPTY = new t();
    }, "TEMP", function () {
      return this.TEMP = new t();
    }]), t;
  }(),
      Point = function () {
    function t(t, e) {
      void 0 === t && (t = 0), void 0 === e && (e = 0), this.x = t, this.y = e;
    }__class(t, "laya.maths.Point");var e = t.prototype;return e.setTo = function (t, e) {
      return this.x = t, this.y = e, this;
    }, e.distance = function (t, e) {
      return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e));
    }, e.toString = function () {
      return this.x + "," + this.y;
    }, e.normalize = function () {
      var t = Math.sqrt(this.x * this.x + this.y * this.y);if (t > 0) {
        var e = 1 / t;this.x *= e, this.y *= e;
      }
    }, __static(t, ["TEMP", function () {
      return this.TEMP = new t();
    }, "EMPTY", function () {
      return this.EMPTY = new t();
    }]), t;
  }(),
      Rectangle = function () {
    function t(t, e, i, n) {
      void 0 === t && (t = 0), void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), this.x = t, this.y = e, this.width = i, this.height = n;
    }__class(t, "laya.maths.Rectangle");var e = t.prototype;return e.setTo = function (t, e, i, n) {
      return this.x = t, this.y = e, this.width = i, this.height = n, this;
    }, e.copyFrom = function (t) {
      return this.x = t.x, this.y = t.y, this.width = t.width, this.height = t.height, this;
    }, e.contains = function (t, e) {
      return !(this.width <= 0 || this.height <= 0) && t >= this.x && t < this.right && e >= this.y && e < this.bottom;
    }, e.intersects = function (t) {
      return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y);
    }, e.intersection = function (e, i) {
      return this.intersects(e) ? (i || (i = new t()), i.x = Math.max(this.x, e.x), i.y = Math.max(this.y, e.y), i.width = Math.min(this.right, e.right) - i.x, i.height = Math.min(this.bottom, e.bottom) - i.y, i) : null;
    }, e.union = function (e, i) {
      return i || (i = new t()), this.clone(i), e.width <= 0 || e.height <= 0 ? i : (i.addPoint(e.x, e.y), i.addPoint(e.right, e.bottom), this);
    }, e.clone = function (e) {
      return e || (e = new t()), e.x = this.x, e.y = this.y, e.width = this.width, e.height = this.height, e;
    }, e.toString = function () {
      return this.x + "," + this.y + "," + this.width + "," + this.height;
    }, e.equals = function (t) {
      return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height);
    }, e.addPoint = function (t, e) {
      return this.x > t && (this.width += this.x - t, this.x = t), this.y > e && (this.height += this.y - e, this.y = e), this.width < t - this.x && (this.width = t - this.x), this.height < e - this.y && (this.height = e - this.y), this;
    }, e._getBoundPoints = function () {
      var e = t._temB;return e.length = 0, 0 == this.width || 0 == this.height ? e : (e.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height), e);
    }, e.isEmpty = function () {
      return this.width <= 0 || this.height <= 0;
    }, __getset(0, e, "right", function () {
      return this.x + this.width;
    }), __getset(0, e, "bottom", function () {
      return this.y + this.height;
    }), t._getBoundPointS = function (e, i, n, s) {
      var r = t._temA;return r.length = 0, 0 == n || 0 == s ? r : (r.push(e, i, e + n, i, e, i + s, e + n, i + s), r);
    }, t._getWrapRec = function (e, i) {
      if (!e || e.length < 1) return i ? i.setTo(0, 0, 0, 0) : t.TEMP.setTo(0, 0, 0, 0);i = i || new t();var n,
          s,
          r,
          a,
          o,
          h = e.length,
          l = Point.TEMP;for (r = o = -(s = a = 99999), n = 0; n < h; n += 2) {
        l.x = e[n], l.y = e[n + 1], s = s < l.x ? s : l.x, a = a < l.y ? a : l.y, r = r > l.x ? r : l.x, o = o > l.y ? o : l.y;
      }return i.setTo(s, a, r - s, o - a);
    }, t._temB = [], t._temA = [], __static(t, ["EMPTY", function () {
      return this.EMPTY = new t();
    }, "TEMP", function () {
      return this.TEMP = new t();
    }]), t;
  }(),
      SoundManager = function () {
    function t() {}return __class(t, "laya.media.SoundManager"), __getset(1, t, "useAudioMusic", function () {
      return t._useAudioMusic;
    }, function (e) {
      t._useAudioMusic = e, e && (t._musicClass = AudioSound);
    }), __getset(1, t, "autoStopMusic", function () {
      return t._autoStopMusic;
    }, function (e) {
      Laya.stage.off("blur", null, t._stageOnBlur), Laya.stage.off("focus", null, t._stageOnFocus), Laya.stage.off("visibilitychange", null, t._visibilityChange), t._autoStopMusic = e, e && (Laya.stage.on("blur", null, t._stageOnBlur), Laya.stage.on("focus", null, t._stageOnFocus), Laya.stage.on("visibilitychange", null, t._visibilityChange));
    }), __getset(1, t, "muted", function () {
      return t._muted;
    }, function (e) {
      e && t.stopAllSound(), t.musicMuted = e, t._muted = e;
    }), __getset(1, t, "musicMuted", function () {
      return t._musicMuted;
    }, function (e) {
      e ? (t._tMusic && t.stopSound(t._tMusic), t._musicMuted = e) : (t._musicMuted = e, t._tMusic && t.playMusic(t._tMusic));
    }), __getset(1, t, "soundMuted", function () {
      return t._soundMuted;
    }, function (e) {
      t._soundMuted = e;
    }), t.addChannel = function (e) {
      t._channels.indexOf(e) >= 0 || t._channels.push(e);
    }, t.removeChannel = function (e) {
      var i = 0;for (i = t._channels.length - 1; i >= 0; i--) {
        t._channels[i] == e && t._channels.splice(i, 1);
      }
    }, t.disposeSoundIfNotUsed = function (e) {
      var i = 0;for (i = t._channels.length - 1; i >= 0; i--) {
        if (t._channels[i].url == e) return;
      }t.destroySound(e);
    }, t._visibilityChange = function () {
      Laya.stage.isVisibility ? t._stageOnFocus() : t._stageOnBlur();
    }, t._stageOnBlur = function () {
      t._isActive = !1, t._musicChannel && (t._musicChannel.isStopped || (t._blurPaused = !0, t._musicLoops = t._musicChannel.loops, t._musicCompleteHandler = t._musicChannel.completeHandler, t._musicPosition = t._musicChannel.position, t._musicChannel.stop(), Laya.stage.once("mousedown", null, t._stageOnFocus))), t.stopAllSound();
    }, t._stageOnFocus = function () {
      t._isActive = !0, Laya.stage.off("mousedown", null, t._stageOnFocus), t._blurPaused && (t._tMusic && t.playMusic(t._tMusic, t._musicLoops, t._musicCompleteHandler, t._musicPosition), t._blurPaused = !1);
    }, t.playSound = function (e, i, n, s, r) {
      if (void 0 === i && (i = 1), void 0 === r && (r = 0), !t._isActive || !e) return null;if (t._muted) return null;if ((e = URL.formatURL(e)) == t._tMusic) {
        if (t._musicMuted) return null;
      } else {
        if (Render.isConchApp) {
          var a = Utils.getFileExtension(e);if ("wav" != a && "ogg" != a) return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."), null;
        }if (t._soundMuted) return null;
      }var o = Laya.loader.getRes(e);s || (s = t._soundClass), o || ((o = new s()).load(e), Loader.cacheRes(e, o));var h;return (h = o.play(r, i)) ? (h.url = e, h.volume = e == t._tMusic ? t.musicVolume : t.soundVolume, h.completeHandler = n, h) : null;
    }, t.destroySound = function (t) {
      var e = Laya.loader.getRes(t);e && (Loader.clearRes(t), e.dispose());
    }, t.playMusic = function (e, i, n, s) {
      return void 0 === i && (i = 0), void 0 === s && (s = 0), e = URL.formatURL(e), t._tMusic = e, t._musicChannel && t._musicChannel.stop(), t._musicChannel = t.playSound(e, i, n, t._musicClass, s);
    }, t.stopSound = function (e) {
      e = URL.formatURL(e);var i,
          n = 0;for (n = t._channels.length - 1; n >= 0; n--) {
        (i = t._channels[n]).url == e && i.stop();
      }
    }, t.stopAll = function () {
      t._tMusic = null;var e = 0;for (e = t._channels.length - 1; e >= 0; e--) {
        t._channels[e].stop();
      }
    }, t.stopAllSound = function () {
      var e,
          i = 0;for (i = t._channels.length - 1; i >= 0; i--) {
        (e = t._channels[i]).url != t._tMusic && e.stop();
      }
    }, t.stopMusic = function () {
      t._musicChannel && t._musicChannel.stop(), t._tMusic = null;
    }, t.setSoundVolume = function (e, i) {
      if (i) i = URL.formatURL(i), t._setVolume(i, e);else {
        t.soundVolume = e;var n,
            s = 0;for (s = t._channels.length - 1; s >= 0; s--) {
          (n = t._channels[s]).url != t._tMusic && (n.volume = e);
        }
      }
    }, t.setMusicVolume = function (e) {
      t.musicVolume = e, t._setVolume(t._tMusic, e);
    }, t._setVolume = function (e, i) {
      e = URL.formatURL(e);var n,
          s = 0;for (s = t._channels.length - 1; s >= 0; s--) {
        (n = t._channels[s]).url == e && (n.volume = i);
      }
    }, t.musicVolume = 1, t.soundVolume = 1, t.playbackRate = 1, t._useAudioMusic = !0, t._muted = !1, t._soundMuted = !1, t._musicMuted = !1, t._tMusic = null, t._musicChannel = null, t._channels = [], t._autoStopMusic = !1, t._blurPaused = !1, t._isActive = !0, t._musicLoops = 0, t._musicPosition = 0, t._musicCompleteHandler = null, t._soundClass = null, t._musicClass = null, t.autoReleaseSound = !0, t;
  }(),
      LocalStorage = function () {
    function t() {}var e;return __class(t, "laya.net.LocalStorage"), t.__init__ = function () {
      t._baseClass || (t._baseClass = e, e.init()), t.items = t._baseClass.items, t.support = t._baseClass.support;
    }, t.setItem = function (e, i) {
      t._baseClass.setItem(e, i);
    }, t.getItem = function (e) {
      return t._baseClass.getItem(e);
    }, t.setJSON = function (e, i) {
      t._baseClass.setJSON(e, i);
    }, t.getJSON = function (e) {
      return t._baseClass.getJSON(e);
    }, t.removeItem = function (e) {
      t._baseClass.removeItem(e);
    }, t.clear = function () {
      t._baseClass.clear();
    }, t._baseClass = null, t.items = null, t.support = !1, t.__init$ = function () {
      e = function () {
        function t() {}return __class(t, ""), t.init = function () {
          try {
            t.items = window.localStorage, t.setItem("laya", "1"), t.removeItem("laya"), t.support = !0;
          } catch (t) {}t.support || console.log("LocalStorage is not supprot or browser is private mode.");
        }, t.setItem = function (e, i) {
          try {
            t.support && t.items.setItem(e, i);
          } catch (t) {
            console.warn("set localStorage failed", t);
          }
        }, t.getItem = function (e) {
          return t.support ? t.items.getItem(e) : null;
        }, t.setJSON = function (e, i) {
          try {
            t.support && t.items.setItem(e, JSON.stringify(i));
          } catch (t) {
            console.warn("set localStorage failed", t);
          }
        }, t.getJSON = function (e) {
          return JSON.parse(t.support ? t.items.getItem(e) : null);
        }, t.removeItem = function (e) {
          t.support && t.items.removeItem(e);
        }, t.clear = function () {
          t.support && t.items.clear();
        }, t.items = null, t.support = !1, t;
      }();
    }, t;
  }(),
      ResourceVersion = function () {
    function t() {}return __class(t, "laya.net.ResourceVersion"), t.enable = function (e, i) {
      Laya.loader.load(e, Handler.create(null, t.onManifestLoaded, [i]), null, "json"), URL.customFormat = t.addVersionPrefix;
    }, t.onManifestLoaded = function (e, i) {
      t.manifest = i, e.run(), i || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
    }, t.addVersionPrefix = function (e) {
      return t.manifest && t.manifest[e] ? t.manifest[e] + "/" + e : e;
    }, t.manifest = null, t;
  }(),
      URL = function () {
    function t(e) {
      this._url = null, this._path = null, this._url = t.formatURL(e), this._path = t.getPath(e);
    }__class(t, "laya.net.URL");var e = t.prototype;return __getset(0, e, "path", function () {
      return this._path;
    }), __getset(0, e, "url", function () {
      return this._url;
    }), t.formatURL = function (e, i) {
      if (!e) return "null path";if (e.indexOf(":") > 0) return e;null != t.customFormat && (e = t.customFormat(e, i));var n = e.charAt(0);if ("." === n) return t.formatRelativePath((i || t.basePath) + e);if ("~" === n) return t.rootPath + e.substring(1);if ("d" === n) {
        if (0 === e.indexOf("data:image")) return e;
      } else if ("/" === n) return e;return (i || t.basePath) + e;
    }, t.formatRelativePath = function (t) {
      for (var e = t.split("/"), i = 0, n = e.length; i < n; i++) {
        ".." == e[i] && (e.splice(i - 1, 2), i -= 2);
      }return e.join("/");
    }, t.isAbsolute = function (t) {
      return t.indexOf(":") > 0 || "/" == t.charAt(0);
    }, t.getPath = function (t) {
      var e = t.lastIndexOf("/");return e > 0 ? t.substr(0, e + 1) : "";
    }, t.getFileName = function (t) {
      var e = t.lastIndexOf("/");return e > 0 ? t.substr(e + 1) : t;
    }, t.version = {}, t.basePath = "", t.rootPath = "", t.customFormat = function (e) {
      var i = t.version[e];return !Render.isConchApp && i && (e += "?v=" + i), e;
    }, t;
  }(),
      Render = function () {
    function t(e, i) {
      function n() {
        Laya.stage._loop(), Browser.window.requestAnimationFrame(n);
      }this._timeId = 0;var s = t._mainCanvas.source.style;s.position = "absolute", s.top = s.left = "0px", s.background = "#000000", t._mainCanvas.source.id = "layaCanvas";var r = laya.renders.Render.isWebGL;t._mainCanvas.source.width = e, t._mainCanvas.source.height = i, r && t.WebGL.init(t._mainCanvas, e, i), Browser.container.appendChild(t._mainCanvas.source), (t._context = new RenderContext(e, i, r ? null : t._mainCanvas)).ctx.setIsMainContext(), Browser.window.requestAnimationFrame(n), Laya.stage.on("visibilitychange", this, this._onVisibilitychange);
    }__class(t, "laya.renders.Render");var e = t.prototype;return e._onVisibilitychange = function () {
      Laya.stage.isVisibility ? 0 != this._timeId && Browser.window.clearInterval(this._timeId) : this._timeId = Browser.window.setInterval(this._enterFrame, 1e3);
    }, e._enterFrame = function (t) {
      Laya.stage._loop();
    }, __getset(1, t, "context", function () {
      return t._context;
    }), __getset(1, t, "canvas", function () {
      return t._mainCanvas.source;
    }), t._context = null, t._mainCanvas = null, t.WebGL = null, t.isConchNode = !1, t.isConchApp = !1, t.isConchWebGL = !1, t.isWebGL = !1, t.is3DMode = !1, t.optimizeTextureMemory = function (t, e) {
      return !0;
    }, t.__init$ = function () {
      window.ConchRenderType = window.ConchRenderType || 1, window.ConchRenderType |= window.conch ? 4 : 0, t.isConchNode = 5 == (5 & window.ConchRenderType), t.isConchApp = 4 == (4 & window.ConchRenderType), t.isConchWebGL = 6 == window.ConchRenderType;
    }, t;
  }(),
      RenderContext = function () {
    function t(e, i, n) {
      this.x = 0, this.y = 0, this._drawTexture = function (t, e, i) {
        i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
      }, this._fillTexture = function (t, e, i) {
        i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
      }, this._drawTextureWithTransform = function (t, e, i) {
        i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]);
      }, this._fillQuadrangle = function (t, e, i) {
        this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
      }, this._drawRect = function (t, e, i) {
        var n = this.ctx;null != i[4] && (n.fillStyle = i[4], n.fillRect(t + i[0], e + i[1], i[2], i[3], null)), null != i[5] && (n.strokeStyle = i[5], n.lineWidth = i[6], n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
      }, this._drawPie = function (t, e, i) {
        var n = this.ctx;Render.isWebGL && n.setPathId(i[8]), n.beginPath(), Render.isWebGL ? (n.movePath(i[0] + t, i[1] + e), n.moveTo(0, 0)) : n.moveTo(t + i[0], e + i[1]), n.arc(t + i[0], e + i[1], i[2], i[3], i[4]), n.closePath(), this._fillAndStroke(i[5], i[6], i[7], !0);
      }, this._clipRect = function (t, e, i) {
        this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
      }, this._fillRect = function (t, e, i) {
        this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
      }, this._drawCircle = function (e, i, n) {
        var s = this.ctx;Render.isWebGL && s.setPathId(n[6]), Stat.drawCall++, s.beginPath(), Render.isWebGL && s.movePath(n[0] + e, n[1] + i), s.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), s.closePath(), this._fillAndStroke(n[3], n[4], n[5], !0);
      }, this._fillCircle = function (e, i, n) {
        Stat.drawCall++;var s = this.ctx;s.beginPath(), s.fillStyle = n[3], s.arc(n[0] + e, n[1] + i, n[2], 0, t.PI2), s.fill();
      }, this._setShader = function (t, e, i) {
        this.ctx.setShader(i[0]);
      }, this._drawLine = function (t, e, i) {
        var n = this.ctx;Render.isWebGL && n.setPathId(i[6]), n.beginPath(), n.strokeStyle = i[4], n.lineWidth = i[5], Render.isWebGL ? (n.movePath(t, e), n.moveTo(i[0], i[1]), n.lineTo(i[2], i[3])) : (n.moveTo(t + i[0], e + i[1]), n.lineTo(t + i[2], e + i[3])), n.stroke();
      }, this._drawLines = function (t, e, i) {
        var n = this.ctx;Render.isWebGL && n.setPathId(i[5]), n.beginPath(), t += i[0], e += i[1], Render.isWebGL && n.movePath(t, e), n.strokeStyle = i[3], n.lineWidth = i[4];var s = i[2],
            r = 2,
            a = s.length;if (Render.isWebGL) for (n.moveTo(s[0], s[1]); r < a;) {
          n.lineTo(s[r++], s[r++]);
        } else for (n.moveTo(t + s[0], e + s[1]); r < a;) {
          n.lineTo(t + s[r++], e + s[r++]);
        }n.stroke();
      }, this._drawLinesWebGL = function (t, e, i) {
        this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]);
      }, this._drawCurves = function (t, e, i) {
        this.ctx.drawCurves(t, e, i);
      }, this._draw = function (t, e, i) {
        i[0].call(null, this, t, e);
      }, this._transformByMatrix = function (t, e, i) {
        this.ctx.transformByMatrix(i[0]);
      }, this._setTransform = function (t, e, i) {
        this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
      }, this._setTransformByMatrix = function (t, e, i) {
        this.ctx.setTransformByMatrix(i[0]);
      }, this._save = function (t, e, i) {
        this.ctx.save();
      }, this._restore = function (t, e, i) {
        this.ctx.restore();
      }, this._translate = function (t, e, i) {
        this.ctx.translate(i[0], i[1]);
      }, this._transform = function (t, e, i) {
        this.ctx.translate(i[1] + t, i[2] + e);var n = i[0];this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty), this.ctx.translate(-t - i[1], -e - i[2]);
      }, this._rotate = function (t, e, i) {
        this.ctx.translate(i[1] + t, i[2] + e), this.ctx.rotate(i[0]), this.ctx.translate(-t - i[1], -e - i[2]);
      }, this._scale = function (t, e, i) {
        this.ctx.translate(i[2] + t, i[3] + e), this.ctx.scale(i[0], i[1]), this.ctx.translate(-t - i[2], -e - i[3]);
      }, this._alpha = function (t, e, i) {
        this.ctx.globalAlpha *= i[0];
      }, this._setAlpha = function (t, e, i) {
        this.ctx.globalAlpha = i[0];
      }, this._fillText = function (t, e, i) {
        this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
      }, this._strokeText = function (t, e, i) {
        this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]);
      }, this._fillBorderText = function (t, e, i) {
        this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
      }, this._blendMode = function (t, e, i) {
        this.ctx.globalCompositeOperation = i[0];
      }, this._beginClip = function (t, e, i) {
        this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
      }, this._setIBVB = function (t, e, i) {
        this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]);
      }, this._fillTrangles = function (t, e, i) {
        this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
      }, this._drawPath = function (t, e, i) {
        var n = this.ctx;Render.isWebGL && n.setPathId(-1), n.beginPath(), t += i[0], e += i[1], Render.isWebGL && n.movePath(t, e);for (var s = i[2], r = 0, a = s.length; r < a; r++) {
          var o = s[r];switch (o[0]) {case "moveTo":
              Render.isWebGL ? n.moveTo(o[1], o[2]) : n.moveTo(t + o[1], e + o[2]);break;case "lineTo":
              Render.isWebGL ? n.lineTo(o[1], o[2]) : n.lineTo(t + o[1], e + o[2]);break;case "arcTo":
              Render.isWebGL ? n.arcTo(o[1], o[2], o[3], o[4], o[5]) : n.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);break;case "closePath":
              n.closePath();}
        }var h = i[3];null != h && (n.fillStyle = h.fillStyle, n.fill());var l = i[4];null != l && (n.strokeStyle = l.strokeStyle, n.lineWidth = l.lineWidth || 1, n.stroke());
      }, this.drawPoly = function (t, e, i) {
        this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]);
      }, this._drawPoly = function (t, e, i) {
        var n = this.ctx,
            s = i[2],
            r = 2,
            a = s.length;if (Render.isWebGL) for (n.setPathId(i[6]), n.beginPath(), t += i[0], e += i[1], n.movePath(t, e), n.moveTo(s[0], s[1]); r < a;) {
          n.lineTo(s[r++], s[r++]);
        } else for (n.beginPath(), t += i[0], e += i[1], n.moveTo(t + s[0], e + s[1]); r < a;) {
          n.lineTo(t + s[r++], e + s[r++]);
        }n.closePath(), this._fillAndStroke(i[3], i[4], i[5], i[7]);
      }, this._drawSkin = function (t, e, i) {
        var n = i[0];if (n) {
          var s = this.ctx;n.render(s, t, e);
        }
      }, this._drawParticle = function (t, e, i) {
        this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
      }, this._setFilters = function (t, e, i) {
        this.ctx.setFilters(i);
      }, n ? this.ctx = n.getContext("2d") : (n = HTMLCanvas.create("3D"), this.ctx = RunDriver.createWebGLContext2D(n), n._setContext(this.ctx)), n.size(e, i), this.canvas = n;
    }__class(t, "laya.renders.RenderContext");var e = t.prototype;return e.destroy = function () {
      this.canvas && (this.canvas.destroy(), this.canvas = null, this.ctx = null), this.ctx && (this.ctx.destroy(), this.ctx = null);
    }, e.drawTexture = function (t, e, i, n, s) {
      t.loaded && this.ctx.drawTexture(t, e, i, n, s, this.x, this.y);
    }, e._drawTextures = function (t, e, i) {
      i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
    }, e.drawTextureWithTransform = function (t, e, i, n, s, r, a) {
      t.loaded && this.ctx.drawTextureWithTransform(t, e, i, n, s, r, this.x, this.y, a);
    }, e.fillQuadrangle = function (t, e, i, n, s) {
      this.ctx.fillQuadrangle(t, e, i, n, s);
    }, e.drawCanvas = function (t, e, i, n, s) {
      this.ctx.drawCanvas(t, e + this.x, i + this.y, n, s);
    }, e.drawRect = function (t, e, i, n, s, r) {
      void 0 === r && (r = 1);var a = this.ctx;a.strokeStyle = s, a.lineWidth = r, a.strokeRect(t + this.x, e + this.y, i, n, r);
    }, e._fillAndStroke = function (t, e, i, n) {
      void 0 === n && (n = !1);var s = this.ctx;null != t && (s.fillStyle = t, Render.isWebGL ? s.fill(n) : s.fill()), null != e && i > 0 && (s.strokeStyle = e, s.lineWidth = i, s.stroke());
    }, e.clipRect = function (t, e, i, n) {
      this.ctx.clipRect(t + this.x, e + this.y, i, n);
    }, e.fillRect = function (t, e, i, n, s) {
      this.ctx.fillRect(t + this.x, e + this.y, i, n, s);
    }, e.drawCircle = function (e, i, n, s, r) {
      void 0 === r && (r = 1), Stat.drawCall++;var a = this.ctx;a.beginPath(), a.strokeStyle = s, a.lineWidth = r, a.arc(e + this.x, i + this.y, n, 0, t.PI2), a.stroke();
    }, e.fillCircle = function (e, i, n, s) {
      Stat.drawCall++;var r = this.ctx;r.beginPath(), r.fillStyle = s, r.arc(e + this.x, i + this.y, n, 0, t.PI2), r.fill();
    }, e.setShader = function (t) {
      this.ctx.setShader(t);
    }, e.drawLine = function (t, e, i, n, s, r) {
      void 0 === r && (r = 1);var a = this.ctx;a.beginPath(), a.strokeStyle = s, a.lineWidth = r, a.moveTo(this.x + t, this.y + e), a.lineTo(this.x + i, this.y + n), a.stroke();
    }, e.clear = function () {
      this.ctx.clear();
    }, e.transformByMatrix = function (t) {
      this.ctx.transformByMatrix(t);
    }, e.setTransform = function (t, e, i, n, s, r) {
      this.ctx.setTransform(t, e, i, n, s, r);
    }, e.setTransformByMatrix = function (t) {
      this.ctx.setTransformByMatrix(t);
    }, e.save = function () {
      this.ctx.save();
    }, e.restore = function () {
      this.ctx.restore();
    }, e.translate = function (t, e) {
      this.ctx.translate(t, e);
    }, e.transform = function (t, e, i, n, s, r) {
      this.ctx.transform(t, e, i, n, s, r);
    }, e.rotate = function (t) {
      this.ctx.rotate(t);
    }, e.scale = function (t, e) {
      this.ctx.scale(t, e);
    }, e.alpha = function (t) {
      this.ctx.globalAlpha *= t;
    }, e.setAlpha = function (t) {
      this.ctx.globalAlpha = t;
    }, e.fillWords = function (t, e, i, n, s, r) {
      void 0 === r && (r = 0), this.ctx.fillWords(t, e, i, n, s, r);
    }, e.fillBorderWords = function (t, e, i, n, s, r, a) {
      this.ctx.fillBorderWords(t, e, i, n, s, r, a);
    }, e.fillText = function (t, e, i, n, s, r) {
      this.ctx.fillText(t, e + this.x, i + this.y, n, s, r);
    }, e.strokeText = function (t, e, i, n, s, r, a) {
      this.ctx.strokeText(t, e + this.x, i + this.y, n, s, r, a);
    }, e.blendMode = function (t) {
      this.ctx.globalCompositeOperation = t;
    }, e.flush = function () {
      this.ctx.flush && this.ctx.flush();
    }, e.addRenderObject = function (t) {
      this.ctx.addRenderObject(t);
    }, e.beginClip = function (t, e, i, n) {
      this.ctx.beginClip && this.ctx.beginClip(t, e, i, n);
    }, e.endClip = function () {
      this.ctx.endClip && this.ctx.endClip();
    }, e.fillTrangles = function (t, e, i) {
      this.ctx.fillTrangles(i[0], i[1], i[2], i[3], i.length > 4 ? i[4] : null);
    }, __static(t, ["PI2", function () {
      return this.PI2 = 2 * Math.PI;
    }]), t;
  }(),
      RenderSprite = function () {
    function t(e, i) {
      switch (this._next = i || t.NORENDER, e) {case 0:
          return void (this._fun = this._no);case 1:
          return void (this._fun = this._image);case 2:
          return void (this._fun = this._alpha);case 4:
          return void (this._fun = this._transform);case 8:
          return void (this._fun = this._blend);case 16:
          return void (this._fun = this._canvas);case 64:
          return void (this._fun = this._mask);case 128:
          return void (this._fun = this._clip);case 256:
          return void (this._fun = this._style);case 512:
          return void (this._fun = this._graphics);case 2048:
          return void (this._fun = this._childs);case 1024:
          return void (this._fun = this._custom);case 513:case 517:
          return void (this._fun = this._image2);case 32:
          return void (this._fun = Filter._filter);case 69905:
          return void (this._fun = t._initRenderFun);}this.onCreate(e);
    }__class(t, "laya.renders.RenderSprite");var e = t.prototype;return e.onCreate = function (t) {}, e._style = function (t, e, i, n) {
      t._style.render(t, e, i, n);var s = this._next;s._fun.call(s, t, e, i, n);
    }, e._no = function (t, e, i, n) {}, e._custom = function (t, e, i, n) {
      t.customRender(e, i, n);var s = t._style._tf;this._next._fun.call(this._next, t, e, i - s.translateX, n - s.translateY);
    }, e._clip = function (e, i, n, s) {
      var r = this._next;if (r != t.NORENDER) {
        var a = e._style.scrollRect;i.ctx.save(), i.ctx.clipRect(n, s, a.width, a.height), r._fun.call(r, e, i, n - a.x, s - a.y), i.ctx.restore();
      }
    }, e._blend = function (t, e, i, n) {
      var s = t._style;s.blendMode && (e.ctx.globalCompositeOperation = s.blendMode);var r = this._next;r._fun.call(r, t, e, i, n), e.ctx.globalCompositeOperation = "source-over";
    }, e._mask = function (t, e, i, n) {
      var s = this._next;s._fun.call(s, t, e, i, n);var r = t.mask;r && (e.ctx.globalCompositeOperation = "destination-in", (r.numChildren > 0 || !r.graphics._isOnlyOne()) && (r.cacheAsBitmap = !0), r.render(e, i - t.pivotX, n - t.pivotY)), e.ctx.globalCompositeOperation = "source-over";
    }, e._graphics = function (t, e, i, n) {
      var s = t._style._tf;t._graphics && t._graphics._render(t, e, i - s.translateX, n - s.translateY);var r = this._next;r._fun.call(r, t, e, i, n);
    }, e._image = function (t, e, i, n) {
      var s = t._style;e.ctx.drawTexture2(i, n, s._tf.translateX, s._tf.translateY, t.transform, s.alpha, s.blendMode, t._graphics._one);
    }, e._image2 = function (t, e, i, n) {
      var s = t._style._tf;e.ctx.drawTexture2(i, n, s.translateX, s.translateY, t.transform, 1, null, t._graphics._one);
    }, e._alpha = function (t, e, i, n) {
      var s;if ((s = t._style.alpha) > .01 || t._needRepaint()) {
        var r = e.ctx.globalAlpha;e.ctx.globalAlpha *= s;var a = this._next;a._fun.call(a, t, e, i, n), e.ctx.globalAlpha = r;
      }
    }, e._transform = function (e, i, n, s) {
      var r = e.transform,
          a = this._next;r && a != t.NORENDER ? (i.save(), i.transform(r.a, r.b, r.c, r.d, r.tx + n, r.ty + s), a._fun.call(a, e, i, 0, 0), i.restore()) : a._fun.call(a, e, i, n, s);
    }, e._childs = function (t, e, i, n) {
      var s = t._style,
          r = s._tf;if (i = i - r.translateX + s.paddingLeft, n = n - r.translateY + s.paddingTop, s._calculation) {
        var a = t._getWords();if (a) {
          var o = s;o && (o.stroke ? e.fillBorderWords(a, i, n, o.font, o.color, o.strokeColor, o.stroke) : e.fillWords(a, i, n, o.font, o.color, o.underLine));
        }
      }var h,
          l = t._childs,
          u = l.length;if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
        var c = t.viewport || t._style.scrollRect,
            _ = c.x,
            d = c.y,
            f = c.right,
            p = c.bottom,
            g = NaN,
            m = NaN;for (v = 0; v < u; ++v) {
          (h = l[v]).visible && (g = h._x) < f && g + h.width > _ && (m = h._y) < p && m + h.height > d && h.render(e, i, n);
        }
      } else for (var v = 0; v < u; ++v) {
        (h = l[v])._style.visible && h.render(e, i, n);
      }
    }, e._canvas = function (t, e, i, n) {
      var s = t._$P.cacheCanvas;if (s) {
        "bitmap" === s.type ? Stat.canvasBitmap++ : Stat.canvasNormal++;var r = s.ctx;if (t._needRepaint() || !r) this._canvas_repaint(t, e, i, n);else {
          var a = s._cacheRec;e.drawCanvas(r.canvas, i + a.x, n + a.y, a.width, a.height);
        }
      } else this._next._fun.call(this._next, t, e, i, n);
    }, e._canvas_repaint = function (t, e, i, n) {
      var s = t._$P.cacheCanvas,
          r = this._next;if (s) {
        var a,
            o,
            h,
            l,
            u = s.ctx,
            c = t._needRepaint() || !u,
            _ = s.type;if ("bitmap" === _ ? Stat.canvasBitmap++ : Stat.canvasNormal++, c) {
          s._cacheRec || (s._cacheRec = new Rectangle());var d, f;Render.isWebGL && "bitmap" !== _ ? s._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) : ((l = t.getSelfBounds()).x = l.x - t.pivotX, l.y = l.y - t.pivotY, l.x = l.x - 16, l.y = l.y - 16, l.width = l.width + 32, l.height = l.height + 32, l.x = Math.floor(l.x + i) - i, l.y = Math.floor(l.y + n) - n, l.width = Math.floor(l.width), l.height = Math.floor(l.height), s._cacheRec.copyFrom(l)), l = s._cacheRec;var p = Render.isWebGL ? 1 : Browser.pixelRatio * Laya.stage.clientScaleX,
              g = Render.isWebGL ? 1 : Browser.pixelRatio * Laya.stage.clientScaleY;if (!Render.isWebGL) {
            var m,
                v = 1,
                y = 1;for (m = t; m && m != Laya.stage;) {
              v *= m.scaleX, y *= m.scaleY, m = m.parent;
            }Render.isWebGL ? (v < 1 && (p *= v), y < 1 && (g *= y)) : (v > 1 && (p *= v), y > 1 && (g *= y));
          }if (t.scrollRect) {
            var w = t.scrollRect;l.x -= w.x, l.y -= w.y;
          }if (d = l.width * p, f = l.height * g, o = l.x, h = l.y, Render.isWebGL && "bitmap" === _ && (d > 2048 || f > 2048)) return console.warn("cache bitmap size larger than 2048,cache ignored"), s.ctx && (Pool.recover("RenderContext", s.ctx), s.ctx.canvas.size(0, 0), s.ctx = null), void r._fun.call(r, t, e, i, n);u || (u = s.ctx = Pool.getItem("RenderContext") || new RenderContext(d, f, HTMLCanvas.create("AUTO"))), u.ctx.sprite = t, (a = u.canvas).clear(), (a.width != d || a.height != f) && a.size(d, f), "bitmap" === _ ? a.context.asBitmap = !0 : "normal" === _ && (a.context.asBitmap = !1);var x;if (1 != p || 1 != g) {
            var T = u.ctx;T.save(), T.scale(p, g), !Render.isConchWebGL && Render.isConchApp && (x = t._$P.cf) && T.setFilterMatrix && T.setFilterMatrix(x._mat, x._alpha), r._fun.call(r, t, u, -o, -h), T.restore(), Render.isConchApp && !Render.isConchWebGL || t._applyFilters();
          } else T = u.ctx, !Render.isConchWebGL && Render.isConchApp && (x = t._$P.cf) && T.setFilterMatrix && T.setFilterMatrix(x._mat, x._alpha), r._fun.call(r, t, u, -o, -h), Render.isConchApp && !Render.isConchWebGL || t._applyFilters();t._$P.staticCache && (s.reCache = !1), Stat.canvasReCache++;
        } else o = (l = s._cacheRec).x, h = l.y, a = u.canvas;e.drawCanvas(a, i + o, n + h, l.width, l.height);
      } else r._fun.call(r, t, u, i, n);
    }, t.__init__ = function () {
      var e,
          i = 0,
          n = 0;for (e = RunDriver.createRenderSprite(69905, null), n = t.renders.length = 4096, i = 0; i < n; i++) {
        t.renders[i] = e;
      }t.renders[0] = RunDriver.createRenderSprite(0, null), function (e, i) {
        for (var n = 0, s = 0; s < e.length; s++) {
          n |= e[s], t.renders[n] = i;
        }
      }([1, 512, 4, 2], new t(1, null)), t.renders[513] = RunDriver.createRenderSprite(513, null), t.renders[517] = new t(517, null);
    }, t._initRenderFun = function (e, i, n, s) {
      var r = e._renderType;(t.renders[r] = t._getTypeRender(r))._fun(e, i, n, s);
    }, t._getTypeRender = function (t) {
      for (var e = null, i = 2048; i > 1;) {
        i & t && (e = RunDriver.createRenderSprite(i, e)), i >>= 1;
      }return e;
    }, t.IMAGE = 1, t.ALPHA = 2, t.TRANSFORM = 4, t.BLEND = 8, t.CANVAS = 16, t.FILTERS = 32, t.MASK = 64, t.CLIP = 128, t.STYLE = 256, t.GRAPHICS = 512, t.CUSTOM = 1024, t.CHILDS = 2048, t.INIT = 69905, t.renders = [], __static(t, ["NORENDER", function () {
      return this.NORENDER = new t(0, null);
    }]), t;
  }(),
      Context = function () {
    function t() {
      this._repaint = !1;
    }__class(t, "laya.resource.Context");var e = t.prototype;return e.replaceReset = function () {
      var e = 0,
          i = 0;i = t.replaceKeys.length;var n;for (e = 0; e < i; e++) {
        n = t.replaceKeys[e], this[t.newKeys[e]] = this[n];
      }
    }, e.replaceResotre = function () {
      this.__restore(), this.__reset();
    }, e.setIsMainContext = function () {}, e.drawTextures = function (t, e, i, n) {
      Stat.drawCall += e.length / 2;for (var s = t.width, r = t.height, a = 0, o = e.length; a < o; a += 2) {
        this.drawTexture(t, e[a], e[a + 1], s, r, i, n);
      }
    }, e.drawCanvas = function (t, e, i, n, s) {
      Stat.drawCall++, this.drawImage(t.source, e, i, n, s);
    }, e.fillRect = function (t, e, i, n, s) {
      Stat.drawCall++, s && (this.fillStyle = s), this.__fillRect(t, e, i, n);
    }, e.fillText = function (t, e, i, n, s, r) {
      Stat.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.fillStyle = s, this.textAlign = r, this.textBaseline = "top"), this.__fillText(t, e, i);
    }, e.fillBorderText = function (t, e, i, n, s, r, a, o) {
      Stat.drawCall++, this.font = n, this.fillStyle = s, this.textBaseline = "top", this.strokeStyle = r, this.lineWidth = a, this.textAlign = o, this.__strokeText(t, e, i), this.__fillText(t, e, i);
    }, e.strokeText = function (t, e, i, n, s, r, a) {
      Stat.drawCall++, arguments.length > 3 && null != n && (this.font = n, this.strokeStyle = s, this.lineWidth = r, this.textAlign = a, this.textBaseline = "top"), this.__strokeText(t, e, i);
    }, e.transformByMatrix = function (t) {
      this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
    }, e.setTransformByMatrix = function (t) {
      this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
    }, e.clipRect = function (t, e, i, n) {
      Stat.drawCall++, this.beginPath(), this.rect(t, e, i, n), this.clip();
    }, e.drawTexture = function (t, e, i, n, s, r, a) {
      Stat.drawCall++;var o = t.uv,
          h = t.bitmap.width,
          l = t.bitmap.height;this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + r, i + a, n, s);
    }, e.drawTextureWithTransform = function (t, e, i, n, s, r, a, o, h) {
      Stat.drawCall++;var l = t.uv,
          u = t.bitmap.width,
          c = t.bitmap.height;this.save(), 1 != h && (this.globalAlpha *= h), r ? (this.transform(r.a, r.b, r.c, r.d, r.tx + a, r.ty + o), this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, n, s)) : this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + a, i + o, n, s), this.restore();
    }, e.drawTexture2 = function (t, e, i, n, s, r, a, o) {
      "use strict";
      var h = o[0];if (h.loaded && h.bitmap && h.source) {
        Stat.drawCall++;var l = 1 !== r;if (l) {
          var u = this.globalAlpha;this.globalAlpha *= r;
        }var c = h.uv,
            _ = h.bitmap.width,
            d = h.bitmap.height;s ? (this.save(), this.transform(s.a, s.b, s.c, s.d, s.tx + t, s.ty + e), this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i, o[2] - n, o[3], o[4]), this.restore()) : this.drawImage(h.source, c[0] * _, c[1] * d, (c[2] - c[0]) * _, (c[5] - c[3]) * d, o[1] - i + t, o[2] - n + e, o[3], o[4]), l && (this.globalAlpha = u);
      }
    }, e.fillTexture = function (t, e, i, n, s, r, a, o) {
      if (!o.pat) {
        if (t.uv != Texture.DEF_UV) {
          var h = new HTMLCanvas("2D");h.getContext("2d"), h.size(t.width, t.height), h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0), t = new Texture(h);
        }o.pat = this.createPattern(t.bitmap.source, r);
      }var l = e,
          u = i,
          c = 0,
          _ = 0;a && (l += a.x % t.width, u += a.y % t.height, c -= a.x % t.width, _ -= a.y % t.height), this.translate(l, u), this.fillRect(c, _, n, s, o.pat), this.translate(-l, -u);
    }, e.flush = function () {
      return 0;
    }, e.fillWords = function (t, e, i, n, s, r) {
      n && (this.font = n), s && (this.fillStyle = s);this.textBaseline = "top", this.textAlign = "left";for (var a = 0, o = t.length; a < o; a++) {
        var h = t[a];if (this.__fillText(h.char, h.x + e, h.y + i), 1 === r) {
          var l = h.height,
              u = .5 * h.style.letterSpacing;u || (u = 0), this.beginPath(), this.strokeStyle = s, this.lineWidth = 1, this.moveTo(e + h.x - u + .5, i + h.y + l + .5), this.lineTo(e + h.x + h.width + u + .5, i + h.y + l + .5), this.stroke();
        }
      }
    }, e.fillBorderWords = function (t, e, i, n, s, r, a) {
      n && (this.font = n), s && (this.fillStyle = s), this.textBaseline = "top", this.lineWidth = a, this.textAlign = "left", this.strokeStyle = r;for (var o = 0, h = t.length; o < h; o++) {
        var l = t[o];this.__strokeText(l.char, l.x + e, l.y + i), this.__fillText(l.char, l.x + e, l.y + i);
      }
    }, e.destroy = function () {
      this.canvas.width = this.canvas.height = 0;
    }, e.clear = function () {
      this.clearRect(0, 0, this._canvas.width, this._canvas.height), this._repaint = !1;
    }, e.drawCurves = function (t, e, i) {
      this.beginPath(), this.strokeStyle = i[3], this.lineWidth = i[4];var n = i[2];t += i[0], e += i[1], this.moveTo(t + n[0], e + n[1]);for (var s = 2, r = n.length; s < r;) {
        this.quadraticCurveTo(t + n[s++], e + n[s++], t + n[s++], e + n[s++]);
      }this.stroke();
    }, t.__init__ = function (t) {
      var e = laya.resource.Context.prototype;(t = t || CanvasRenderingContext2D.prototype).__fillText = t.fillText, t.__fillRect = t.fillRect, t.__strokeText = t.strokeText;return void ["drawTextures", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function (i) {
        t[i] = e[i];
      });
    }, t.replaceCanvasGetSet = function (t, e) {
      var i = Object.getOwnPropertyDescriptor(t, e);if (!i || !i.configurable) return !1;var n,
          s = {};for (n in i) {
        "set" != n && (s[n] = i[n]);
      }var r = i.set;return s.set = function (t) {
        r.call(this, t);var e = this.getContext("2d");e && "__reset" in e && e.__reset();
      }, Object.defineProperty(t, e, s), !0;
    }, t.replaceGetSet = function (e, i) {
      var n = Object.getOwnPropertyDescriptor(e, i);if (!n || !n.configurable) return !1;var s,
          r = {};for (s in n) {
        "set" != s && (r[s] = n[s]);
      }var a = n.set,
          o = "___" + i + "__";return t.newKeys.push(o), r.set = function (t) {
        t != this[o] && (this[o] = t, a.call(this, t));
      }, Object.defineProperty(e, i, r), !0;
    }, t.newKeys = [], __static(t, ["_default", function () {
      return this._default = new t();
    }, "replaceKeys", function () {
      return this.replaceKeys = ["font", "fillStyle", "textBaseline"];
    }]), t;
  }(),
      ResourceManager = function () {
    function t() {
      this._id = 0, this._name = null, this._resources = null, this._memorySize = 0, this._garbageCollectionRate = NaN, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 0, this._id = ++t._uniqueIDCounter, this._name = "Content Manager", t._isResourceManagersSorted = !1, this._memorySize = 0, this._isOverflow = !1, this.autoRelease = !1, this.autoReleaseMaxSize = 536870912, this._garbageCollectionRate = .2, t._resourceManagers.push(this), this._resources = [];
    }__class(t, "laya.resource.ResourceManager");var e = t.prototype;return Laya.imps(e, { "laya.resource.IDispose": !0 }), e.getResourceByIndex = function (t) {
      return this._resources[t];
    }, e.getResourcesLength = function () {
      return this._resources.length;
    }, e.addResource = function (t) {
      t.resourceManager && t.resourceManager.removeResource(t);return -1 === this._resources.indexOf(t) && (t._resourceManager = this, this._resources.push(t), this.addSize(t.memorySize), !0);
    }, e.removeResource = function (t) {
      var e = this._resources.indexOf(t);return -1 !== e && (this._resources.splice(e, 1), t._resourceManager = null, this._memorySize -= t.memorySize, !0);
    }, e.unload = function () {
      for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
        t[e].dispose();
      }t.length = 0;
    }, e.setUniqueName = function (e) {
      for (var i = !0, n = 0; n < t._resourceManagers.length; n++) {
        if (t._resourceManagers[n]._name === e && t._resourceManagers[n] !== this) return void (i = !1);
      }i ? this.name != e && (this.name = e, t._isResourceManagersSorted = !1) : this.setUniqueName(e.concat("-copy"));
    }, e.dispose = function () {
      if (this === t._systemResourceManager) throw new Error("systemResourceManager不能被释放！");t._resourceManagers.splice(t._resourceManagers.indexOf(this), 1), t._isResourceManagersSorted = !1;for (var e = this._resources.slice(0, this._resources.length), i = 0; i < e.length; i++) {
        var n = e[i];n.resourceManager.removeResource(n), n.dispose();
      }e.length = 0;
    }, e.addSize = function (t) {
      t && (this.autoRelease && t > 0 && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize), this._memorySize += t);
    }, e.garbageCollection = function (t) {
      var e = this._resources;(e = e.slice()).sort(function (t, e) {
        if (!t || !e) throw new Error("a或b不能为空！");return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount;
      });for (var i = Stat.loopCount, n = 0, s = e.length; n < s; n++) {
        var r = e[n];if (!(i - r._lastUseFrameCount > 1)) return void (this._memorySize >= t && (this._isOverflow = !0));if (r.releaseResource(), this._memorySize < t) return void (this._isOverflow = !1);
      }
    }, __getset(0, e, "id", function () {
      return this._id;
    }), __getset(0, e, "name", function () {
      return this._name;
    }, function (e) {
      !e && "" === e || this._name === e || (this._name = e, t._isResourceManagersSorted = !1);
    }), __getset(0, e, "memorySize", function () {
      return this._memorySize;
    }), __getset(1, t, "systemResourceManager", function () {
      return null === t._systemResourceManager && (t._systemResourceManager = new t(), t._systemResourceManager._name = "System Resource Manager"), t._systemResourceManager;
    }), __getset(1, t, "sortedResourceManagersByName", function () {
      return t._isResourceManagersSorted || (t._isResourceManagersSorted = !0, t._resourceManagers.sort(t.compareResourceManagersByName)), t._resourceManagers;
    }), t.__init__ = function () {
      t.currentResourceManager = t.systemResourceManager;
    }, t.getLoadedResourceManagerByIndex = function (e) {
      return t._resourceManagers[e];
    }, t.getLoadedResourceManagersCount = function () {
      return t._resourceManagers.length;
    }, t.recreateContentManagers = function (e) {
      void 0 === e && (e = !1);for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
        t.currentResourceManager = t._resourceManagers[n];for (var s = 0; s < t.currentResourceManager._resources.length; s++) {
          t.currentResourceManager._resources[s].releaseResource(e), t.currentResourceManager._resources[s].activeResource(e);
        }
      }t.currentResourceManager = i;
    }, t.releaseContentManagers = function (e) {
      void 0 === e && (e = !1);for (var i = t.currentResourceManager, n = 0; n < t._resourceManagers.length; n++) {
        t.currentResourceManager = t._resourceManagers[n];for (var s = 0; s < t.currentResourceManager._resources.length; s++) {
          var r = t.currentResourceManager._resources[s];!r.released && r.releaseResource(e);
        }
      }t.currentResourceManager = i;
    }, t.compareResourceManagersByName = function (t, e) {
      if (t == e) return 0;var i = t._name,
          n = e._name;if (null == i) return null == n ? 0 : -1;if (null == n) return 1;var s = i.localeCompare(n);return 0 != s ? s : (e.setUniqueName(n), n = e._name, i.localeCompare(n));
    }, t._uniqueIDCounter = 0, t._systemResourceManager = null, t._isResourceManagersSorted = !1, t._resourceManagers = [], t.currentResourceManager = null, t;
  }(),
      System = function () {
    function System() {}return __class(System, "laya.system.System"), System.changeDefinition = function (name, classObj) {
      Laya[name] = classObj;var str = name + "=classObj";eval(str);
    }, System.__init__ = function () {
      Render.isConchApp && (conch.disableConchResManager(), conch.disableConchAutoRestoreLostedDevice());
    }, System;
  }(),
      Browser = function () {
    function t() {}return __class(t, "laya.utils.Browser"), __getset(1, t, "pixelRatio", function () {
      return t.__init__(), t.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") > -1 ? 2 : RunDriver.getPixelRatio();
    }), __getset(1, t, "height", function () {
      return t.__init__(), (Laya.stage && Laya.stage.canvasRotation ? t.clientWidth : t.clientHeight) * t.pixelRatio;
    }), __getset(1, t, "clientWidth", function () {
      return t.__init__(), t.window.innerWidth || t.document.body.clientWidth;
    }), __getset(1, t, "window", function () {
      return t.__init__(), t._window;
    }), __getset(1, t, "clientHeight", function () {
      return t.__init__(), t.window.innerHeight || t.document.body.clientHeight || t.document.documentElement.clientHeight;
    }), __getset(1, t, "width", function () {
      return t.__init__(), (Laya.stage && Laya.stage.canvasRotation ? t.clientHeight : t.clientWidth) * t.pixelRatio;
    }), __getset(1, t, "container", function () {
      return t.__init__(), t._container || ((t._container = t.createElement("div")).id = "layaContainer", t.document.body.appendChild(t._container)), t._container;
    }, function (e) {
      t._container = e;
    }), __getset(1, t, "document", function () {
      return t.__init__(), t._document;
    }), t.__init__ = function () {
      if (!t._window) {
        t._window = RunDriver.getWindow(), t._document = t.window.document, t._window.addEventListener("message", function (t) {
          laya.utils.Browser._onMessage(t);
        }, !1), t.document.__createElement = t.document.createElement, window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (t) {
          return window.setTimeout(t, 1e3 / 60);
        };var e = window.document.body.style;e.margin = 0, e.overflow = "hidden", t.userAgent = t.window.navigator.userAgent, t.onIOS = !!(t.u = t.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/), t.onMobile = t.u.indexOf("Mobile") > -1, t.onIPhone = t.u.indexOf("iPhone") > -1, t.onIPad = t.u.indexOf("iPad") > -1, t.onAndriod = t.u.indexOf("Android") > -1 || t.u.indexOf("Adr") > -1, t.onWP = t.u.indexOf("Windows Phone") > -1, t.onQQBrowser = t.u.indexOf("QQBrowser") > -1, t.onMQQBrowser = t.u.indexOf("MQQBrowser") > -1 || t.u.indexOf("Mobile") > -1 && t.u.indexOf("QQ") > -1, t.onIE = !!t.window.ActiveXObject || "ActiveXObject" in t.window, t.onWeiXin = t.u.indexOf("MicroMessenger") > -1, t.onPC = !t.onMobile, t.onSafari = !!t.u.match(/Version\/\d+\.\d\x20Mobile\/\S+\x20Safari/), t.onFirefox = t.u.indexOf("Firefox") > -1, t.onEdge = t.u.indexOf("Edge") > -1, t.onMiniGame = t.u.indexOf("MiniGame") > -1, t.httpProtocol = "http:" == t.window.location.protocol, t.webAudioEnabled = !!(t.window.AudioContext || t.window.webkitAudioContext || t.window.mozAudioContext), t.soundType = t.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND", Sound = t.webAudioEnabled ? WebAudioSound : AudioSound, t.webAudioEnabled && WebAudioSound.initWebAudio(), AudioSound._initMusicAudio(), t.enableTouch = "ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch, window.focus(), SoundManager._soundClass = Sound, Render._mainCanvas = Render._mainCanvas || HTMLCanvas.create("2D"), t.canvas || (t.canvas = HTMLCanvas.create("2D"), t.context = t.canvas.getContext("2d"));
      }
    }, t._onMessage = function (e) {
      if (e.data && "size" == e.data.name) {
        if (t.window.innerWidth = e.data.width, t.window.innerHeight = e.data.height, t.window.__innerHeight = e.data.clientHeight, !t.document.createEvent) return void console.warn("no document.createEvent");var i = t.document.createEvent("HTMLEvents");return i.initEvent("resize", !1, !1), void t.window.dispatchEvent(i);
      }
    }, t.createElement = function (e) {
      return t.__init__(), t.document.__createElement(e);
    }, t.getElementById = function (e) {
      return t.__init__(), t.document.getElementById(e);
    }, t.removeElement = function (t) {
      t && t.parentNode && t.parentNode.removeChild(t);
    }, t.now = function () {
      return RunDriver.now();
    }, t._window = null, t._document = null, t._container = null, t.userAgent = null, t.u = null, t.onIOS = !1, t.onMobile = !1, t.onIPhone = !1, t.onIPad = !1, t.onAndriod = !1, t.onAndroid = !1, t.onWP = !1, t.onQQBrowser = !1, t.onMQQBrowser = !1, t.onSafari = !1, t.onFirefox = !1, t.onEdge = !1, t.onIE = !1, t.onWeiXin = !1, t.onMiniGame = !1, t.onPC = !1, t.httpProtocol = !1, t.webAudioEnabled = !1, t.soundType = null, t.enableTouch = !1, t.canvas = null, t.context = null, t.__init$ = function () {}, t;
  }(),
      Byte = function () {
    function t(t) {
      this._xd_ = !0, this._allocated_ = 8, this._pos_ = 0, this._length = 0, t ? (this._u8d_ = new Uint8Array(t), this._d_ = new DataView(this._u8d_.buffer), this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_);
    }__class(t, "laya.utils.Byte");var e = t.prototype;return e.___resizeBuffer = function (t) {
      try {
        var e = new Uint8Array(t);null != this._u8d_ && (this._u8d_.length <= t ? e.set(this._u8d_) : e.set(this._u8d_.subarray(0, t))), this._u8d_ = e, this._d_ = new DataView(e.buffer);
      } catch (e) {
        throw "___resizeBuffer err:" + t;
      }
    }, e.getString = function () {
      return this.rUTF(this.getUint16());
    }, e.getFloat32Array = function (t, e) {
      var i = t + e;i = i > this._length ? this._length : i;var n = new Float32Array(this._d_.buffer.slice(t, i));return this._pos_ = i, n;
    }, e.getUint8Array = function (t, e) {
      var i = t + e;i = i > this._length ? this._length : i;var n = new Uint8Array(this._d_.buffer.slice(t, i));return this._pos_ = i, n;
    }, e.getInt16Array = function (t, e) {
      var i = t + e;i = i > this._length ? this._length : i;var n = new Int16Array(this._d_.buffer.slice(t, i));return this._pos_ = i, n;
    }, e.getFloat32 = function () {
      if (this._pos_ + 4 > this._length) throw "getFloat32 error - Out of bounds";var t = this._d_.getFloat32(this._pos_, this._xd_);return this._pos_ += 4, t;
    }, e.getFloat64 = function () {
      if (this._pos_ + 8 > this._length) throw "getFloat64 error - Out of bounds";var t = this._d_.getFloat64(this._pos_, this._xd_);return this._pos_ += 8, t;
    }, e.writeFloat32 = function (t) {
      this.ensureWrite(this._pos_ + 4), this._d_.setFloat32(this._pos_, t, this._xd_), this._pos_ += 4;
    }, e.writeFloat64 = function (t) {
      this.ensureWrite(this._pos_ + 8), this._d_.setFloat64(this._pos_, t, this._xd_), this._pos_ += 8;
    }, e.getInt32 = function () {
      if (this._pos_ + 4 > this._length) throw "getInt32 error - Out of bounds";var t = this._d_.getInt32(this._pos_, this._xd_);return this._pos_ += 4, t;
    }, e.getUint32 = function () {
      if (this._pos_ + 4 > this._length) throw "getUint32 error - Out of bounds";var t = this._d_.getUint32(this._pos_, this._xd_);return this._pos_ += 4, t;
    }, e.writeInt32 = function (t) {
      this.ensureWrite(this._pos_ + 4), this._d_.setInt32(this._pos_, t, this._xd_), this._pos_ += 4;
    }, e.writeUint32 = function (t) {
      this.ensureWrite(this._pos_ + 4), this._d_.setUint32(this._pos_, t, this._xd_), this._pos_ += 4;
    }, e.getInt16 = function () {
      if (this._pos_ + 2 > this._length) throw "getInt16 error - Out of bounds";var t = this._d_.getInt16(this._pos_, this._xd_);return this._pos_ += 2, t;
    }, e.getUint16 = function () {
      if (this._pos_ + 2 > this._length) throw "getUint16 error - Out of bounds";var t = this._d_.getUint16(this._pos_, this._xd_);return this._pos_ += 2, t;
    }, e.writeUint16 = function (t) {
      this.ensureWrite(this._pos_ + 2), this._d_.setUint16(this._pos_, t, this._xd_), this._pos_ += 2;
    }, e.writeInt16 = function (t) {
      this.ensureWrite(this._pos_ + 2), this._d_.setInt16(this._pos_, t, this._xd_), this._pos_ += 2;
    }, e.getUint8 = function () {
      if (this._pos_ + 1 > this._length) throw "getUint8 error - Out of bounds";return this._d_.getUint8(this._pos_++);
    }, e.writeUint8 = function (t) {
      this.ensureWrite(this._pos_ + 1), this._d_.setUint8(this._pos_, t), this._pos_++;
    }, e._getUInt8 = function (t) {
      return this._d_.getUint8(t);
    }, e._getUint16 = function (t) {
      return this._d_.getUint16(t, this._xd_);
    }, e._getMatrix = function () {
      return new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());
    }, e.rUTF = function (t) {
      for (var e = "", i = this._pos_ + t, n = 0, s = String.fromCharCode, r = this._u8d_; this._pos_ < i;) {
        (n = r[this._pos_++]) < 128 ? 0 != n && (e += s(n)) : e += s(n < 224 ? (63 & n) << 6 | 127 & r[this._pos_++] : n < 240 ? (31 & n) << 12 | (127 & r[this._pos_++]) << 6 | 127 & r[this._pos_++] : (15 & n) << 18 | (127 & r[this._pos_++]) << 12 | r[this._pos_++] << 6 & 127 | 127 & r[this._pos_++]), 0;
      }return e;
    }, e.getCustomString = function (t) {
      for (var e = "", i = 0, n = 0, s = String.fromCharCode, r = this._u8d_; t > 0;) {
        if ((n = r[this._pos_]) < 128) e += s(n), this._pos_++, t--;else for (i = n - 128, this._pos_++, t -= i; i > 0;) {
          n = r[this._pos_++], e += s(r[this._pos_++] << 8 | n), i--;
        }
      }return e;
    }, e.clear = function () {
      this._pos_ = 0, this.length = 0;
    }, e.__getBuffer = function () {
      return this._d_.buffer;
    }, e.writeUTFBytes = function (t) {
      for (var e = 0, i = (t += "").length; e < i; e++) {
        var n = t.charCodeAt(e);n <= 127 ? this.writeByte(n) : n <= 2047 ? (this.ensureWrite(this._pos_ + 2), this._u8d_.set([192 | n >> 6, 128 | 63 & n], this._pos_), this._pos_ += 2) : n <= 65535 ? (this.ensureWrite(this._pos_ + 3), this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4), this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_), this._pos_ += 4);
      }
    }, e.writeUTFString = function (t) {
      var e = this.pos;this.writeUint16(1), this.writeUTFBytes(t);var i = this.pos - e - 2;if (i >= 65536) throw "writeUTFString byte len more than 65536";this._d_.setUint16(e, i, this._xd_);
    }, e.readUTFString = function () {
      return this.readUTFBytes(this.getUint16());
    }, e.getUTFString = function () {
      return this.readUTFString();
    }, e.readUTFBytes = function (t) {
      if (void 0 === t && (t = -1), 0 == t) return "";var e = this.bytesAvailable;if (t > e) throw "readUTFBytes error - Out of bounds";return t = t > 0 ? t : e, this.rUTF(t);
    }, e.getUTFBytes = function (t) {
      return void 0 === t && (t = -1), this.readUTFBytes(t);
    }, e.writeByte = function (t) {
      this.ensureWrite(this._pos_ + 1), this._d_.setInt8(this._pos_, t), this._pos_ += 1;
    }, e.readByte = function () {
      if (this._pos_ + 1 > this._length) throw "readByte error - Out of bounds";return this._d_.getInt8(this._pos_++);
    }, e.getByte = function () {
      return this.readByte();
    }, e.ensureWrite = function (t) {
      this._length < t && (this._length = t), this._allocated_ < t && (this.length = t);
    }, e.writeArrayBuffer = function (t, e, i) {
      if (void 0 === e && (e = 0), void 0 === i && (i = 0), e < 0 || i < 0) throw "writeArrayBuffer error - Out of bounds";0 == i && (i = t.byteLength - e), this.ensureWrite(this._pos_ + i);var n = new Uint8Array(t);this._u8d_.set(n.subarray(e, e + i), this._pos_), this._pos_ += i;
    }, __getset(0, e, "buffer", function () {
      var t = this._d_.buffer;return t.byteLength == this.length ? t : t.slice(0, this.length);
    }), __getset(0, e, "endian", function () {
      return this._xd_ ? "littleEndian" : "bigEndian";
    }, function (t) {
      this._xd_ = "littleEndian" == t;
    }), __getset(0, e, "length", function () {
      return this._length;
    }, function (t) {
      this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t), this._length = t;
    }), __getset(0, e, "pos", function () {
      return this._pos_;
    }, function (t) {
      this._pos_ = t;
    }), __getset(0, e, "bytesAvailable", function () {
      return this._length - this._pos_;
    }), t.getSystemEndian = function () {
      if (!t._sysEndian) {
        var e = new ArrayBuffer(2);new DataView(e).setInt16(0, 256, !0), t._sysEndian = 256 === new Int16Array(e)[0] ? "littleEndian" : "bigEndian";
      }return t._sysEndian;
    }, t.BIG_ENDIAN = "bigEndian", t.LITTLE_ENDIAN = "littleEndian", t._sysEndian = null, t;
  }(),
      CacheManager = function () {
    function t() {}return __class(t, "laya.utils.CacheManager"), t.regCacheByFunction = function (e, i) {
      t.unRegCacheByFunction(e, i);var n;n = { tryDispose: e, getCacheList: i }, t._cacheList.push(n);
    }, t.unRegCacheByFunction = function (e, i) {
      var n = 0,
          s = 0;for (s = t._cacheList.length, n = 0; n < s; n++) {
        if (t._cacheList[n].tryDispose == e && t._cacheList[n].getCacheList == i) return void t._cacheList.splice(n, 1);
      }
    }, t.forceDispose = function () {
      var e = 0,
          i = t._cacheList.length;for (e = 0; e < i; e++) {
        t._cacheList[e].tryDispose(!0);
      }
    }, t.beginCheck = function (e) {
      void 0 === e && (e = 15e3), Laya.timer.loop(e, null, t._checkLoop);
    }, t.stopCheck = function () {
      Laya.timer.clear(null, t._checkLoop);
    }, t._checkLoop = function () {
      var e = t._cacheList;if (!(e.length < 1)) {
        var i = Browser.now(),
            n = 0,
            s = 0;for (s = n = e.length; n > 0 && (t._index++, t._index = t._index % s, e[t._index].tryDispose(!1), !(Browser.now() - i > t.loopTimeLimit));) {
          n--;
        }
      }
    }, t.loopTimeLimit = 2, t._cacheList = [], t._index = 0, t;
  }(),
      ClassUtils = function () {
    function t() {}return __class(t, "laya.utils.ClassUtils"), t.regClass = function (e, i) {
      t._classMap[e] = i;
    }, t.getRegClass = function (e) {
      return t._classMap[e];
    }, t.getInstance = function (e) {
      var i = t.getClass(e);return i ? new i() : (console.warn("[error] Undefined class:", e), null);
    }, t.createByJson = function (e, i, n, s, r) {
      "string" == typeof e && (e = JSON.parse(e));var a = e.props;if (!i && !(i = r ? r.runWith(e) : t.getInstance(a.runtime || e.type))) return null;var o = e.child;if (o) for (var h = 0, l = o.length; h < l; h++) {
        var u = o[h];if ("render" !== u.props.name && "render" !== u.props.renderType || !i._$set_itemRender) {
          if ("Graphic" == u.type) t.addGraphicsToSprite(u, i);else if (t.isDrawType(u.type)) t.addGraphicToSprite(u, i, !0);else {
            var c = t.createByJson(u, null, n, s, r);"Script" == u.type ? c.hasOwnProperty("owner") ? c.owner = i : c.hasOwnProperty("target") && (c.target = i) : "mask" == u.props.renderType ? i.mask = c : i.addChild(c);
          }
        } else i.itemRender = u;
      }if (a) for (var _ in a) {
        var d = a[_];"var" === _ && n ? n[d] = i : d instanceof Array && "function" == typeof i[_] ? i[_].apply(i, d) : i[_] = d;
      }return s && e.customProps && s.runWith([i, e]), i.created && i.created(), i;
    }, t.addGraphicsToSprite = function (e, i) {
      var n;if ((n = e.child) && !(n.length < 1)) {
        var s;s = t._getGraphicsFromSprite(e, i);var r = 0,
            a = 0;e.props && (r = t._getObjVar(e.props, "x", 0), a = t._getObjVar(e.props, "y", 0)), 0 != r && 0 != a && s.translate(r, a);var o = 0,
            h = 0;for (h = n.length, o = 0; o < h; o++) {
          t._addGraphicToGraphics(n[o], s);
        }0 != r && 0 != a && s.translate(-r, -a);
      }
    }, t.addGraphicToSprite = function (e, i, n) {
      void 0 === n && (n = !1);var s;s = n ? t._getGraphicsFromSprite(e, i) : i.graphics, t._addGraphicToGraphics(e, s);
    }, t._getGraphicsFromSprite = function (t, e) {
      var i;if (!t || !t.props) return e.graphics;var n;switch (n = t.props.renderType) {case "hit":case "unHit":
          var s;e.hitArea || (e.hitArea = new HitArea()), (s = e.hitArea)[n] || (s[n] = new Graphics()), i = s[n];}return i || (i = e.graphics), i;
    }, t._getTransformData = function (e) {
      var i;(e.hasOwnProperty("pivotX") || e.hasOwnProperty("pivotY")) && (i = i || new Matrix()).translate(-t._getObjVar(e, "pivotX", 0), -t._getObjVar(e, "pivotY", 0));var n = t._getObjVar(e, "scaleX", 1),
          s = t._getObjVar(e, "scaleY", 1),
          r = t._getObjVar(e, "rotation", 0);t._getObjVar(e, "skewX", 0), t._getObjVar(e, "skewY", 0);return 1 == n && 1 == s && 0 == r || ((i = i || new Matrix()).scale(n, s), i.rotate(.0174532922222222 * r)), i;
    }, t._addGraphicToGraphics = function (e, i) {
      var n;if (n = e.props) {
        var s;if (s = t.DrawTypeDic[e.type]) {
          var r;r = i;var a,
              o = t._getParams(n, s[1], s[2], s[3]);((a = t._tM) || 1 != t._alpha) && (r.save(), a && r.transform(a), 1 != t._alpha && r.alpha(t._alpha)), r[s[0]].apply(r, o), (a || 1 != t._alpha) && r.restore();
        }
      }
    }, t._adptLineData = function (t) {
      return t[2] = parseFloat(t[0]) + parseFloat(t[2]), t[3] = parseFloat(t[1]) + parseFloat(t[3]), t;
    }, t._adptTextureData = function (t) {
      return t[0] = Loader.getRes(t[0]), t;
    }, t._adptLinesData = function (e) {
      return e[2] = t._getPointListByStr(e[2]), e;
    }, t.isDrawType = function (e) {
      return "Image" != e && t.DrawTypeDic.hasOwnProperty(e);
    }, t._getParams = function (e, i, n, s) {
      void 0 === n && (n = 0);var r;(r = t._temParam).length = i.length;var a = 0,
          o = 0;for (o = i.length, a = 0; a < o; a++) {
        r[a] = t._getObjVar(e, i[a][0], i[a][1]);
      }t._alpha = t._getObjVar(e, "alpha", 1);var h;return (h = t._getTransformData(e)) ? (n || (n = 0), h.translate(r[n], r[n + 1]), r[n] = r[n + 1] = 0, t._tM = h) : t._tM = null, s && t[s] && (r = t[s](r)), r;
    }, t._getPointListByStr = function (t) {
      var e,
          i = 0,
          n = 0;for (n = (e = t.split(",")).length, i = 0; i < n; i++) {
        e[i] = parseFloat(e[i]);
      }return e;
    }, t._getObjVar = function (t, e, i) {
      return t.hasOwnProperty(e) ? t[e] : i;
    }, t._temParam = [], t.getClass = function (e) {
      var i = t._classMap[e] || e;return "string" == typeof i ? Laya.__classmap[i] : i;
    }, t._tM = null, t._alpha = NaN, __static(t, ["DrawTypeDic", function () {
      return this.DrawTypeDic = { Rect: ["drawRect", [["x", 0], ["y", 0], ["width", 0], ["height", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Circle: ["drawCircle", [["x", 0], ["y", 0], ["radius", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Pie: ["drawPie", [["x", 0], ["y", 0], ["radius", 0], ["startAngle", 0], ["endAngle", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]], Image: ["drawTexture", [["x", 0], ["y", 0], ["width", 0], ["height", 0]]], Texture: ["drawTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0]], 1, "_adptTextureData"], FillTexture: ["fillTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0], ["repeat", null]], 1, "_adptTextureData"], FillText: ["fillText", [["text", ""], ["x", 0], ["y", 0], ["font", null], ["color", null], ["textAlign", null]], 1], Line: ["drawLine", [["x", 0], ["y", 0], ["toX", 0], ["toY", 0], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLineData"], Lines: ["drawLines", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"], Curves: ["drawCurves", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"], Poly: ["drawPoly", [["x", 0], ["y", 0], ["points", ""], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]], 0, "_adptLinesData"] };
    }, "_classMap", function () {
      return this._classMap = { Sprite: "laya.display.Sprite", Text: "laya.display.Text", Animation: "laya.display.Animation", Skeleton: "laya.ani.bone.Skeleton", Particle2D: "laya.particle.Particle2D", div: "laya.html.dom.HTMLDivElement", p: "laya.html.dom.HTMLElement", img: "laya.html.dom.HTMLImageElement", span: "laya.html.dom.HTMLElement", br: "laya.html.dom.HTMLBrElement", style: "laya.html.dom.HTMLStyleElement", font: "laya.html.dom.HTMLElement", a: "laya.html.dom.HTMLElement", "#text": "laya.html.dom.HTMLElement" };
    }]), t;
  }(),
      Color = function () {
    function t(e) {
      if (this._color = [], "string" == typeof e) {
        this.strColor = e, null === e && (e = "#000000"), "#" == e.charAt(0) && (e = e.substr(1));var i = e.length;if (3 == i || 4 == i) {
          for (var n = "", s = 0; s < i; s++) {
            n += e[s] + e[s];
          }e = n;
        }var r = this.numColor = parseInt(e, 16);if (8 == e.length) return void (this._color = [parseInt(e.substr(0, 2), 16) / 255, ((16711680 & r) >> 16) / 255, ((65280 & r) >> 8) / 255, (255 & r) / 255]);
      } else r = this.numColor = e, this.strColor = Utils.toHexColor(r);this._color = [((16711680 & r) >> 16) / 255, ((65280 & r) >> 8) / 255, (255 & r) / 255, 1], this._color.__id = ++t._COLODID;
    }return __class(t, "laya.utils.Color"), t._initDefault = function () {
      t._DEFAULT = {};for (var e in t._COLOR_MAP) {
        t._SAVE[e] = t._DEFAULT[e] = new t(t._COLOR_MAP[e]);
      }return t._DEFAULT;
    }, t._initSaveMap = function () {
      t._SAVE_SIZE = 0, t._SAVE = {};for (var e in t._DEFAULT) {
        t._SAVE[e] = t._DEFAULT[e];
      }
    }, t.create = function (e) {
      var i = t._SAVE[e + ""];return null != i ? i : (t._SAVE_SIZE < 1e3 || t._initSaveMap(), t._SAVE[e + ""] = new t(e));
    }, t._SAVE = {}, t._SAVE_SIZE = 0, t._COLODID = 1, __static(t, ["_COLOR_MAP", function () {
      return this._COLOR_MAP = { white: "#FFFFFF", red: "#FF0000", green: "#00FF00", blue: "#0000FF", black: "#000000", yellow: "#FFFF00", gray: "#AAAAAA" };
    }, "_DEFAULT", function () {
      return this._DEFAULT = t._initDefault();
    }]), t;
  }(),
      Dictionary = function () {
    function t() {
      this._values = [], this._keys = [];
    }__class(t, "laya.utils.Dictionary");var e = t.prototype;return e.set = function (t, e) {
      var i = this.indexOf(t);i >= 0 ? this._values[i] = e : (this._keys.push(t), this._values.push(e));
    }, e.indexOf = function (t) {
      var e = this._keys.indexOf(t);return e >= 0 ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t, this._keys.indexOf(t));
    }, e.get = function (t) {
      var e = this.indexOf(t);return e < 0 ? null : this._values[e];
    }, e.remove = function (t) {
      var e = this.indexOf(t);return e >= 0 && (this._keys.splice(e, 1), this._values.splice(e, 1), !0);
    }, e.clear = function () {
      this._values.length = 0, this._keys.length = 0;
    }, __getset(0, e, "values", function () {
      return this._values;
    }), __getset(0, e, "keys", function () {
      return this._keys;
    }), t;
  }(),
      Dragging = function () {
    function t() {
      this.ratio = .92, this.maxOffset = 60, this._dragging = !1, this._clickOnly = !0;
    }__class(t, "laya.utils.Dragging");var e = t.prototype;return e.start = function (t, e, i, n, s, r, a, o) {
      void 0 === o && (o = .92), this.clearTimer(), this.target = t, this.area = e, this.hasInertia = i, this.elasticDistance = e ? n : 0, this.elasticBackTime = s, this.data = r, this._disableMouseEvent = a, this.ratio = o, 1 != t.globalScaleX || 1 != t.globalScaleY ? this._parent = t.parent : this._parent = Laya.stage, this._clickOnly = !0, this._dragging = !0, this._elasticRateX = this._elasticRateY = 1, this._lastX = this._parent.mouseX, this._lastY = this._parent.mouseY, Laya.stage.on("mouseup", this, this.onStageMouseUp), Laya.stage.on("mouseout", this, this.onStageMouseUp), Laya.timer.frameLoop(1, this, this.loop);
    }, e.clearTimer = function () {
      Laya.timer.clear(this, this.loop), Laya.timer.clear(this, this.tweenMove), this._tween && (this._tween.recover(), this._tween = null);
    }, e.stop = function () {
      this._dragging && (MouseManager.instance.disableMouseEvent = !1, Laya.stage.off("mouseup", this, this.onStageMouseUp), Laya.stage.off("mouseout", this, this.onStageMouseUp), this._dragging = !1, this.target && this.area && this.backToArea(), this.clear());
    }, e.loop = function () {
      var t = this._parent.getMousePoint(),
          e = t.x,
          i = t.y,
          n = e - this._lastX,
          s = i - this._lastY;if (this._clickOnly) {
        if (!(Math.abs(n * Laya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(s * Laya.stage._canvasTransform.getScaleY()) > 1)) return;this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0, this.target.event("dragstart", this.data), MouseManager.instance.disableMouseEvent = this._disableMouseEvent, this.target._set$P("$_MOUSEDOWN", !1);
      } else this._offsets.push(n, s);0 === n && 0 === s || (this._lastX = e, this._lastY = i, this.target.x += n * this._elasticRateX, this.target.y += s * this._elasticRateY, this.area && this.checkArea(), this.target.event("dragmove", this.data));
    }, e.checkArea = function () {
      if (this.elasticDistance <= 0) this.backToArea();else {
        if (this.target.x < this.area.x) var t = this.area.x - this.target.x;else t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance), this.target.y < this.area.y) var e = this.area.y - this.target.y;else e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
      }
    }, e.backToArea = function () {
      this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width), this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height);
    }, e.onStageMouseUp = function (t) {
      if (MouseManager.instance.disableMouseEvent = !1, Laya.stage.off("mouseup", this, this.onStageMouseUp), Laya.stage.off("mouseout", this, this.onStageMouseUp), Laya.timer.clear(this, this.loop), !this._clickOnly && this.target) if (this.hasInertia) {
        this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY), this._offsetX = this._offsetY = 0;for (var e = this._offsets.length, i = Math.min(e, 6), n = this._offsets.length - i, s = e - 1; s > n; s--) {
          this._offsetY += this._offsets[s--], this._offsetX += this._offsets[s];
        }this._offsetX = this._offsetX / i * 2, this._offsetY = this._offsetY / i * 2, Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset), Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset), Laya.timer.frameLoop(1, this, this.tweenMove);
      } else this.elasticDistance > 0 ? this.checkElastic() : this.clear();
    }, e.checkElastic = function () {
      var t = NaN,
          e = NaN;if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width), this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height), isNaN(t) && isNaN(e)) this.clear();else {
        var i = {};isNaN(t) || (i.x = t), isNaN(e) || (i.y = e), this._tween = Tween.to(this.target, i, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, !1, !1);
      }
    }, e.tweenMove = function () {
      this._offsetX *= this.ratio * this._elasticRateX, this._offsetY *= this.ratio * this._elasticRateY, this.target.x += this._offsetX, this.target.y += this._offsetY, this.area && this.checkArea(), this.target.event("dragmove", this.data), (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (Laya.timer.clear(this, this.tweenMove), this.elasticDistance > 0 ? this.checkElastic() : this.clear());
    }, e.clear = function () {
      if (this.target) {
        this.clearTimer();var t = this.target;this.target = null, this._parent = null, t.event("dragend", this.data);
      }
    }, t;
  }(),
      Ease = function () {
    function t() {}return __class(t, "laya.utils.Ease"), t.linearNone = function (t, e, i, n) {
      return i * t / n + e;
    }, t.linearIn = function (t, e, i, n) {
      return i * t / n + e;
    }, t.linearInOut = function (t, e, i, n) {
      return i * t / n + e;
    }, t.linearOut = function (t, e, i, n) {
      return i * t / n + e;
    }, t.bounceIn = function (e, i, n, s) {
      return n - t.bounceOut(s - e, 0, n, s) + i;
    }, t.bounceInOut = function (e, i, n, s) {
      return e < .5 * s ? .5 * t.bounceIn(2 * e, 0, n, s) + i : .5 * t.bounceOut(2 * e - s, 0, n, s) + .5 * n + i;
    }, t.bounceOut = function (t, e, i, n) {
      return (t /= n) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
    }, t.backIn = function (t, e, i, n, s) {
      return void 0 === s && (s = 1.70158), i * (t /= n) * t * ((s + 1) * t - s) + e;
    }, t.backInOut = function (t, e, i, n, s) {
      return void 0 === s && (s = 1.70158), (t /= .5 * n) < 1 ? .5 * i * (t * t * ((1 + (s *= 1.525)) * t - s)) + e : i / 2 * ((t -= 2) * t * ((1 + (s *= 1.525)) * t + s) + 2) + e;
    }, t.backOut = function (t, e, i, n, s) {
      return void 0 === s && (s = 1.70158), i * ((t = t / n - 1) * t * ((s + 1) * t + s) + 1) + e;
    }, t.elasticIn = function (e, i, n, s, r, a) {
      void 0 === r && (r = 0), void 0 === a && (a = 0);var o;return 0 == e ? i : 1 == (e /= s) ? i + n : (a || (a = .3 * s), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n, o = a / 4) : o = a / t.PI2 * Math.asin(n / r), -r * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) + i);
    }, t.elasticInOut = function (e, i, n, s, r, a) {
      void 0 === r && (r = 0), void 0 === a && (a = 0);var o;return 0 == e ? i : 2 == (e /= .5 * s) ? i + n : (a || (a = s * (.3 * 1.5)), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n, o = a / 4) : o = a / t.PI2 * Math.asin(n / r), e < 1 ? r * Math.pow(2, 10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) * -.5 + i : r * Math.pow(2, -10 * (e -= 1)) * Math.sin((e * s - o) * t.PI2 / a) * .5 + n + i);
    }, t.elasticOut = function (e, i, n, s, r, a) {
      void 0 === r && (r = 0), void 0 === a && (a = 0);var o;return 0 == e ? i : 1 == (e /= s) ? i + n : (a || (a = .3 * s), !r || n > 0 && r < n || n < 0 && r < -n ? (r = n, o = a / 4) : o = a / t.PI2 * Math.asin(n / r), r * Math.pow(2, -10 * e) * Math.sin((e * s - o) * t.PI2 / a) + n + i);
    }, t.strongIn = function (t, e, i, n) {
      return i * (t /= n) * t * t * t * t + e;
    }, t.strongInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
    }, t.strongOut = function (t, e, i, n) {
      return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
    }, t.sineInOut = function (t, e, i, n) {
      return .5 * -i * (Math.cos(Math.PI * t / n) - 1) + e;
    }, t.sineIn = function (e, i, n, s) {
      return -n * Math.cos(e / s * t.HALF_PI) + n + i;
    }, t.sineOut = function (e, i, n, s) {
      return n * Math.sin(e / s * t.HALF_PI) + i;
    }, t.quintIn = function (t, e, i, n) {
      return i * (t /= n) * t * t * t * t + e;
    }, t.quintInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
    }, t.quintOut = function (t, e, i, n) {
      return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
    }, t.quartIn = function (t, e, i, n) {
      return i * (t /= n) * t * t * t + e;
    }, t.quartInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e;
    }, t.quartOut = function (t, e, i, n) {
      return -i * ((t = t / n - 1) * t * t * t - 1) + e;
    }, t.cubicIn = function (t, e, i, n) {
      return i * (t /= n) * t * t + e;
    }, t.cubicInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e;
    }, t.cubicOut = function (t, e, i, n) {
      return i * ((t = t / n - 1) * t * t + 1) + e;
    }, t.quadIn = function (t, e, i, n) {
      return i * (t /= n) * t + e;
    }, t.quadInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e;
    }, t.quadOut = function (t, e, i, n) {
      return -i * (t /= n) * (t - 2) + e;
    }, t.expoIn = function (t, e, i, n) {
      return 0 == t ? e : i * Math.pow(2, 10 * (t / n - 1)) + e - .001 * i;
    }, t.expoInOut = function (t, e, i, n) {
      return 0 == t ? e : t == n ? e + i : (t /= .5 * n) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e;
    }, t.expoOut = function (t, e, i, n) {
      return t == n ? e + i : i * (1 - Math.pow(2, -10 * t / n)) + e;
    }, t.circIn = function (t, e, i, n) {
      return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e;
    }, t.circInOut = function (t, e, i, n) {
      return (t /= .5 * n) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
    }, t.circOut = function (t, e, i, n) {
      return i * Math.sqrt(1 - (t = t / n - 1) * t) + e;
    }, __static(t, ["HALF_PI", function () {
      return this.HALF_PI = .5 * Math.PI;
    }, "PI2", function () {
      return this.PI2 = 2 * Math.PI;
    }]), t;
  }(),
      HitArea = function () {
    function t() {
      this._hit = null, this._unHit = null;
    }__class(t, "laya.utils.HitArea");var e = t.prototype;return e.isHit = function (e, i) {
      return !!t.isHitGraphic(e, i, this.hit) && !t.isHitGraphic(e, i, this.unHit);
    }, e.contains = function (t, e) {
      return this.isHit(t, e);
    }, __getset(0, e, "hit", function () {
      return this._hit || (this._hit = new Graphics()), this._hit;
    }, function (t) {
      this._hit = t;
    }), __getset(0, e, "unHit", function () {
      return this._unHit || (this._unHit = new Graphics()), this._unHit;
    }, function (t) {
      this._unHit = t;
    }), t.isHitGraphic = function (e, i, n) {
      if (!n) return !1;var s;if (!(s = n.cmds) && n._one && ((s = t._cmds).length = 1, s[0] = n._one), !s) return !1;var r = 0,
          a = 0;a = s.length;var o;for (r = 0; r < a; r++) {
        if (o = s[r]) {
          var h = Render._context;switch (o.callee) {case h._translate:case 6:
              e -= o[0], i -= o[1];}if (t.isHitCmd(e, i, o)) return !0;
        }
      }return !1;
    }, t.isHitCmd = function (e, i, n) {
      if (!n) return !1;var s = Render._context,
          r = !1;switch (n.callee) {case s._drawRect:case 13:
          t._rec.setTo(n[0], n[1], n[2], n[3]), r = t._rec.contains(e, i);break;case s._drawCircle:case s._fillCircle:case 14:
          r = (e -= n[0]) * e + (i -= n[1]) * i < n[2] * n[2];break;case s._drawPoly:case 18:
          e -= n[0], i -= n[1], r = t.ptInPolygon(e, i, n[2]);}return r;
    }, t.ptInPolygon = function (e, i, n) {
      var s;(s = t._ptPoint).setTo(e, i);var r = 0,
          a = NaN,
          o = NaN,
          h = NaN,
          l = NaN,
          u = 0;u = n.length;for (var c = 0; c < u; c += 2) {
        if (a = n[c], o = n[c + 1], h = n[(c + 2) % u], l = n[(c + 3) % u], o != l && !(s.y < Math.min(o, l) || s.y >= Math.max(o, l))) {
          (s.y - o) * (h - a) / (l - o) + a > s.x && r++;
        }
      }return r % 2 == 1;
    }, t._cmds = [], __static(t, ["_rec", function () {
      return this._rec = new Rectangle();
    }, "_ptPoint", function () {
      return this._ptPoint = new Point();
    }]), t;
  }(),
      HTMLChar = function () {
    function t(e, i, n, s) {
      this.char = e, this.charNum = e.charCodeAt(0), this._x = this._y = 0, this.width = i, this.height = n, this.style = s, this.isWord = !t._isWordRegExp.test(e);
    }__class(t, "laya.utils.HTMLChar");var e = t.prototype;return Laya.imps(e, { "laya.display.ILayout": !0 }), e.setSprite = function (t) {
      this._sprite = t;
    }, e.getSprite = function () {
      return this._sprite;
    }, e._isChar = function () {
      return !0;
    }, e._getCSSStyle = function () {
      return this.style;
    }, __getset(0, e, "width", function () {
      return this._w;
    }, function (t) {
      this._w = t;
    }), __getset(0, e, "x", function () {
      return this._x;
    }, function (t) {
      this._sprite && (this._sprite.x = t), this._x = t;
    }), __getset(0, e, "y", function () {
      return this._y;
    }, function (t) {
      this._sprite && (this._sprite.y = t), this._y = t;
    }), __getset(0, e, "height", function () {
      return this._h;
    }, function (t) {
      this._h = t;
    }), __static(t, ["_isWordRegExp", function () {
      return this._isWordRegExp = new RegExp("[\\w.]", "");
    }]), t;
  }(),
      Log = function () {
    function t() {}return __class(t, "laya.utils.Log"), t.enable = function () {
      t._logdiv || (t._logdiv = Browser.window.document.createElement("div"), Browser.window.document.body.appendChild(t._logdiv), t._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;");
    }, t.toggle = function () {
      var e = t._logdiv.style;"1px" == e.width ? e.width = e.height = "50%" : e.width = e.height = "1px";
    }, t.print = function (e) {
      t._logdiv && (t._count >= t.maxCount && t.clear(), t._count++, t._logdiv.innerText += e + "\n", t._logdiv.scrollTop = t._logdiv.scrollHeight);
    }, t.clear = function () {
      t._logdiv.innerText = "", t._count = 0;
    }, t._logdiv = null, t._count = 0, t.maxCount = 20, t;
  }(),
      Mouse = function () {
    function t() {}return __class(t, "laya.utils.Mouse"), __getset(1, t, "cursor", function () {
      return t._style.cursor;
    }, function (e) {
      t._style.cursor = e;
    }), t.hide = function () {
      "none" != t.cursor && (t._preCursor = t.cursor, t.cursor = "none");
    }, t.show = function () {
      "none" == t.cursor && (t.cursor = t._preCursor ? t._preCursor : "auto");
    }, t._preCursor = null, __static(t, ["_style", function () {
      return this._style = Browser.document.body.style;
    }]), t;
  }(),
      Pool = function () {
    function t() {}return __class(t, "laya.utils.Pool"), t.getPoolBySign = function (e) {
      return t._poolDic[e] || (t._poolDic[e] = []);
    }, t.clearBySign = function (e) {
      t._poolDic[e] && (t._poolDic[e].length = 0);
    }, t.recover = function (e, i) {
      i.__InPool || (i.__InPool = !0, t.getPoolBySign(e).push(i));
    }, t.getItemByClass = function (e, i) {
      var n = t.getPoolBySign(e),
          s = n.length ? n.pop() : new i();return s.__InPool = !1, s;
    }, t.getItemByCreateFun = function (e, i) {
      var n = t.getPoolBySign(e),
          s = n.length ? n.pop() : i();return s.__InPool = !1, s;
    }, t.getItem = function (e) {
      var i = t.getPoolBySign(e),
          n = i.length ? i.pop() : null;return n && (n.__InPool = !1), n;
    }, t._poolDic = {}, t.InPoolSign = "__InPool", t;
  }(),
      PoolCache = function () {
    function t() {
      this.sign = null, this.maxCount = 1e3;
    }__class(t, "laya.utils.PoolCache");var e = t.prototype;return e.getCacheList = function () {
      return Pool.getPoolBySign(this.sign);
    }, e.tryDispose = function (t) {
      var e;(e = Pool.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount);
    }, t.addPoolCacheManager = function (e, i) {
      void 0 === i && (i = 100);var n;(n = new t()).sign = e, n.maxCount = i, CacheManager.regCacheByFunction(Utils.bind(n.tryDispose, n), Utils.bind(n.getCacheList, n));
    }, t;
  }(),
      Stat = function () {
    function t() {}return __class(t, "laya.utils.Stat"), __getset(1, t, "onclick", null, function (e) {
      t._sp.on("click", t._sp, e);
    }), t.show = function (e, i) {
      if (void 0 === e && (e = 0), void 0 === i && (i = 0), Render.isConchApp) Browser.window.conch.showFPS && Browser.window.conch.showFPS(e, i);else {
        var n = t._sp,
            s = Browser.pixelRatio;n || (n = new Sprite(), (t._leftText = new Text()).pos(5, 5), t._leftText.color = "#ffffff", n.addChild(t._leftText), (t._txt = new Text()).pos(80 * s, 5), t._txt.color = "#ffffff", n.addChild(t._txt), t._sp = n), n.pos(e, i), t._show = !0, t._fpsData.length = 60, t._view[0] = { title: "FPS(Canvas)", value: "_fpsStr", color: "yellow", units: "int" }, t._view[1] = { title: "Sprite", value: "_spriteStr", color: "white", units: "int" }, t._view[2] = { title: "DrawCall", value: "drawCall", color: "white", units: "int" }, t._view[3] = { title: "CurMem", value: "currentMemorySize", color: "yellow", units: "M" }, Render.isWebGL ? (t._view[4] = { title: "Shader", value: "shaderCall", color: "white", units: "int" }, Render.is3DMode ? (t._view[0].title = "FPS(3D)", t._view[5] = { title: "TriFaces", value: "trianglesFaces", color: "white", units: "int" }, t._view[6] = { title: "treeNodeColl", value: "treeNodeCollision", color: "white", units: "int" }, t._view[7] = { title: "treeSpriteColl", value: "treeSpriteCollision", color: "white", units: "int" }) : (t._view[0].title = "FPS(WebGL)", t._view[5] = { title: "Canvas", value: "_canvasStr", color: "white", units: "int" })) : t._view[4] = { title: "Canvas", value: "_canvasStr", color: "white", units: "int" };for (var r = "", a = 0; a < t._view.length; a++) {
          r += t._view[a].title + "\n";
        }t._leftText.text = r;var o = 138 * s,
            h = s * (12 * t._view.length + 3 * s) + 4;t._txt.fontSize = t._fontSize * s, t._leftText.fontSize = t._fontSize * s, n.size(o, h), n.graphics.clear(), n.graphics.setAlpha(.5), n.graphics.drawRect(0, 0, o, h, "#999999"), n.graphics.setAlpha(1), t.loop(), t.enable();
      }
    }, t.enable = function () {
      Laya.timer.frameLoop(1, t, t.loop);
    }, t.hide = function () {
      t._show = !1, Laya.timer.clear(t, t.loop);
    }, t.clear = function () {
      t.trianglesFaces = t.drawCall = t.shaderCall = t.spriteCount = t.spriteRenderUseCacheCount = t.treeNodeCollision = t.treeSpriteCollision = t.canvasNormal = t.canvasBitmap = t.canvasReCache = 0;
    }, t.loop = function () {
      t._count++;var e = Browser.now();if (!(e - t._timer < 1e3)) {
        var i = t._count;if (t.FPS = Math.round(1e3 * i / (e - t._timer)), t._show) {
          t.trianglesFaces = Math.round(t.trianglesFaces / i), t.drawCall = Math.round(t.drawCall / i) - 2, t.shaderCall = Math.round(t.shaderCall / i) - 4, t.spriteCount = Math.round(t.spriteCount / i) - 4, t.spriteRenderUseCacheCount = Math.round(t.spriteRenderUseCacheCount / i), t.canvasNormal = Math.round(t.canvasNormal / i), t.canvasBitmap = Math.round(t.canvasBitmap / i), t.canvasReCache = Math.ceil(t.canvasReCache / i), t.treeNodeCollision = Math.round(t.treeNodeCollision / i), t.treeSpriteCollision = Math.round(t.treeSpriteCollision / i);var n = t.FPS > 0 ? Math.floor(1e3 / t.FPS).toString() : " ";t._fpsStr = t.FPS + (t.renderSlow ? " slow" : "") + " " + n, t._spriteStr = t.spriteCount + (t.spriteRenderUseCacheCount ? "/" + t.spriteRenderUseCacheCount : ""), t._canvasStr = t.canvasReCache + "/" + t.canvasNormal + "/" + t.canvasBitmap, t.currentMemorySize = ResourceManager.systemResourceManager.memorySize;for (var s = "", r = 0; r < t._view.length; r++) {
            var a = t._view[r],
                o = t[a.value];"M" == a.units && (o = Math.floor(o / 1048576 * 100) / 100 + " M"), "K" == a.units && (o = Math.floor(o / 1024 * 100) / 100 + " K"), s += o + "\n";
          }t._txt.text = s, t.clear();
        }t._count = 0, t._timer = e;
      }
    }, t.FPS = 0, t.loopCount = 0, t.shaderCall = 0, t.drawCall = 0, t.trianglesFaces = 0, t.spriteCount = 0, t.spriteRenderUseCacheCount = 0, t.treeNodeCollision = 0, t.treeSpriteCollision = 0, t.canvasNormal = 0, t.canvasBitmap = 0, t.canvasReCache = 0, t.renderSlow = !1, t.currentMemorySize = 0, t._fpsStr = null, t._canvasStr = null, t._spriteStr = null, t._fpsData = [], t._timer = 0, t._count = 0, t._view = [], t._fontSize = 12, t._txt = null, t._leftText = null, t._sp = null, t._show = !1, t;
  }(),
      StringKey = function () {
    function t() {
      this._strsToID = {}, this._idToStrs = [], this._length = 0;
    }__class(t, "laya.utils.StringKey");var e = t.prototype;return e.add = function (t) {
      var e = this._strsToID[t];return null != e ? e : (this._idToStrs[this._length] = t, this._strsToID[t] = this._length++);
    }, e.getID = function (t) {
      var e = this._strsToID[t];return null == e ? -1 : e;
    }, e.getName = function (t) {
      var e = this._idToStrs[t];return null == e ? void 0 : e;
    }, t;
  }(),
      Timer = function () {
    function t() {
      this._delta = 0, this.scale = 1, this.currFrame = 0, this._mid = 1, this._map = [], this._laters = [], this._handlers = [], this._temp = [], this._count = 0, this.currTimer = Browser.now(), this._lastTimer = Browser.now(), Laya.timer && Laya.timer.frameLoop(1, this, this._update);
    }var e;__class(t, "laya.utils.Timer");var i = t.prototype;return i._update = function () {
      if (this.scale <= 0) this._lastTimer = Browser.now();else {
        var t = this.currFrame = this.currFrame + this.scale,
            e = Browser.now();this._delta = (e - this._lastTimer) * this.scale;var i = this.currTimer = this.currTimer + this._delta;this._lastTimer = e;var n = this._handlers;for (this._count = 0, a = 0, o = n.length; a < o; a++) {
          if (null !== (h = n[a]).method) {
            var s = h.userFrame ? t : i;if (s >= h.exeTime) if (h.repeat) {
              if (h.jumpFrame) for (; s >= h.exeTime;) {
                h.exeTime += h.delay, h.run(!1);
              } else h.exeTime += h.delay, h.run(!1), s > h.exeTime && (h.exeTime += Math.ceil((s - h.exeTime) / h.delay) * h.delay);
            } else h.run(!0);
          } else this._count++;
        }(this._count > 30 || t % 200 == 0) && this._clearHandlers();for (var r = this._laters, a = 0, o = r.length - 1; a <= o; a++) {
          var h = r[a];null !== h.method && (this._map[h.key] = null, h.run(!1)), this._recoverHandler(h), a === o && (o = r.length - 1);
        }r.length = 0;
      }
    }, i._clearHandlers = function () {
      for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
        var n = t[e];null !== n.method ? this._temp.push(n) : this._recoverHandler(n);
      }this._handlers = this._temp, this._temp = t, this._temp.length = 0;
    }, i._recoverHandler = function (e) {
      this._map[e.key] == e && (this._map[e.key] = null), e.clear(), t._pool.push(e);
    }, i._create = function (i, n, s, r, a, o, h) {
      if (!s) return a.apply(r, o), null;if (h) {
        var l = this._getHandler(r, a);if (l) return l.repeat = n, l.userFrame = i, l.delay = s, l.caller = r, l.method = a, l.args = o, l.exeTime = s + (i ? this.currFrame : this.currTimer + Browser.now() - this._lastTimer), l;
      }return l = t._pool.length > 0 ? t._pool.pop() : new e(), l.repeat = n, l.userFrame = i, l.delay = s, l.caller = r, l.method = a, l.args = o, l.exeTime = s + (i ? this.currFrame : this.currTimer + Browser.now() - this._lastTimer) + 1, this._indexHandler(l), this._handlers.push(l), l;
    }, i._indexHandler = function (t) {
      var e = t.caller,
          i = t.method,
          n = e ? e.$_GID || (e.$_GID = Utils.getGID()) : 0,
          s = i.$_TID || (i.$_TID = 1e5 * this._mid++);t.key = n + s, this._map[t.key] = t;
    }, i.once = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this._create(!1, !1, t, e, i, n, s);
    }, i.loop = function (t, e, i, n, s, r) {
      void 0 === s && (s = !0), void 0 === r && (r = !1);var a = this._create(!1, !0, t, e, i, n, s);a && (a.jumpFrame = r);
    }, i.frameOnce = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this._create(!0, !1, t, e, i, n, s);
    }, i.frameLoop = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this._create(!0, !0, t, e, i, n, s);
    }, i.toString = function () {
      return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + t._pool.length;
    }, i.clear = function (t, e) {
      var i = this._getHandler(t, e);i && (this._map[i.key] = null, i.key = 0, i.clear());
    }, i.clearAll = function (t) {
      if (t) for (var e = 0, i = this._handlers.length; e < i; e++) {
        var n = this._handlers[e];n.caller === t && (this._map[n.key] = null, n.key = 0, n.clear());
      }
    }, i._getHandler = function (t, e) {
      var i = t ? t.$_GID || (t.$_GID = Utils.getGID()) : 0,
          n = e.$_TID || (e.$_TID = 1e5 * this._mid++);return this._map[i + n];
    }, i.callLater = function (i, n, s) {
      if (null == this._getHandler(i, n)) {
        if (t._pool.length) var r = t._pool.pop();else r = new e();r.caller = i, r.method = n, r.args = s, this._indexHandler(r), this._laters.push(r);
      }
    }, i.runCallLater = function (t, e) {
      var i = this._getHandler(t, e);i && null != i.method && (this._map[i.key] = null, i.run(!0));
    }, i.runTimer = function (t, e) {
      this.runCallLater(t, e);
    }, __getset(0, i, "delta", function () {
      return this._delta;
    }), t._pool = [], t.__init$ = function () {
      e = function () {
        function t() {
          this.key = 0, this.repeat = !1, this.delay = 0, this.userFrame = !1, this.exeTime = 0, this.caller = null, this.method = null, this.args = null, this.jumpFrame = !1;
        }__class(t, "");var e = t.prototype;return e.clear = function () {
          this.caller = null, this.method = null, this.args = null;
        }, e.run = function (t) {
          var e = this.caller;if (e && e.destroyed) return this.clear();var i = this.method,
              n = this.args;t && this.clear(), null != i && (n ? i.apply(e, n) : i.call(e));
        }, t;
      }();
    }, t;
  }(),
      Tween = function () {
    function t() {
      this.gid = 0;
    }__class(t, "laya.utils.Tween");var e = t.prototype;return e.to = function (t, e, i, n, s, r, a) {
      return void 0 === r && (r = 0), void 0 === a && (a = !1), this._create(t, e, i, n, s, r, a, !0, !1, !0);
    }, e.from = function (t, e, i, n, s, r, a) {
      return void 0 === r && (r = 0), void 0 === a && (a = !1), this._create(t, e, i, n, s, r, a, !1, !1, !0);
    }, e._create = function (e, i, n, s, r, a, o, h, l, u) {
      if (!e) throw new Error("Tween:target is null");this._target = e, this._duration = n, this._ease = s || i.ease || t.easeNone, this._complete = r || i.complete, this._delay = a, this._props = [], this._usedTimer = 0, this._startTimer = Browser.now(), this._usedPool = l, this.update = i.update;var c = e.$_GID || (e.$_GID = Utils.getGID());return t.tweenMap[c] ? (o && t.clearTween(e), t.tweenMap[c].push(this)) : t.tweenMap[c] = [this], u ? a <= 0 ? this.firstStart(e, i, h) : Laya.scaleTimer.once(a, this, this.firstStart, [e, i, h]) : this._initProps(e, i, h), this;
    }, e.firstStart = function (t, e, i) {
      t.destroyed ? this.clear() : (this._initProps(t, e, i), this._beginLoop());
    }, e._initProps = function (t, e, i) {
      for (var n in e) {
        if ("number" == typeof t[n]) {
          var s = i ? t[n] : e[n],
              r = i ? e[n] : t[n];this._props.push([n, s, r - s]), i || (t[n] = s);
        }
      }
    }, e._beginLoop = function () {
      Laya.scaleTimer.frameLoop(1, this, this._doEase);
    }, e._doEase = function () {
      this._updateEase(Browser.now());
    }, e._updateEase = function (e) {
      var i = this._target;if (i) {
        if (i.destroyed) return t.clearTween(i);var n = this._usedTimer = e - this._startTimer - this._delay;if (!(n < 0)) {
          if (n >= this._duration) return this.complete();for (var s = n > 0 ? this._ease(n, 0, 1, this._duration) : 0, r = this._props, a = 0, o = r.length; a < o; a++) {
            var h = r[a];i[h[0]] = h[1] + s * h[2];
          }this.update && this.update.run();
        }
      }
    }, e.complete = function () {
      if (this._target) {
        Laya.scaleTimer.runTimer(this, this.firstStart);for (var t = this._target, e = this._props, i = this._complete, n = 0, s = e.length; n < s; n++) {
          var r = e[n];t[r[0]] = r[1] + r[2];
        }this.update && this.update.run(), this.clear(), i && i.run();
      }
    }, e.pause = function () {
      Laya.scaleTimer.clear(this, this._beginLoop), Laya.scaleTimer.clear(this, this._doEase);
    }, e.setStartTime = function (t) {
      this._startTimer = t;
    }, e.clear = function () {
      this._target && (this._remove(), this._clear());
    }, e._clear = function () {
      this.pause(), Laya.scaleTimer.clear(this, this.firstStart), this._complete = null, this._target = null, this._ease = null, this._props = null, this._usedPool && (this.update = null, Pool.recover("tween", this));
    }, e.recover = function () {
      this._usedPool = !0, this._clear();
    }, e._remove = function () {
      var e = t.tweenMap[this._target.$_GID];if (e) for (var i = 0, n = e.length; i < n; i++) {
        if (e[i] === this) {
          e.splice(i, 1);break;
        }
      }
    }, e.restart = function () {
      this.pause(), this._usedTimer = 0, this._startTimer = Browser.now();for (var t = this._props, e = 0, i = t.length; e < i; e++) {
        var n = t[e];this._target[n[0]] = n[1];
      }Laya.scaleTimer.once(this._delay, this, this._beginLoop);
    }, e.resume = function () {
      this._usedTimer >= this._duration || (this._startTimer = Browser.now() - this._usedTimer - this._delay, this._beginLoop());
    }, __getset(0, e, "progress", null, function (t) {
      var e = t * this._duration;this._startTimer = Browser.now() - this._delay - e;
    }), t.to = function (e, i, n, s, r, a, o, h) {
      return void 0 === a && (a = 0), void 0 === o && (o = !1), void 0 === h && (h = !0), Pool.getItemByClass("tween", t)._create(e, i, n, s, r, a, o, !0, h, !0);
    }, t.from = function (e, i, n, s, r, a, o, h) {
      return void 0 === a && (a = 0), void 0 === o && (o = !1), void 0 === h && (h = !0), Pool.getItemByClass("tween", t)._create(e, i, n, s, r, a, o, !1, h, !0);
    }, t.clearAll = function (e) {
      if (e && e.$_GID) {
        var i = t.tweenMap[e.$_GID];if (i) {
          for (var n = 0, s = i.length; n < s; n++) {
            i[n]._clear();
          }i.length = 0;
        }
      }
    }, t.clear = function (t) {
      t.clear();
    }, t.clearTween = function (e) {
      t.clearAll(e);
    }, t.easeNone = function (t, e, i, n) {
      return i * t / n + e;
    }, t.tweenMap = {}, t;
  }(),
      Utils = function () {
    function t() {}return __class(t, "laya.utils.Utils"), t.toRadian = function (e) {
      return e * t._pi2;
    }, t.toAngle = function (e) {
      return e * t._pi;
    }, t.toHexColor = function (t) {
      if (t < 0 || isNaN(t)) return null;for (var e = t.toString(16); e.length < 6;) {
        e = "0" + e;
      }return "#" + e;
    }, t.getGID = function () {
      return t._gid++;
    }, t.concatArray = function (t, e) {
      if (!e) return t;if (!t) return e;var i = 0,
          n = e.length;for (i = 0; i < n; i++) {
        t.push(e[i]);
      }return t;
    }, t.clearArray = function (t) {
      return t ? (t.length = 0, t) : t;
    }, t.copyArray = function (t, e) {
      if (t || (t = []), !e) return t;t.length = e.length;var i = 0,
          n = e.length;for (i = 0; i < n; i++) {
        t[i] = e[i];
      }return t;
    }, t.getGlobalRecByPoints = function (t, e, i, n, s) {
      var r;r = new Point(e, i), r = t.localToGlobal(r);var a;return a = new Point(n, s), a = t.localToGlobal(a), Rectangle._getWrapRec([r.x, r.y, a.x, a.y]);
    }, t.getGlobalPosAndScale = function (e) {
      return t.getGlobalRecByPoints(e, 0, 0, 1, 1);
    }, t.bind = function (t, e) {
      return t.bind(e);
    }, t.measureText = function (t, e) {
      return RunDriver.measureText(t, e);
    }, t.updateOrder = function (t) {
      if (!t || t.length < 2) return !1;for (var e, i = 1, n = 0, s = t.length, r = NaN; i < s;) {
        for (e = t[n = i], r = t[n]._zOrder; --n > -1 && t[n]._zOrder > r;) {
          t[n + 1] = t[n];
        }t[n + 1] = e, i++;
      }var a = e.parent.conchModel;if (a) if (null != a.updateZOrder) a.updateZOrder();else {
        for (i = 0; i < s; i++) {
          a.removeChild(t[i].conchModel);
        }for (i = 0; i < s; i++) {
          a.addChildAt(t[i].conchModel, i);
        }
      }return !0;
    }, t.transPointList = function (t, e, i) {
      var n = 0,
          s = t.length;for (n = 0; n < s; n += 2) {
        t[n] += e, t[n + 1] += i;
      }
    }, t.parseInt = function (t, e) {
      void 0 === e && (e = 0);var i = Browser.window.parseInt(t, e);return isNaN(i) ? 0 : i;
    }, t.getFileExtension = function (e) {
      t._extReg.lastIndex = e.lastIndexOf(".");var i = t._extReg.exec(e);return i && i.length > 1 ? i[1].toLowerCase() : null;
    }, t.getTransformRelativeToWindow = function (t, e, i) {
      var n = Laya.stage,
          s = laya.utils.Utils.getGlobalPosAndScale(t),
          r = n._canvasTransform.clone(),
          a = r.tx,
          o = r.ty;r.rotate(-Math.PI / 180 * Laya.stage.canvasDegree), r.scale(Laya.stage.clientScaleX, Laya.stage.clientScaleY);var h = Laya.stage.canvasDegree % 180 != 0,
          l = NaN,
          u = NaN;h ? (l = i + s.y, u = e + s.x, l *= r.d, u *= r.a, 90 == Laya.stage.canvasDegree ? (l = a - l, u += o) : (l += a, u = o - u)) : (l = e + s.x, u = i + s.y, l *= r.a, u *= r.d, l += a, u += o);var c = NaN,
          _ = NaN;return h ? (c = r.d * s.height, _ = r.a * s.width) : (c = r.a * s.width, _ = r.d * s.height), { x: l, y: u, scaleX: c, scaleY: _ };
    }, t.fitDOMElementInArea = function (e, i, n, s, r, a) {
      e._fitLayaAirInitialized || (e._fitLayaAirInitialized = !0, e.style.transformOrigin = e.style.webKittransformOrigin = "left top", e.style.position = "absolute");var o = t.getTransformRelativeToWindow(i, n, s);e.style.transform = e.style.webkitTransform = "scale(" + o.scaleX + "," + o.scaleY + ") rotate(" + Laya.stage.canvasDegree + "deg)", e.style.width = r + "px", e.style.height = a + "px", e.style.left = o.x + "px", e.style.top = o.y + "px";
    }, t._gid = 1, t.parseXMLFromString = function (t) {
      var e;if (t = t.replace(/>\s+</g, "><"), (e = new DOMParser().parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors") > -1) throw new Error(e.firstChild.firstChild.textContent);return e;
    }, __static(t, ["_pi", function () {
      return this._pi = 180 / Math.PI;
    }, "_pi2", function () {
      return this._pi2 = Math.PI / 180;
    }, "_extReg", function () {
      return this._extReg = /\.(\w+)\??/g;
    }]), t;
  }(),
      VectorGraphManager = function () {
    function t() {
      this.useDic = {}, this.shapeDic = {}, this.shapeLineDic = {}, this._id = 0, this._checkKey = !1, this._freeIdArray = [], Render.isWebGL && CacheManager.regCacheByFunction(Utils.bind(this.startDispose, this), Utils.bind(this.getCacheList, this));
    }__class(t, "laya.utils.VectorGraphManager");var e = t.prototype;return e.getId = function () {
      return this._id++;
    }, e.addShape = function (t, e) {
      this.shapeDic[t] = e, this.useDic[t] || (this.useDic[t] = !0);
    }, e.addLine = function (t, e) {
      this.shapeLineDic[t] = e, this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
    }, e.getShape = function (t) {
      this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
    }, e.deleteShape = function (t) {
      this.shapeDic[t] && (this.shapeDic[t] = null, delete this.shapeDic[t]), this.shapeLineDic[t] && (this.shapeLineDic[t] = null, delete this.shapeLineDic[t]), null != this.useDic[t] && delete this.useDic[t];
    }, e.getCacheList = function () {
      var t,
          e = [];for (t in this.shapeDic) {
        e.push(this.shapeDic[t]);
      }for (t in this.shapeLineDic) {
        e.push(this.shapeLineDic[t]);
      }return e;
    }, e.startDispose = function (t) {
      var e;for (e in this.useDic) {
        this.useDic[e] = !1;
      }this._checkKey = !0;
    }, e.endDispose = function () {
      if (this._checkKey) {
        var t;for (t in this.useDic) {
          this.useDic[t] || this.deleteShape(t);
        }this._checkKey = !1;
      }
    }, t.getInstance = function () {
      return t.instance = t.instance || new t();
    }, t.instance = null, t;
  }(),
      WeakObject = function () {
    function t() {
      this._obj = null, this._obj = t.supportWeakMap ? new Browser.window.WeakMap() : {}, t.supportWeakMap || t._maps.push(this);
    }__class(t, "laya.utils.WeakObject");var e = t.prototype;return e.set = function (e, i) {
      if (null != e) if (t.supportWeakMap) {
        var n = e;"string" != typeof e && "number" != typeof e || (n = t._keys[e]) || (n = t._keys[e] = { k: e }), this._obj.set(n, i);
      } else "string" == typeof e || "number" == typeof e ? this._obj[e] = i : (e.$_GID || (e.$_GID = Utils.getGID()), this._obj[e.$_GID] = i);
    }, e.get = function (e) {
      if (null == e) return null;if (t.supportWeakMap) {
        var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;return i ? this._obj.get(i) : null;
      }return "string" == typeof e || "number" == typeof e ? this._obj[e] : this._obj[e.$_GID];
    }, e.del = function (e) {
      if (null != e) if (t.supportWeakMap) {
        var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;if (!i) return;_obj.delete(i);
      } else "string" == typeof e || "number" == typeof e ? delete this._obj[e] : delete this._obj[this._obj.$_GID];
    }, e.has = function (e) {
      if (null == e) return !1;if (t.supportWeakMap) {
        var i = "string" == typeof e || "number" == typeof e ? t._keys[e] : e;return this._obj.has(i);
      }return "string" == typeof e || "number" == typeof e ? null != this._obj[e] : null != this._obj[this._obj.$_GID];
    }, t.__init__ = function () {
      (t.supportWeakMap = null != Browser.window.WeakMap) || Laya.timer.loop(t.delInterval, null, t.clearCache);
    }, t.clearCache = function () {
      for (var e = 0, i = t._maps.length; e < i; e++) {
        t._maps[e]._obj = {};
      }
    }, t.supportWeakMap = !1, t.delInterval = 6e5, t._keys = {}, t._maps = [], __static(t, ["I", function () {
      return this.I = new t();
    }]), t;
  }(),
      WordText = function () {
    function t() {
      this.id = NaN, this.save = [], this.toUpperCase = null, this.changed = !1, this._text = null;
    }__class(t, "laya.utils.WordText");var e = t.prototype;return e.setText = function (t) {
      this.changed = !0, this._text = t;
    }, e.toString = function () {
      return this._text;
    }, e.charCodeAt = function (t) {
      return this._text ? this._text.charCodeAt(t) : NaN;
    }, e.charAt = function (t) {
      return this._text ? this._text.charAt(t) : null;
    }, __getset(0, e, "length", function () {
      return this._text ? this._text.length : 0;
    }), t;
  }(),
      Node = function (t) {
    function e() {
      this._bits = 0, this._displayedInStage = !1, this._parent = null, this.conchModel = null, this.name = "", this.destroyed = !1, e.__super.call(this), this._childs = e.ARRAY_EMPTY, this._$P = e.PROP_EMPTY, this.timer = Laya.scaleTimer, this.conchModel = Render.isConchNode ? this.createConchModel() : null;
    }__class(e, "laya.display.Node", EventDispatcher);var i = e.prototype;return i._setBit = function (t, e) {
      if (1 == t) {
        this._getBit(t) != e && this._updateDisplayedInstage();
      }e ? this._bits |= t : this._bits &= ~t;
    }, i._getBit = function (t) {
      return 0 != (this._bits & t);
    }, i._setUpNoticeChain = function () {
      this._getBit(1) && this._setUpNoticeType(1);
    }, i._setUpNoticeType = function (t) {
      var e = this;for (e._setBit(t, !0), e = e.parent; e;) {
        if (e._getBit(t)) return;e._setBit(t, !0), e = e.parent;
      }
    }, i.on = function (t, e, i, n) {
      return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !1);
    }, i.once = function (t, e, i, n) {
      return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1), this._createListener(t, e, i, n, !0);
    }, i.createConchModel = function () {
      return null;
    }, i.destroy = function (t) {
      void 0 === t && (t = !0), this.destroyed = !0, this._parent && this._parent.removeChild(this), this._childs && (t ? this.destroyChildren() : this.removeChildren()), this._childs = null, this._$P = null, this.offAll(), this.timer.clearAll(this);
    }, i.destroyChildren = function () {
      if (this._childs) for (var t = this._childs.length - 1; t > -1; t--) {
        this._childs[t].destroy(!0);
      }
    }, i.addChild = function (t) {
      if (!t || this.destroyed || t === this) return t;if (t.zOrder && this._set$P("hasZorder", !0), t._parent === this) {
        var i = this.getChildIndex(t);i !== this._childs.length - 1 && (this._childs.splice(i, 1), this._childs.push(t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)), this._childChanged());
      } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []), this._childs.push(t), this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1), t.parent = this, this._childChanged();return t;
    }, i.addChildren = function (t) {
      for (var e = arguments, i = 0, n = e.length; i < n;) {
        this.addChild(e[i++]);
      }
    }, i.addChildAt = function (t, i) {
      if (!t || this.destroyed || t === this) return t;if (t.zOrder && this._set$P("hasZorder", !0), i >= 0 && i <= this._childs.length) {
        if (t._parent === this) {
          var n = this.getChildIndex(t);this._childs.splice(n, 1), this._childs.splice(i, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, i)), this._childChanged();
        } else t.parent && t.parent.removeChild(t), this._childs === e.ARRAY_EMPTY && (this._childs = []), this._childs.splice(i, 0, t), this.conchModel && this.conchModel.addChildAt(t.conchModel, i), t.parent = this;return t;
      }throw new Error("appendChildAt:The index is out of bounds");
    }, i.getChildIndex = function (t) {
      return this._childs.indexOf(t);
    }, i.getChildByName = function (t) {
      var e = this._childs;if (e) for (var i = 0, n = e.length; i < n; i++) {
        var s = e[i];if (s.name === t) return s;
      }return null;
    }, i._get$P = function (t) {
      return this._$P[t];
    }, i._set$P = function (t, i) {
      return this.destroyed || (this._$P === e.PROP_EMPTY && (this._$P = {}), this._$P[t] = i), i;
    }, i.getChildAt = function (t) {
      return this._childs[t];
    }, i.setChildIndex = function (t, e) {
      var i = this._childs;if (e < 0 || e >= i.length) throw new Error("setChildIndex:The index is out of bounds.");var n = this.getChildIndex(t);if (n < 0) throw new Error("setChildIndex:node is must child of this object.");return i.splice(n, 1), i.splice(e, 0, t), this.conchModel && (this.conchModel.removeChild(t.conchModel), this.conchModel.addChildAt(t.conchModel, e)), this._childChanged(), t;
    }, i._childChanged = function (t) {}, i.removeChild = function (t) {
      if (!this._childs) return t;var e = this._childs.indexOf(t);return this.removeChildAt(e);
    }, i.removeSelf = function () {
      return this._parent && this._parent.removeChild(this), this;
    }, i.removeChildByName = function (t) {
      var e = this.getChildByName(t);return e && this.removeChild(e), e;
    }, i.removeChildAt = function (t) {
      var e = this.getChildAt(t);return e && (this._childs.splice(t, 1), this.conchModel && this.conchModel.removeChild(e.conchModel), e.parent = null), e;
    }, i.removeChildren = function (t, i) {
      if (void 0 === t && (t = 0), void 0 === i && (i = 2147483647), this._childs && this._childs.length > 0) {
        var n = this._childs;if (0 === t && i >= a) {
          var s = n;this._childs = e.ARRAY_EMPTY;
        } else s = n.splice(t, i - t);for (var r = 0, a = s.length; r < a; r++) {
          s[r].parent = null, this.conchModel && this.conchModel.removeChild(s[r].conchModel);
        }
      }return this;
    }, i.replaceChild = function (t, e) {
      var i = this._childs.indexOf(e);return i > -1 ? (this._childs.splice(i, 1, t), this.conchModel && (this.conchModel.removeChild(e.conchModel), this.conchModel.addChildAt(t.conchModel, i)), e.parent = null, t.parent = this, t) : null;
    }, i._updateDisplayedInstage = function () {
      var t;t = this;var e = Laya.stage;for (this._displayedInStage = !1; t;) {
        if (t._getBit(1)) {
          this._displayedInStage = t._displayedInStage;break;
        }if (t == e || t._displayedInStage) {
          this._displayedInStage = !0;break;
        }t = t.parent;
      }
    }, i._setDisplay = function (t) {
      this._displayedInStage !== t && (this._displayedInStage = t, t ? this.event("display") : this.event("undisplay"));
    }, i._displayChild = function (t, e) {
      var i = t._childs;if (i) for (var n = 0, s = i.length; n < s; n++) {
        var r = i[n];r._getBit(1) && (r._childs.length > 0 ? this._displayChild(r, e) : r._setDisplay(e));
      }t._setDisplay(e);
    }, i.contains = function (t) {
      if (t === this) return !0;for (; t;) {
        if (t.parent === this) return !0;t = t.parent;
      }return !1;
    }, i.timerLoop = function (t, e, i, n, s, r) {
      void 0 === s && (s = !0), void 0 === r && (r = !1), this.timer.loop(t, e, i, n, s, r);
    }, i.timerOnce = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this.timer._create(!1, !1, t, e, i, n, s);
    }, i.frameLoop = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this.timer._create(!0, !0, t, e, i, n, s);
    }, i.frameOnce = function (t, e, i, n, s) {
      void 0 === s && (s = !0), this.timer._create(!0, !1, t, e, i, n, s);
    }, i.clearTimer = function (t, e) {
      this.timer.clear(t, e);
    }, __getset(0, i, "numChildren", function () {
      return this._childs.length;
    }), __getset(0, i, "parent", function () {
      return this._parent;
    }, function (t) {
      this._parent !== t && (t ? (this._parent = t, this.event("added"), this._getBit(1) && (this._setUpNoticeChain(), t.displayedInStage && this._displayChild(this, !0)), t._childChanged(this)) : (this.event("removed"), this._parent._childChanged(), this._getBit(1) && this._displayChild(this, !1), this._parent = t));
    }), __getset(0, i, "displayedInStage", function () {
      return this._getBit(1) ? this._displayedInStage : (this._setUpNoticeType(1), this._displayedInStage);
    }), e.ARRAY_EMPTY = [], e.PROP_EMPTY = {}, e.NOTICE_DISPLAY = 1, e.MOUSEENABLE = 2, e;
  }(),
      CSSStyle = function (t) {
    function e(t) {
      this._bgground = null, this._border = null, this._rect = null, this.underLine = 0, this.lineHeight = 0, e.__super.call(this), this._padding = e._PADDING, this._spacing = e._SPACING, this._aligns = e._ALIGNS, this._font = Font.EMPTY, this._ower = t;
    }__class(e, "laya.display.css.CSSStyle", t);var i = e.prototype;return i.destroy = function () {
      this._ower = null, this._font = null, this._rect = null;
    }, i.inherit = function (t) {
      this._font = t._font, this._spacing = t._spacing === e._SPACING ? e._SPACING : t._spacing.slice(), this.lineHeight = t.lineHeight;
    }, i._widthAuto = function () {
      return 0 != (262144 & this._type);
    }, i.widthed = function (t) {
      return 0 != (8 & this._type);
    }, i._calculation = function (t, e) {
      function i(t, e, i) {
        return t * i[0] + e * i[1] + i[2];
      }function n(t) {
        var e = r.width,
            n = s.width;a.width && (s.width = i(e, n, a.width)), a.height && (s.height = i(e, n, a.height)), a.left && (s.x = i(e, n, a.left)), a.top && (s.y = i(e, n, a.top));
      }if (e.indexOf("%") < 0) return !1;var s = this._ower,
          r = s.parent,
          a = this._rect;null === a && (r._getCSSStyle()._type |= 524288, r.on("resize", this, n), this._rect = a = { input: {} });var o = e.split(" ");return o[0] = parseFloat(o[0]) / 100, 1 == o.length ? o[1] = o[2] = 0 : (o[1] = parseFloat(o[1]) / 100, o[2] = parseFloat(o[2])), a[t] = o, a.input[t] = e, n(), !0;
    }, i.heighted = function (t) {
      return 0 != (8192 & this._type);
    }, i.size = function (t, e) {
      var i = this._ower,
          n = !1;-1 !== t && t != this._ower.width && (this._type |= 8, this._ower.width = t, n = !0), -1 !== e && e != this._ower.height && (this._type |= 8192, this._ower.height = e, n = !0), n && (i._layoutLater(), 524288 & this._type && i.event("resize", this));
    }, i._getAlign = function () {
      return this._aligns[0];
    }, i._getValign = function () {
      return this._aligns[1];
    }, i._getCssFloat = function () {
      return 0 != (32768 & this._type) ? 32768 : 0;
    }, i._createFont = function () {
      return 4096 & this._type ? this._font : (this._type |= 4096, this._font = new Font(this._font));
    }, i.render = function (t, e, i, n) {
      var s = t.width,
          r = t.height;i -= t.pivotX, n -= t.pivotY, this._bgground && null != this._bgground.color && e.ctx.fillRect(i, n, s, r, this._bgground.color), this._border && this._border.color && e.drawRect(i, n, s, r, this._border.color.strColor, this._border.size);
    }, i.getCSSStyle = function () {
      return this;
    }, i.cssText = function (t) {
      this.attrs(e.parseOneCSS(t, ";"));
    }, i.attrs = function (t) {
      if (t) for (var e = 0, i = t.length; e < i; e++) {
        var n = t[e];this[n[0]] = n[1];
      }
    }, i.setTransform = function (t) {
      "none" === t ? this._tf = Style._TF_EMPTY : this.attrs(e.parseOneCSS(t, ","));
    }, i.translate = function (t, e) {
      this._tf === Style._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.translateX = t, this._tf.translateY = e;
    }, i.scale = function (t, e) {
      this._tf === Style._TF_EMPTY && (this._tf = new TransformInfo()), this._tf.scaleX = t, this._tf.scaleY = e;
    }, i._enableLayout = function () {
      return 0 == (2 & this._type) && 0 == (4 & this._type);
    }, __getset(0, i, "block", t.prototype._$get_block, function (t) {
      t ? this._type |= 1 : this._type &= -2;
    }), __getset(0, i, "valign", function () {
      return e._valigndef[this._aligns[1]];
    }, function (t) {
      this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[1] = e._valigndef[t];
    }), __getset(0, i, "height", null, function (t) {
      if (this._type |= 8192, "string" == typeof t) {
        if (this._calculation("height", t)) return;t = parseInt(t);
      }this.size(-1, t);
    }), __getset(0, i, "width", null, function (t) {
      if (this._type |= 8, "string" == typeof t) {
        var e = t.indexOf("auto");if (e >= 0 && (this._type |= 262144, t = t.substr(0, e)), this._calculation("width", t)) return;t = parseInt(t);
      }this.size(t, -1);
    }), __getset(0, i, "fontWeight", function () {
      return this._font.weight;
    }, function (t) {
      this._createFont().weight = t;
    }), __getset(0, i, "left", null, function (t) {
      var e = this._ower;if ("string" == typeof t) {
        if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"), this._calculation("left", t)) return;t = parseInt(t);
      }e.x = t;
    }), __getset(0, i, "_translate", null, function (t) {
      this.translate(t[0], t[1]);
    }), __getset(0, i, "absolute", function () {
      return 0 != (4 & this._type);
    }), __getset(0, i, "top", null, function (t) {
      var e = this._ower;if ("string" == typeof t) {
        if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"), this._calculation("top", t)) return;t = parseInt(t);
      }e.y = t;
    }), __getset(0, i, "align", function () {
      return e._aligndef[this._aligns[0]];
    }, function (t) {
      this._aligns === e._ALIGNS && (this._aligns = [0, 0, 0]), this._aligns[0] = e._aligndef[t];
    }), __getset(0, i, "bold", function () {
      return this._font.bold;
    }, function (t) {
      this._createFont().bold = t;
    }), __getset(0, i, "padding", function () {
      return this._padding;
    }, function (t) {
      this._padding = t;
    }), __getset(0, i, "leading", function () {
      return this._spacing[1];
    }, function (t) {
      "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]), this._spacing[1] = t;
    }), __getset(0, i, "lineElement", function () {
      return 0 != (65536 & this._type);
    }, function (t) {
      t ? this._type |= 65536 : this._type &= -65537;
    }), __getset(0, i, "cssFloat", function () {
      return 0 != (32768 & this._type) ? "right" : "left";
    }, function (t) {
      this.lineElement = !1, "right" === t ? this._type |= 32768 : this._type &= -32769;
    }), __getset(0, i, "textDecoration", function () {
      return this._font.decoration;
    }, function (t) {
      this._createFont().decoration = t;
    }), __getset(0, i, "whiteSpace", function () {
      return 131072 & this._type ? "nowrap" : "";
    }, function (t) {
      "nowrap" === t && (this._type |= 131072), "none" === t && (this._type &= -131073);
    }), __getset(0, i, "background", null, function (t) {
      t ? (this._bgground || (this._bgground = {}), this._bgground.color = t, this._ower.conchModel && this._ower.conchModel.bgColor(t), this._type |= 16384, this._ower._renderType |= 256) : this._bgground = null;
    }), __getset(0, i, "wordWrap", function () {
      return 0 == (131072 & this._type);
    }, function (t) {
      t ? this._type &= -131073 : this._type |= 131072;
    }), __getset(0, i, "color", function () {
      return this._font.color;
    }, function (t) {
      this._createFont().color = t;
    }), __getset(0, i, "password", function () {
      return this._font.password;
    }, function (t) {
      this._createFont().password = t;
    }), __getset(0, i, "backgroundColor", function () {
      return this._bgground ? this._bgground.color : null;
    }, function (t) {
      "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}), this._bgground.color = t), this._ower.conchModel && this._ower.conchModel.bgColor(t), this._ower._renderType |= 256;
    }), __getset(0, i, "font", function () {
      return this._font.toString();
    }, function (t) {
      this._createFont().set(t);
    }), __getset(0, i, "weight", null, function (t) {
      this._createFont().weight = t;
    }), __getset(0, i, "letterSpacing", function () {
      return this._spacing[0];
    }, function (t) {
      "string" == typeof t && (t = parseInt(t + "")), this._spacing === e._SPACING && (this._spacing = [0, 0]), this._spacing[0] = t;
    }), __getset(0, i, "fontSize", function () {
      return this._font.size;
    }, function (t) {
      this._createFont().size = t;
    }), __getset(0, i, "italic", function () {
      return this._font.italic;
    }, function (t) {
      this._createFont().italic = t;
    }), __getset(0, i, "fontFamily", function () {
      return this._font.family;
    }, function (t) {
      this._createFont().family = t;
    }), __getset(0, i, "stroke", function () {
      return this._font.stroke[0];
    }, function (t) {
      this._createFont().stroke === Font._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[0] = t;
    }), __getset(0, i, "strokeColor", function () {
      return this._font.stroke[1];
    }, function (t) {
      this._createFont().stroke === Font._STROKE && (this._font.stroke = [0, "#000000"]), this._font.stroke[1] = t;
    }), __getset(0, i, "border", function () {
      return this._border ? this._border.value : "";
    }, function (t) {
      if ("none" != t) {
        this._border || (this._border = {}), this._border.value = t;var e = t.split(" ");if (this._border.color = Color.create(e[e.length - 1]), 1 == e.length) return this._border.size = 1, void (this._border.type = "solid");var i = 0;e[0].indexOf("px") > 0 ? (this._border.size = parseInt(e[0]), i++) : this._border.size = 1, this._border.type = e[i], this._ower._renderType |= 256;
      } else this._border = null;
    }), __getset(0, i, "borderColor", function () {
      return this._border && this._border.color ? this._border.color.strColor : null;
    }, function (t) {
      t ? (this._border || (this._border = { size: 1, type: "solid" }), this._border.color = null == t ? null : Color.create(t), this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor), this._ower._renderType |= 256) : this._border = null;
    }), __getset(0, i, "position", function () {
      return 4 & this._type ? "absolute" : "";
    }, function (t) {
      "absolute" == t ? this._type |= 4 : this._type &= -5;
    }), __getset(0, i, "display", null, function (t) {
      switch (t) {case "":
          this._type &= -3, this.visible = !0;break;case "none":
          this._type |= 2, this.visible = !1, this._ower._layoutLater();}
    }), __getset(0, i, "paddingLeft", function () {
      return this.padding[3];
    }), __getset(0, i, "paddingTop", function () {
      return this.padding[0];
    }), __getset(0, i, "_scale", null, function (t) {
      this._ower.scale(t[0], t[1]);
    }), __getset(0, i, "_rotate", null, function (t) {
      this._ower.rotation = t;
    }), e.parseOneCSS = function (t, i) {
      for (var n, s = [], r = t.split(i), a = 0, o = r.length; a < o; a++) {
        var h = r[a],
            l = h.indexOf(":"),
            u = h.substr(0, l).replace(/^\s+|\s+$/g, "");if (0 != u.length) {
          var c = h.substr(l + 1).replace(/^\s+|\s+$/g, ""),
              _ = [u, c];switch (u) {case "italic":case "bold":
              _[1] = "true" == c;break;case "line-height":
              _[0] = "lineHeight", _[1] = parseInt(c);break;case "font-size":
              _[0] = "fontSize", _[1] = parseInt(c);break;case "padding":
              (n = c.split(" ")).length > 1 || (n[1] = n[2] = n[3] = n[0]), _[1] = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];break;case "rotate":
              _[0] = "_rotate", _[1] = parseFloat(c);break;case "scale":
              n = c.split(" "), _[0] = "_scale", _[1] = [parseFloat(n[0]), parseFloat(n[1])];break;case "translate":
              n = c.split(" "), _[0] = "_translate", _[1] = [parseInt(n[0]), parseInt(n[1])];break;default:
              (_[0] = e._CSSTOVALUE[u]) || (_[0] = u);}s.push(_);
        }
      }return s;
    }, e.parseCSS = function (t, i) {
      for (var n; null != (n = e._parseCSSRegExp.exec(t));) {
        e.styleSheets[n[1]] = e.parseOneCSS(n[2], ";");
      }
    }, e.styleSheets = {}, e.ALIGN_CENTER = 1, e.ALIGN_RIGHT = 2, e.VALIGN_MIDDLE = 1, e.VALIGN_BOTTOM = 2, e._CSS_BLOCK = 1, e._DISPLAY_NONE = 2, e._ABSOLUTE = 4, e._WIDTH_SET = 8, e.ADDLAYOUTED = 512, e._NEWFONT = 4096, e._HEIGHT_SET = 8192, e._BACKGROUND_SET = 16384, e._FLOAT_RIGHT = 32768, e._LINE_ELEMENT = 65536, e._NOWARP = 131072, e._WIDTHAUTO = 262144, e._LISTERRESZIE = 524288, __static(e, ["EMPTY", function () {
      return this.EMPTY = new e(null);
    }, "_CSSTOVALUE", function () {
      return this._CSSTOVALUE = { "letter-spacing": "letterSpacing", "line-spacing": "lineSpacing", "white-space": "whiteSpace", "line-height": "lineHeight", "scale-x": "scaleX", "scale-y": "scaleY", "translate-x": "translateX", "translate-y": "translateY", "font-family": "fontFamily", "font-weight": "fontWeight", "vertical-align": "valign", "text-decoration": "textDecoration", "background-color": "backgroundColor", "border-color": "borderColor", float: "cssFloat" };
    }, "_parseCSSRegExp", function () {
      return this._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}", "g");
    }, "_aligndef", function () {
      return this._aligndef = { left: 0, center: 1, right: 2, 0: "left", 1: "center", 2: "right" };
    }, "_valigndef", function () {
      return this._valigndef = { top: 0, middle: 1, bottom: 2, 0: "top", 1: "middle", 2: "bottom" };
    }, "_PADDING", function () {
      return this._PADDING = [0, 0, 0, 0];
    }, "_RECT", function () {
      return this._RECT = [-1, -1, -1, -1];
    }, "_SPACING", function () {
      return this._SPACING = [0, 0];
    }, "_ALIGNS", function () {
      return this._ALIGNS = [0, 0, 0];
    }]), e;
  }(Style),
      AudioSound = function (t) {
    function e() {
      this.url = null, this.audio = null, this.loaded = !1, e.__super.call(this);
    }__class(e, "laya.media.h5audio.AudioSound", EventDispatcher);var i = e.prototype;return i.dispose = function () {
      var t = e._audioCache[this.url];t && (t.src = "", delete e._audioCache[this.url]);
    }, i.load = function (t) {
      function i() {
        s(), a.loaded = !0, a.event("complete");
      }function n() {
        r.load = null, s(), a.event("error");
      }function s() {
        r.removeEventListener("canplaythrough", i), r.removeEventListener("error", n);
      }t = URL.formatURL(t), this.url = t;var r;if (t == SoundManager._tMusic ? (e._initMusicAudio(), (r = e._musicAudio).src != t && (e._audioCache[r.src] = null, r = null)) : r = e._audioCache[t], r && r.readyState >= 2) this.event("complete");else {
        r || (t == SoundManager._tMusic ? (e._initMusicAudio(), r = e._musicAudio) : r = Browser.createElement("audio"), e._audioCache[t] = r, r.src = t), r.addEventListener("canplaythrough", i), r.addEventListener("error", n);var a = this;this.audio = r, r.load ? r.load() : n();
      }
    }, i.play = function (t, i) {
      if (void 0 === t && (t = 0), void 0 === i && (i = 0), !this.url) return null;var n;if (!(n = this.url == SoundManager._tMusic ? e._musicAudio : e._audioCache[this.url])) return null;var s;s = Pool.getItem("audio:" + this.url), Render.isConchApp ? s || ((s = Browser.createElement("audio")).src = this.url) : this.url == SoundManager._tMusic ? (e._initMusicAudio(), (s = e._musicAudio).src = this.url) : s = s || n.cloneNode(!0);var r = new AudioSoundChannel(s);return r.url = this.url, r.loops = i, r.startTime = t, r.play(), SoundManager.addChannel(r), r;
    }, __getset(0, i, "duration", function () {
      var t;return (t = e._audioCache[this.url]) ? t.duration : 0;
    }), e._initMusicAudio = function () {
      e._musicAudio || (e._musicAudio || (e._musicAudio = Browser.createElement("audio")), Render.isConchApp || Browser.document.addEventListener("mousedown", e._makeMusicOK));
    }, e._makeMusicOK = function () {
      Browser.document.removeEventListener("mousedown", e._makeMusicOK), e._musicAudio.src ? e._musicAudio.play() : (e._musicAudio.src = "", e._musicAudio.load());
    }, e._audioCache = {}, e._musicAudio = null, e;
  }(),
      SoundChannel = function (t) {
    function e() {
      this.url = null, this.loops = 0, this.startTime = NaN, this.isStopped = !1, this.completeHandler = null, e.__super.call(this);
    }__class(e, "laya.media.SoundChannel", EventDispatcher);var i = e.prototype;return i.play = function () {}, i.stop = function () {}, i.pause = function () {}, i.resume = function () {}, i.__runComplete = function (t) {
      t && t.run();
    }, __getset(0, i, "volume", function () {
      return 1;
    }, function (t) {}), __getset(0, i, "position", function () {
      return 0;
    }), __getset(0, i, "duration", function () {
      return 0;
    }), e;
  }(),
      Sound = function (t) {
    function e() {
      e.__super.call(this);
    }__class(e, "laya.media.Sound", EventDispatcher);var i = e.prototype;return i.load = function (t) {}, i.play = function (t, e) {
      return void 0 === t && (t = 0), void 0 === e && (e = 0), null;
    }, i.dispose = function () {}, __getset(0, i, "duration", function () {
      return 0;
    }), e;
  }(),
      WebAudioSound = function (t) {
    function e() {
      this.url = null, this.loaded = !1, this.data = null, this.audioBuffer = null, this.__toPlays = null, e.__super.call(this);
    }__class(e, "laya.media.webaudio.WebAudioSound", EventDispatcher);var i = e.prototype;return i.load = function (t) {
      var i = this;if (t = URL.formatURL(t), this.url = t, this.audioBuffer = e._dataCache[t], this.audioBuffer) this._loaded(this.audioBuffer);else if (e.e.on("loaded:" + t, this, this._loaded), e.e.on("err:" + t, this, this._err), !e.__loadingSound[t]) {
        e.__loadingSound[t] = !0;var n = new Browser.window.XMLHttpRequest();n.open("GET", t, !0), n.responseType = "arraybuffer", n.onload = function () {
          i.data = n.response, e.buffs.push({ buffer: i.data, url: i.url }), e.decode();
        }, n.onerror = function (t) {
          i._err();
        }, n.send();
      }
    }, i._err = function () {
      this._removeLoadEvents(), e.__loadingSound[this.url] = !1, this.event("error");
    }, i._loaded = function (t) {
      this._removeLoadEvents(), this.audioBuffer = t, e._dataCache[this.url] = this.audioBuffer, this.loaded = !0, this.event("complete");
    }, i._removeLoadEvents = function () {
      e.e.off("loaded:" + this.url, this, this._loaded), e.e.off("err:" + this.url, this, this._err);
    }, i.__playAfterLoaded = function () {
      if (this.__toPlays) {
        var t,
            e = 0,
            i = 0;i = (t = this.__toPlays).length;var n;for (e = 0; e < i; e++) {
          (n = t[e])[2] && !n[2].isStopped && this.play(n[0], n[1], n[2]);
        }this.__toPlays.length = 0;
      }
    }, i.play = function (t, e, i) {
      return void 0 === t && (t = 0), void 0 === e && (e = 0), i = i || new WebAudioSoundChannel(), this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []), this.__toPlays.push([t, e, i]), this.once("complete", this, this.__playAfterLoaded), this.load(this.url)), i.url = this.url, i.loops = e, i.audioBuffer = this.audioBuffer, i.startTime = t, i.play(), SoundManager.addChannel(i), i;
    }, i.dispose = function () {
      delete e._dataCache[this.url], delete e.__loadingSound[this.url];
    }, __getset(0, i, "duration", function () {
      return this.audioBuffer ? this.audioBuffer.duration : 0;
    }), e.decode = function () {
      e.buffs.length <= 0 || e.isDecoding || (e.isDecoding = !0, e.tInfo = e.buffs.shift(), e.ctx.decodeAudioData(e.tInfo.buffer, e._done, e._fail));
    }, e._done = function (t) {
      e.e.event("loaded:" + e.tInfo.url, t), e.isDecoding = !1, e.decode();
    }, e._fail = function () {
      e.e.event("err:" + e.tInfo.url, null), e.isDecoding = !1, e.decode();
    }, e._playEmptySound = function () {
      if (null != e.ctx) {
        var t = e.ctx.createBufferSource();t.buffer = e._miniBuffer, t.connect(e.ctx.destination), t.start(0, 0, 0);
      }
    }, e._unlock = function () {
      e._unlocked || (e._playEmptySound(), "running" == e.ctx.state && (Browser.document.removeEventListener("mousedown", e._unlock, !0), Browser.document.removeEventListener("touchend", e._unlock, !0), e._unlocked = !0));
    }, e.initWebAudio = function () {
      "running" != e.ctx.state && (e._unlock(), Browser.document.addEventListener("mousedown", e._unlock, !0), Browser.document.addEventListener("touchend", e._unlock, !0));
    }, e._dataCache = {}, e.buffs = [], e.isDecoding = !1, e._unlocked = !1, e.tInfo = null, e.__loadingSound = {}, __static(e, ["window", function () {
      return this.window = Browser.window;
    }, "webAudioEnabled", function () {
      return this.webAudioEnabled = e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext;
    }, "ctx", function () {
      return this.ctx = e.webAudioEnabled ? new (e.window.AudioContext || e.window.webkitAudioContext || e.window.mozAudioContext)() : void 0;
    }, "_miniBuffer", function () {
      return this._miniBuffer = e.ctx.createBuffer(1, 1, 22050);
    }, "e", function () {
      return this.e = new EventDispatcher();
    }]), e;
  }(),
      HttpRequest = function (t) {
    function e() {
      this._responseType = null, this._data = null, e.__super.call(this), this._http = new Browser.window.XMLHttpRequest();
    }__class(e, "laya.net.HttpRequest", EventDispatcher);var i = e.prototype;return i.send = function (t, e, i, n, s) {
      void 0 === i && (i = "get"), void 0 === n && (n = "text"), this._responseType = n, this._data = null;var r = this,
          a = this._http;if (a.open(i, t, !0), s) for (var o = 0; o < s.length; o++) {
        a.setRequestHeader(s[o++], s[o]);
      } else Render.isConchApp || (e && "string" != typeof e ? a.setRequestHeader("Content-Type", "application/json") : a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));a.responseType = "arraybuffer" !== n ? "text" : "arraybuffer", a.onerror = function (t) {
        r._onError(t);
      }, a.onabort = function (t) {
        r._onAbort(t);
      }, a.onprogress = function (t) {
        r._onProgress(t);
      }, a.onload = function (t) {
        r._onLoad(t);
      }, a.send(e);
    }, i._onProgress = function (t) {
      t && t.lengthComputable && this.event("progress", t.loaded / t.total);
    }, i._onAbort = function (t) {
      this.error("Request was aborted by user");
    }, i._onError = function (t) {
      this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
    }, i._onLoad = function (t) {
      var e = this._http,
          i = void 0 !== e.status ? e.status : 200;200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
    }, i.error = function (t) {
      this.clear(), this.event("error", t);
    }, i.complete = function () {
      this.clear();var t = !0;try {
        "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = Utils.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText;
      } catch (e) {
        t = !1, this.error(e.message);
      }t && this.event("complete", this._data instanceof Array ? [this._data] : this._data);
    }, i.clear = function () {
      var t = this._http;t.onerror = t.onabort = t.onprogress = t.onload = null;
    }, __getset(0, i, "url", function () {
      return this._http.responseURL;
    }), __getset(0, i, "http", function () {
      return this._http;
    }), __getset(0, i, "data", function () {
      return this._data;
    }), e;
  }(),
      Loader = function (t) {
    function e() {
      this._data = null, this._url = null, this._type = null, this._cache = !1, this._http = null, this._customParse = !1, e.__super.call(this);
    }__class(e, "laya.net.Loader", EventDispatcher);var i = e.prototype;return i.load = function (t, i, n, s, r) {
      if (void 0 === n && (n = !0), void 0 === r && (r = !1), this._url = t, 0 === t.indexOf("data:image") ? this._type = i = "image" : (this._type = i || (i = this.getTypeFromUrl(t)), t = URL.formatURL(t)), this._cache = n, this._data = null, !r && e.loadedMap[t]) return this._data = e.loadedMap[t], this.event("progress", 1), void this.event("complete", this._data);if (s && e.setGroup(t, s), null != e.parserMap[i]) return this._customParse = !0, void (e.parserMap[i] instanceof laya.utils.Handler ? e.parserMap[i].runWith(this) : e.parserMap[i].call(null, this));if ("image" === i || "htmlimage" === i || "nativeimage" === i) return this._loadImage(t);if ("sound" === i) return this._loadSound(t);if ("atlas" == i && e.preLoadedAtlasConfigMap[t]) return this.onLoaded(e.preLoadedAtlasConfigMap[t]), void delete e.preLoadedAtlasConfigMap[t];this._http || (this._http = new HttpRequest(), this._http.on("progress", this, this.onProgress), this._http.on("error", this, this.onError), this._http.on("complete", this, this.onLoaded));var a;switch (i) {case "atlas":
          a = "json";break;case "font":
          a = "xml";break;case "pkm":
          a = "arraybuffer";break;default:
          a = i;}this._http.send(t, null, "get", a);
    }, i.getTypeFromUrl = function (t) {
      var i = Utils.getFileExtension(t);return i ? e.typeMap[i] : (console.warn("Not recognize the resources suffix", t), "text");
    }, i._loadImage = function (t) {
      function i() {
        n.onload = null, n.onerror = null, delete e.imgCache[t];
      }t = URL.formatURL(t);var n,
          s = this,
          r = function r() {
        i(), s.onLoaded(n);
      },
          a = function a() {
        i(), s.event("error", "Load image failed");
      };"nativeimage" === this._type ? ((n = new Browser.window.Image()).crossOrigin = "", n.onload = r, n.onerror = a, n.src = t, e.imgCache[t] = n) : new HTMLImage.create(t, { onload: r, onerror: a, onCreate: function onCreate(i) {
          n = i, e.imgCache[t] = i;
        } });
    }, i._loadSound = function (t) {
      function e() {
        i.offAll();
      }var i = new SoundManager._soundClass(),
          n = this;i.on("complete", this, function () {
        e(), n.onLoaded(i);
      }), i.on("error", this, function () {
        e(), i.dispose(), n.event("error", "Load sound failed");
      }), i.load(t);
    }, i.onProgress = function (t) {
      "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t);
    }, i.onError = function (t) {
      this.event("error", t);
    }, i.onLoaded = function (t) {
      var i = this._type;if ("image" === i) {
        var n = new Texture(t);n.url = this._url, this.complete(n);
      } else if ("sound" === i || "htmlimage" === i || "nativeimage" === i) this.complete(t);else if ("atlas" === i) {
        if (!t.src && !t._setContext) {
          if (!this._data) {
            if (this._data = t, t.meta && t.meta.image) for (var s = t.meta.image.split(","), r = this._url.indexOf("/") >= 0 ? "/" : "\\", a = this._url.lastIndexOf(r), o = a >= 0 ? this._url.substr(0, a + 1) : "", h = 0, l = s.length; h < l; h++) {
              s[h] = o + s[h];
            } else s = [this._url.replace(".json", ".png")];s.reverse(), t.toLoads = s, t.pics = [];
          }return this.event("progress", .3 + 1 / s.length * .6), this._loadImage(s.pop());
        }if (this._data.pics.push(t), this._data.toLoads.length > 0) return this.event("progress", .3 + 1 / this._data.toLoads.length * .6), this._loadImage(this._data.toLoads.pop());var u = this._data.frames,
            c = this._url.split("?")[0],
            _ = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : c.substring(0, c.lastIndexOf(".")) + "/",
            d = this._data.pics,
            f = URL.formatURL(this._url),
            p = e.atlasMap[f] || (e.atlasMap[f] = []);p.dir = _;for (var g in u) {
          var m = u[g],
              v = d[m.frame.idx ? m.frame.idx : 0],
              y = URL.formatURL(_ + g);e.cacheRes(y, Texture.create(v, m.frame.x, m.frame.y, m.frame.w, m.frame.h, m.spriteSourceSize.x, m.spriteSourceSize.y, m.sourceSize.w, m.sourceSize.h)), e.loadedMap[y].url = y, p.push(y);
        }delete this._data.pics, this.complete(this._data);
      } else if ("font" == i) {
        if (!t.src) return this._data = t, this.event("progress", .5), this._loadImage(this._url.replace(".fnt", ".png"));var w = new BitmapFont();w.parseFont(this._data, t);var x = this._url.split(".fnt")[0].split("/"),
            T = x[x.length - 1];Text.registerBitmapFont(T, w), this._data = w, this.complete(this._data);
      } else if ("pkm" == i) {
        var b = HTMLImage.create(t, this._url),
            C = new Texture(b);C.url = this._url, this.complete(C);
      } else this.complete(t);
    }, i.complete = function (t) {
      this._data = t, this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (e._loaders.push(this), e._isWorking || e.checkNext());
    }, i.endLoad = function (t) {
      t && (this._data = t), this._cache && e.cacheRes(this._url, this._data), this._customParse = !1, this.event("progress", 1), this.event("complete", this.data instanceof Array ? [this.data] : this.data);
    }, __getset(0, i, "url", function () {
      return this._url;
    }), __getset(0, i, "data", function () {
      return this._data;
    }), __getset(0, i, "cache", function () {
      return this._cache;
    }), __getset(0, i, "type", function () {
      return this._type;
    }), e.checkNext = function () {
      e._isWorking = !0;for (var t = Browser.now(); e._startIndex < e._loaders.length;) {
        if (Browser.now(), e._loaders[e._startIndex].endLoad(), e._startIndex++, Browser.now() - t > e.maxTimeOut) return console.warn("loader callback cost a long time:" + (Browser.now() - t) + " url=" + e._loaders[e._startIndex - 1].url), void Laya.timer.frameOnce(1, null, e.checkNext);
      }e._loaders.length = 0, e._startIndex = 0, e._isWorking = !1;
    }, e.clearRes = function (t, i) {
      void 0 === i && (i = !1), t = URL.formatURL(t);var n = e.getAtlas(t);if (n) {
        for (var s = 0, r = n.length; s < r; s++) {
          var a = n[s],
              o = e.getRes(a);delete e.loadedMap[a], o && o.destroy(i);
        }n.length = 0, delete e.atlasMap[t], delete e.loadedMap[t];
      } else {
        var h = e.loadedMap[t];h && (delete e.loadedMap[t], h instanceof laya.resource.Texture && h.bitmap && h.destroy(i));
      }
    }, e.clearTextureRes = function (t) {
      t = URL.formatURL(t);var e = laya.net.Loader.getAtlas(t),
          i = e && e.length > 0 ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t);i && i.bitmap && (Render.isConchApp ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0));
    }, e.setAtlasConfigs = function (t, i) {
      e.preLoadedAtlasConfigMap[URL.formatURL(t)] = i;
    }, e.getRes = function (t) {
      return e.loadedMap[URL.formatURL(t)];
    }, e.getAtlas = function (t) {
      return e.atlasMap[URL.formatURL(t)];
    }, e.cacheRes = function (t, i) {
      t = URL.formatURL(t), null != e.loadedMap[t] ? console.warn("Resources already exist,is repeated loading:", t) : e.loadedMap[t] = i;
    }, e.setGroup = function (t, i) {
      e.groupMap[i] || (e.groupMap[i] = []), e.groupMap[i].push(t);
    }, e.clearResByGroup = function (t) {
      if (e.groupMap[t]) {
        var i = e.groupMap[t],
            n = 0,
            s = i.length;for (n = 0; n < s; n++) {
          e.clearRes(i[n]);
        }i.length = 0;
      }
    }, e.TEXT = "text", e.JSON = "json", e.XML = "xml", e.BUFFER = "arraybuffer", e.IMAGE = "image", e.SOUND = "sound", e.ATLAS = "atlas", e.FONT = "font", e.PKM = "pkm", e.parserMap = {}, e.groupMap = {}, e.maxTimeOut = 100, e.loadedMap = {}, e.preLoadedAtlasConfigMap = {}, e.atlasMap = {}, e._loaders = [], e._isWorking = !1, e._startIndex = 0, e.imgCache = {}, __static(e, ["typeMap", function () {
      return this.typeMap = { png: "image", jpg: "image", jpeg: "image", txt: "text", json: "json", xml: "xml", als: "atlas", atlas: "atlas", mp3: "sound", ogg: "sound", wav: "sound", part: "json", fnt: "font", pkm: "pkm" };
    }]), e;
  }(),
      LoaderManager = function (t) {
    function e() {
      this.retryNum = 1, this.retryDelay = 0, this.maxLoader = 5, this._loaders = [], this._loaderCount = 0, this._resInfos = [], this._infoPool = [], this._maxPriority = 5, this._failRes = {}, e.__super.call(this);for (var t = 0; t < this._maxPriority; t++) {
        this._resInfos[t] = [];
      }
    }var i;__class(e, "laya.net.LoaderManager", EventDispatcher);var n = e.prototype;return n.create = function (t, e, i, n, s, r, a) {
      if (void 0 === r && (r = 1), void 0 === a && (a = !0), t instanceof Array) {
        var o = t,
            h = o.length,
            l = 0;if (i) var u = Handler.create(i.caller, i.method, i.args, !1);for (var c = 0; c < h; c++) {
          var _ = o[c];"string" == typeof _ && (_ = o[c] = { url: _ }), _.progress = 0;var d = i ? Handler.create(null, function (t, e) {
            t.progress = e;for (var i = 0, n = 0; n < h; n++) {
              i += o[n].progress;
            }var s = i / h;u.runWith(s);
          }, [_], !1) : null,
              f = i || e ? Handler.create(null, function (t, i) {
            l++, t.progress = 1, l === h && e && e.run();
          }, [_]) : null;this._create(_.url, f, d, _.clas || n, _.params || s, _.priority || r, a);
        }return !0;
      }return this._create(t, e, i, n, s, r, a);
    }, n._create = function (t, i, n, s, r, a, o) {
      void 0 === a && (a = 1), void 0 === o && (o = !0), t = URL.formatURL(t);var h = this.getRes(t);if (h) !h.hasOwnProperty("loaded") || h.loaded ? (n && n.runWith(1), i && i.run()) : i && Laya.loader._createListener(t, i.caller, i.method, i.args, !0, !1);else {
        var l = Utils.getFileExtension(t),
            u = e.createMap[l];if (!u) throw new Error("LoaderManager:unknown file(" + t + ") extension with: " + l + ".");s || (s = u[0]);var c = u[1];"atlas" == l ? this.load(t, i, n, c, a, o) : (s === Texture && (c = "htmlimage"), (h = s ? new s() : null).hasOwnProperty("_loaded") && (h._loaded = !1), this.load(t, Handler.create(null, function (e) {
          h && !h.disposed && e && h.onAsynLoaded.call(h, t, e, r), i && i.run(), Laya.loader.event(t);
        }), n, c, a, !1, null, !0), o && (this.cacheRes(t, h), h.url = t));
      }return h;
    }, n.load = function (t, n, s, r, a, o, h, l) {
      var u = this;if (void 0 === a && (a = 1), void 0 === o && (o = !0), void 0 === l && (l = !1), t instanceof Array) return this._loadAssets(t, n, s, r, a, o, h);var c = Loader.getRes(t);if (null != c) Laya.timer.frameOnce(1, null, function () {
        s && s.runWith(1), n && n.runWith(c), u._loaderCount || u.event("complete");
      });else {
        var _ = e._resMap[t];_ ? (n && _._createListener("complete", n.caller, n.method, n.args, !1, !1), s && _._createListener("progress", s.caller, s.method, s.args, !1, !1)) : ((_ = this._infoPool.length ? this._infoPool.pop() : new i()).url = t, _.type = r, _.cache = o, _.group = h, _.ignoreCache = l, n && _.on("complete", n.caller, n.method, n.args), s && _.on("progress", s.caller, s.method, s.args), e._resMap[t] = _, a = a < this._maxPriority ? a : this._maxPriority - 1, this._resInfos[a].push(_), this._next());
      }return this;
    }, n._next = function () {
      if (!(this._loaderCount >= this.maxLoader)) {
        for (var t = 0; t < this._maxPriority; t++) {
          for (var e = this._resInfos[t]; e.length > 0;) {
            var i = e.shift();if (i) return this._doLoad(i);
          }
        }this._loaderCount || this.event("complete");
      }
    }, n._doLoad = function (t) {
      function e(e) {
        i.offAll(), i._data = null, n._loaders.push(i), n._endLoad(t, e instanceof Array ? [e] : e), n._loaderCount--, n._next();
      }this._loaderCount++;var i = this._loaders.length ? this._loaders.pop() : new Loader();i.on("complete", null, e), i.on("progress", null, function (e) {
        t.event("progress", e);
      }), i.on("error", null, function (t) {
        e(null);
      });var n = this;i.load(t.url, t.type, t.cache, t.group, t.ignoreCache);
    }, n._endLoad = function (t, i) {
      var n = t.url;if (null == i) {
        var s = this._failRes[n] || 0;if (s < this.retryNum) return console.warn("[warn]Retry to load:", n), this._failRes[n] = s + 1, void Laya.timer.once(this.retryDelay, this, this._addReTry, [t], !1);console.warn("[error]Failed to load:", n), this.event("error", n);
      }this._failRes[n] && (this._failRes[n] = 0), delete e._resMap[n], t.event("complete", i), t.offAll(), this._infoPool.push(t);
    }, n._addReTry = function (t) {
      this._resInfos[this._maxPriority - 1].push(t), this._next();
    }, n.clearRes = function (t, e) {
      void 0 === e && (e = !1), Loader.clearRes(t, e);
    }, n.getRes = function (t) {
      return Loader.getRes(t);
    }, n.cacheRes = function (t, e) {
      Loader.cacheRes(t, e);
    }, n.clearTextureRes = function (t) {
      Loader.clearTextureRes(t);
    }, n.setGroup = function (t, e) {
      Loader.setGroup(t, e);
    }, n.clearResByGroup = function (t) {
      Loader.clearResByGroup(t);
    }, n.clearUnLoaded = function () {
      for (var t = 0; t < this._maxPriority; t++) {
        for (var i = this._resInfos[t], n = i.length - 1; n > -1; n--) {
          var s = i[n];s && (s.offAll(), this._infoPool.push(s));
        }i.length = 0;
      }this._loaderCount = 0, e._resMap = {};
    }, n.cancelLoadByUrls = function (t) {
      if (t) for (var e = 0, i = t.length; e < i; e++) {
        this.cancelLoadByUrl(t[e]);
      }
    }, n.cancelLoadByUrl = function (t) {
      for (var i = 0; i < this._maxPriority; i++) {
        for (var n = this._resInfos[i], s = n.length - 1; s > -1; s--) {
          var r = n[s];r && r.url === t && (n[s] = null, r.offAll(), this._infoPool.push(r));
        }
      }e._resMap[t] && delete e._resMap[t];
    }, n._loadAssets = function (t, e, i, n, s, r, a) {
      void 0 === s && (s = 1), void 0 === r && (r = !0);for (var o = t.length, h = 0, l = 0, u = [], c = !0, _ = 0; _ < o; _++) {
        var d = t[_];"string" == typeof d && (d = { url: d, type: n, size: 1, priority: s }), d.size || (d.size = 1), d.progress = 0, l += d.size, u.push(d);var f = i ? Handler.create(null, function (t, e) {
          if (null != i) {
            t.progress = e;for (var n = 0, s = 0; s < u.length; s++) {
              var r = u[s];n += r.size * r.progress;
            }var a = n / l;i.runWith(a);
          }
        }, [d], !1) : null,
            p = e || i ? Handler.create(null, function (t, i) {
          h++, t.progress = 1, i || (c = !1), h === o && e && e.runWith(c);
        }, [d]) : null;this.load(d.url, p, f, d.type, d.priority || 1, r, d.group || a);
      }return this;
    }, e.cacheRes = function (t, e) {
      Loader.cacheRes(t, e);
    }, e._resMap = {}, __static(e, ["createMap", function () {
      return this.createMap = { atlas: [null, "atlas"] };
    }]), e.__init$ = function () {
      i = function (t) {
        function e() {
          this.url = null, this.type = null, this.cache = !1, this.group = null, this.ignoreCache = !1, e.__super.call(this);
        }return __class(e, "", EventDispatcher), e;
      }();
    }, e;
  }(),
      ColorFilter = function (t) {
    function e(t) {
      e.__super.call(this), t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]), this._mat = new Float32Array(16), this._alpha = new Float32Array(4);for (var i = 0, n = 0, s = 0; s < 20; s++) {
        s % 5 != 4 ? this._mat[i++] = t[s] : this._alpha[n++] = t[s];
      }this._action = RunDriver.createFilterAction(32), this._action.data = this;
    }__class(e, "laya.filters.ColorFilter", Filter);var i = e.prototype;return Laya.imps(i, { "laya.filters.IFilter": !0 }), i.callNative = function (t) {
      t._$P.cf = this;t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha);
    }, __getset(0, i, "type", function () {
      return 32;
    }), __getset(0, i, "action", function () {
      return this._action;
    }), e;
  }(),
      Socket = function (t) {
    function e(t, i, n) {
      this._endian = null, this._stamp = NaN, this._socket = null, this._connected = !1, this._addInputPosition = 0, this._input = null, this._output = null, this.timeout = 0, this.objectEncoding = 0, this.disableInput = !1, this._byteClass = null, this.protocols = [], void 0 === i && (i = 0), e.__super.call(this), this._byteClass = n || Byte, this.endian = "bigEndian", this.timeout = 2e4, this._addInputPosition = 0, t && i > 0 && i < 65535 && this.connect(t, i);
    }__class(e, "laya.net.Socket", EventDispatcher);var i = e.prototype;return i.connect = function (t, e) {
      var i = "ws://" + t + ":" + e;i = "https:" == Browser.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e, this.connectByUrl(i);
    }, i.connectByUrl = function (t) {
      var e = this;null != this._socket && this.close(), this._socket && this.cleanSocket(), this.protocols && 0 != this.protocols.length ? this._socket = new Browser.window.WebSocket(t, this.protocols) : this._socket = new Browser.window.WebSocket(t), this._socket.binaryType = "arraybuffer", this._output = new this._byteClass(), this._output.endian = this.endian, this._input = new this._byteClass(), this._input.endian = this.endian, this._addInputPosition = 0, this._socket.onopen = function (t) {
        e._onOpen(t);
      }, this._socket.onmessage = function (t) {
        e._onMessage(t);
      }, this._socket.onclose = function (t) {
        e._onClose(t);
      }, this._socket.onerror = function (t) {
        e._onError(t);
      };
    }, i.cleanSocket = function () {
      try {
        this._socket.close();
      } catch (t) {}this._connected = !1, this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null, this._socket = null;
    }, i.close = function () {
      if (null != this._socket) try {
        this._socket.close();
      } catch (t) {}
    }, i._onOpen = function (t) {
      this._connected = !0, this.event("open", t);
    }, i._onMessage = function (t) {
      if (t && t.data) {
        var e = t.data;if (this.disableInput && e) this.event("message", e);else {
          this._input.length > 0 && this._input.bytesAvailable < 1 && (this._input.clear(), this._addInputPosition = 0);var i = this._input.pos;!this._addInputPosition && (this._addInputPosition = 0), this._input.pos = this._addInputPosition, e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e), this._addInputPosition = this._input.pos, this._input.pos = i), this.event("message", e);
        }
      }
    }, i._onClose = function (t) {
      this._connected = !1, this.event("close", t);
    }, i._onError = function (t) {
      this.event("error", t);
    }, i.send = function (t) {
      this._socket.send(t);
    }, i.flush = function () {
      if (this._output && this._output.length > 0) {
        var t;try {
          this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));
        } catch (e) {
          t = e;
        }this._output.endian = this.endian, this._output.clear(), t && this.event("error", t);
      }
    }, __getset(0, i, "input", function () {
      return this._input;
    }), __getset(0, i, "output", function () {
      return this._output;
    }), __getset(0, i, "connected", function () {
      return this._connected;
    }), __getset(0, i, "endian", function () {
      return this._endian;
    }, function (t) {
      this._endian = t, null != this._input && (this._input.endian = t), null != this._output && (this._output.endian = t);
    }), e.LITTLE_ENDIAN = "littleEndian", e.BIG_ENDIAN = "bigEndian", e;
  }(),
      WorkerLoader = function (t) {
    function e() {
      this.worker = null, e.__super.call(this);var t = this;this.worker = new Browser.window.Worker(e.workerPath), this.worker.onmessage = function (e) {
        t.workerMessage(e.data);
      };
    }__class(e, "laya.net.WorkerLoader", EventDispatcher);var i = e.prototype;return i.workerMessage = function (t) {
      if (t) switch (t.type) {case "Image":
          this.imageLoaded(t);break;case "Msg":
          this.event("image_msg", t.msg);}
    }, i.imageLoaded = function (t) {
      if (t && t.buffer && t.buffer.length < 10) return e._enable = !1, this._myTrace("buffer lost when postmessage ,disable workerloader"), this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);if (!t.dataType) return this.event(t.url, null), void this.event("image_err", t.url + "\n" + t.msg);var i, n, s;switch (t.dataType) {case "buffer":
          (s = (n = (i = new HTMLCanvas("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer), i.size(s.width, s.height), n.putImageData(s, 0, 0), i.memorySize = 0;break;case "imagedata":
          n = (i = new HTMLCanvas("2D")).source.getContext("2d"), s = t.imagedata, i.size(s.width, s.height), n.putImageData(s, 0, 0), s = t.imagedata, i.memorySize = 0;break;case "imageBitmap":
          s = t.imageBitmap, Render.isWebGL ? i = s : (n = (i = new HTMLCanvas("2D")).source.getContext("2d"), i.size(s.width, s.height), n.drawImage(s, 0, 0), i.src = t.url);}Render.isWebGL && (i = new laya.webgl.resource.WebGLImage(i, t.url)), this.event(t.url, i);
    }, i._myTrace = function (t) {
      var e = arguments,
          i = [],
          n = 0,
          s = e.length;for (n = 0; n < s; n++) {
        i.push(e[n]);
      }this.event("image_msg", i.join(" "));
    }, i.loadImage = function (t) {
      var e;(e = {}).type = "load", e.url = t, this.worker.postMessage(e);
    }, i._loadImage = function (t) {
      var i = this;if (!e._enable || t.toLowerCase().indexOf(".png") < 0) e._preLoadFun.call(i, t);else {
        t = URL.formatURL(t);var n = function n(s) {
          laya.net.WorkerLoader.I.off(t, i, n), s ? i.onLoaded(s) : e._preLoadFun.call(i, t);
        };laya.net.WorkerLoader.I.on(t, i, n), laya.net.WorkerLoader.I.loadImage(t);
      }
    }, __getset(1, e, "enable", function () {
      return e._enable;
    }, function (t) {
      e.disableJSDecode && !Browser.window.createImageBitmap || (e._enable = t) && null == e._preLoadFun && (e._enable = e.__init__());
    }), e.__init__ = function () {
      return null == e._preLoadFun && !!Browser.window.Worker && (e._preLoadFun = Loader.prototype._loadImage, Loader.prototype._loadImage = e.prototype._loadImage, e.I || (e.I = new e()), !0);
    }, e.workerSupported = function () {
      return !!Browser.window.Worker;
    }, e.IMAGE_LOADED = "image_loaded", e.IMAGE_ERR = "image_err", e.IMAGE_MSG = "image_msg", e.I = null, e._preLoadFun = null, e._enable = !1, e.workerPath = "libs/worker.js", e.disableJSDecode = !0, e;
  }(),
      Resource = function (t) {
    function e() {
      e.__super.call(this), this._$1__id = ++e._uniqueIDCounter, this.__loaded = !0, this._disposed = !1, e._loadedResources.push(this), this._released = !0, this.lock = !1, this._memorySize = 0, this._lastUseFrameCount = -1, ResourceManager.currentResourceManager && ResourceManager.currentResourceManager.addResource(this);
    }__class(e, "laya.resource.Resource", EventDispatcher);var i = e.prototype;return Laya.imps(i, { "laya.resource.ICreateResource": !0, "laya.resource.IDispose": !0 }), i._endLoaded = function () {
      this.__loaded = !0, this.event("loaded", this);
    }, i.recreateResource = function () {
      this.completeCreate();
    }, i.detoryResource = function () {}, i.activeResource = function (t) {
      void 0 === t && (t = !1), this._lastUseFrameCount = Stat.loopCount, this._disposed || !this._released && !t || this.recreateResource();
    }, i.releaseResource = function (t) {
      return void 0 === t && (t = !1), !(!t && this.lock) && !(this._released && !t) && (this.detoryResource(), this._released = !0, this._lastUseFrameCount = -1, this.event("released", this), !0);
    }, i.onAsynLoaded = function (t, e, i) {
      throw new Error("Resource: must override this function!");
    }, i.dispose = function () {
      if (!this._disposed) {
        null !== this._resourceManager && this._resourceManager.removeResource(this), this._disposed = !0, this.lock = !1, this.releaseResource();var t = e._loadedResources.indexOf(this);-1 !== t && e._loadedResources.splice(t, 1), Loader.clearRes(this._url);
      }
    }, i.completeCreate = function () {
      this._released = !1, this.event("recovered", this);
    }, __getset(0, i, "memorySize", function () {
      return this._memorySize;
    }, function (t) {
      var e = t - this._memorySize;this._memorySize = t, this.resourceManager && this.resourceManager.addSize(e);
    }), __getset(0, i, "_loaded", null, function (t) {
      this.__loaded = t;
    }), __getset(0, i, "loaded", function () {
      return this.__loaded;
    }), __getset(0, i, "id", function () {
      return this._$1__id;
    }), __getset(0, i, "resourceManager", function () {
      return this._resourceManager;
    }), __getset(0, i, "url", function () {
      return this._url;
    }, function (t) {
      this._url = t;
    }), __getset(0, i, "disposed", function () {
      return this._disposed;
    }), __getset(0, i, "released", function () {
      return this._released;
    }), e.getLoadedResourceByIndex = function (t) {
      return e._loadedResources[t];
    }, e.getLoadedResourcesCount = function () {
      return e._loadedResources.length;
    }, e._uniqueIDCounter = 0, e._loadedResources = [], e;
  }(),
      Texture = function (t) {
    function e(t, i) {
      this.offsetX = 0, this.offsetY = 0, this.sourceWidth = 0, this.sourceHeight = 0, this._w = 0, this._h = 0, this._uvID = 0, this._atlasID = -1, e.__super.call(this), t && t.useNum++, this.setTo(t, i);
    }__class(e, "laya.resource.Texture", EventDispatcher);var i = e.prototype;return i.setTo = function (t, i) {
      if (this.bitmap = t, this.uv = i || e.DEF_UV, t) {
        this._w = t.width, this._h = t.height, this.sourceWidth = this.sourceWidth || this._w, this.sourceHeight = this.sourceHeight || this._h, this._loaded = this._w > 0;var n = this;if (this._loaded) RunDriver.addToAtlas && RunDriver.addToAtlas(n);else {
          var s = t;s instanceof laya.resource.HTMLImage && s.image && s.image.addEventListener("load", function (t) {
            RunDriver.addToAtlas && RunDriver.addToAtlas(n);
          }, !1);
        }
      }
    }, i.active = function () {
      this.bitmap && this.bitmap.activeResource();
    }, i.destroy = function (t) {
      if (void 0 === t && (t = !1), this.bitmap && this.bitmap.useNum > 0) {
        var e = this.bitmap;t ? (Render.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose(), e.useNum = 0) : (e.useNum--, 0 == e.useNum && (Render.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(), this.bitmap = null, e.dispose())), this.url && this === Laya.loader.getRes(this.url) && Laya.loader.clearRes(this.url, t), this._loaded = !1;
      }
    }, i.load = function (t) {
      var e = this;this._loaded = !1, t = URL.customFormat(t);var i = this.bitmap || (this.bitmap = HTMLImage.create(t));i && i.useNum++;var n = this;i.onload = function () {
        i.onload = null, n._loaded = !0, e.sourceWidth = e._w = i.width, e.sourceHeight = e._h = i.height, n.event("loaded", this), RunDriver.addToAtlas && RunDriver.addToAtlas(n);
      };
    }, i.addTextureToAtlas = function (t) {
      RunDriver.addTextureToAtlas(this);
    }, i.getPixels = function (t, e, i, n) {
      if (Render.isConchApp) {
        var s = this.bitmap;if (s.source && s.source.getImageData) {
          var r = s.source.getImageData(t, e, i, n),
              a = new Uint8Array(r);return Array.from(a);
        }return null;
      }if (Render.isWebGL) return RunDriver.getTexturePixels(this, t, e, i, n);Browser.canvas.size(i, n), Browser.canvas.clear(), Browser.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0);return Browser.context.getImageData(0, 0, i, n).data;
    }, i.onAsynLoaded = function (t, e) {
      e && e.useNum++, this.setTo(e, this.uv);
    }, __getset(0, i, "source", function () {
      return this.bitmap ? (this.bitmap.activeResource(), this.bitmap.source) : null;
    }), __getset(0, i, "loaded", function () {
      return this._loaded;
    }), __getset(0, i, "released", function () {
      return !this.bitmap || this.bitmap.released;
    }), __getset(0, i, "width", function () {
      return this._w ? this._w : this.uv && this.uv !== e.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;
    }, function (t) {
      this._w = t, this.sourceWidth || (this.sourceWidth = t);
    }), __getset(0, i, "repeat", function () {
      return !Render.isWebGL || !this.bitmap || this.bitmap.repeat;
    }, function (t) {
      t && Render.isWebGL && this.bitmap && (this.bitmap.repeat = t, t && (this.bitmap.enableMerageInAtlas = !1));
    }), __getset(0, i, "height", function () {
      return this._h ? this._h : this.uv && this.uv !== e.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;
    }, function (t) {
      this._h = t, this.sourceHeight || (this.sourceHeight = t);
    }), __getset(0, i, "isLinearSampling", function () {
      return !Render.isWebGL || 9728 != this.bitmap.minFifter;
    }, function (t) {
      !t && Render.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728, this.bitmap.magFifter = 9728, this.bitmap.enableMerageInAtlas = !1));
    }), e.moveUV = function (t, e, i) {
      for (var n = 0; n < 8; n += 2) {
        i[n] += t, i[n + 1] += e;
      }return i;
    }, e.create = function (t, i, n, s, r, a, o, h, l) {
      void 0 === a && (a = 0), void 0 === o && (o = 0), void 0 === h && (h = 0), void 0 === l && (l = 0);var u = t instanceof laya.resource.Texture,
          c = u ? t.uv : e.DEF_UV,
          _ = u ? t.bitmap : t,
          d = RunDriver.isAtlas(_);if (d) {
        var f = _._atlaser,
            p = t._atlasID;if (-1 == p) throw new Error("create texture error");_ = f._inAtlasTextureBitmapValue[p], c = f._inAtlasTextureOriUVValue[p];
      }var g = new e(_, null);_.width && i + s > _.width && (s = _.width - i), _.height && n + r > _.height && (r = _.height - n), g.width = s, g.height = r, g.offsetX = a, g.offsetY = o, g.sourceWidth = h || s, g.sourceHeight = l || r;var m = 1 / _.width,
          v = 1 / _.height;i *= m, n *= v, s *= m, r *= v;var y = g.uv[0],
          w = g.uv[1],
          x = g.uv[4],
          T = g.uv[5],
          b = x - y,
          C = T - w,
          M = e.moveUV(c[0], c[1], [i, n, i + s, n, i + s, n + r, i, n + r]);return g.uv = [y + M[0] * b, w + M[1] * C, x - (1 - M[2]) * b, w + M[3] * C, x - (1 - M[4]) * b, T - (1 - M[5]) * C, y + M[6] * b, T - (1 - M[7]) * C], d && g.addTextureToAtlas(), g;
    }, e.createFromTexture = function (t, i, n, s, r) {
      var a = !Render.isWebGL && Browser.onFirefox || Browser.onEdge ? .5 : 0,
          o = Rectangle.TEMP.setTo(i - t.offsetX - a, n - t.offsetY - a, s + 2 * a, r + 2 * a),
          h = o.intersection(e._rect1.setTo(0, 0, t.width, t.height), e._rect2);if (!h) return null;var l = e.create(t, h.x, h.y, h.width, h.height, h.x - o.x, h.y - o.y, s, r);return l.bitmap.useNum--, l;
    }, __static(e, ["DEF_UV", function () {
      return this.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1];
    }, "INV_UV", function () {
      return this.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0];
    }, "_rect1", function () {
      return this._rect1 = new Rectangle();
    }, "_rect2", function () {
      return this._rect2 = new Rectangle();
    }]), e;
  }(),
      TimeLine = function (t) {
    function e() {
      this._labelDic = null, this._tweenDic = {}, this._tweenDataList = [], this._endTweenDataList = null, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this._firstTweenDic = {}, this._startTimeSort = !1, this._endTimeSort = !1, this._loopKey = !1, this.scale = 1, this._frameRate = 60, this._frameIndex = 0, this._total = 0, e.__super.call(this);
    }var i;__class(e, "laya.utils.TimeLine", EventDispatcher);var n = e.prototype;return n.to = function (t, e, i, n, s) {
      return void 0 === s && (s = 0), this._create(t, e, i, n, s, !0);
    }, n.from = function (t, e, i, n, s) {
      return void 0 === s && (s = 0), this._create(t, e, i, n, s, !1);
    }, n._create = function (t, e, n, s, r, a) {
      var o = Pool.getItemByClass("tweenData", i);return o.isTo = a, o.type = 0, o.target = t, o.duration = n, o.data = e, o.startTime = this._startTime + r, o.endTime = o.startTime + o.duration, o.ease = s, this._startTime = Math.max(o.endTime, this._startTime), this._tweenDataList.push(o), this._startTimeSort = !0, this._endTimeSort = !0, this;
    }, n.addLabel = function (t, e) {
      var n = Pool.getItemByClass("tweenData", i);return n.type = 1, n.data = t, n.endTime = n.startTime = this._startTime + e, this._labelDic || (this._labelDic = {}), this._labelDic[t] = n, this._tweenDataList.push(n), this;
    }, n.removeLabel = function (t) {
      if (this._labelDic && this._labelDic[t]) {
        var e = this._labelDic[t];if (e) {
          var i = this._tweenDataList.indexOf(e);i > -1 && this._tweenDataList.splice(i, 1);
        }delete this._labelDic[t];
      }
    }, n.gotoTime = function (t) {
      if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
        var e, i;for (var n in this._firstTweenDic) {
          if (i = this._firstTweenDic[n]) for (var s in i) {
            i.diyTarget.hasOwnProperty(s) && (i.diyTarget[s] = i[s]);
          }
        }for (n in this._tweenDic) {
          (e = this._tweenDic[n]).clear(), delete this._tweenDic[n];
        }this._index = 0, this._gidIndex = 0, this._currTime = t, this._lastTime = Browser.now();var r;null == this._endTweenDataList || this._endTimeSort ? (this._endTimeSort = !1, this._endTweenDataList = r = this._tweenDataList.concat(), r.sort(function (t, e) {
          return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0;
        })) : r = this._endTweenDataList;for (var a, o = 0, h = r.length; o < h; o++) {
          if (0 == (a = r[o]).type) {
            if (!(t >= a.endTime)) break;this._index = Math.max(this._index, o + 1);var l = a.data;if (a.isTo) for (var u in l) {
              a.target[u] = l[u];
            }
          }
        }for (o = 0, h = this._tweenDataList.length; o < h; o++) {
          0 == (a = this._tweenDataList[o]).type && t >= a.startTime && t < a.endTime && (this._index = Math.max(this._index, o + 1), this._gidIndex++, (e = Pool.getItemByClass("tween", Tween))._create(a.target, a.data, a.duration, a.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, !1, a.isTo, !0, !1), e.setStartTime(this._currTime - (t - a.startTime)), e._updateEase(this._currTime), e.gid = this._gidIndex, this._tweenDic[this._gidIndex] = e);
        }
      }
    }, n.gotoLabel = function (t) {
      if (null != this._labelDic) {
        var e = this._labelDic[t];e && this.gotoTime(e.startTime);
      }
    }, n.pause = function () {
      Laya.timer.clear(this, this._update);
    }, n.resume = function () {
      this.play(this._currTime, this._loopKey);
    }, n.play = function (t, e) {
      if (void 0 === t && (t = 0), void 0 === e && (e = !1), this._tweenDataList) {
        if (this._startTimeSort) {
          this._startTimeSort = !1, this._tweenDataList.sort(function (t, e) {
            return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0;
          });for (var i = 0, n = this._tweenDataList.length; i < n; i++) {
            var s = this._tweenDataList[i];if (null != s && 0 == s.type) {
              var r = s.target,
                  a = r.$_GID || (r.$_GID = Utils.getGID()),
                  o = null;null == this._firstTweenDic[a] ? ((o = {}).diyTarget = r, this._firstTweenDic[a] = o) : o = this._firstTweenDic[a];for (var h in s.data) {
                null == o[h] && (o[h] = r[h]);
              }
            }
          }
        }"string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t), this._loopKey = e, this._lastTime = Browser.now(), Laya.timer.frameLoop(1, this, this._update);
      }
    }, n._update = function () {
      if (this._currTime >= this._startTime) {
        if (!this._loopKey) {
          for (var t in this._tweenDic) {
            (s = this._tweenDic[t]).complete();
          }return this._complete(), void this.pause();
        }if (this._complete(), !this._tweenDataList) return;this.gotoTime(0);
      }var e = Browser.now(),
          i = e - this._lastTime,
          n = this._currTime += i * this.scale;this._lastTime = e;for (t in this._tweenDic) {
        (s = this._tweenDic[t])._updateEase(n);
      }var s;if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
        var r = this._tweenDataList[this._index];n >= r.startTime && (this._index++, 0 == r.type ? (this._gidIndex++, (s = Pool.getItemByClass("tween", Tween))._create(r.target, r.data, r.duration, r.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, !1, r.isTo, !0, !1), s.setStartTime(n), s.gid = this._gidIndex, this._tweenDic[this._gidIndex] = s, s._updateEase(n)) : this.event("label", r.data));
      }
    }, n._animComplete = function (t) {
      this._tweenDic[t] && delete this._tweenDic[t];
    }, n._complete = function () {
      this.event("complete");
    }, n.reset = function () {
      var t;if (this._labelDic) for (t in this._labelDic) {
        delete this._labelDic[t];
      }for (t in this._tweenDic) {
        this._tweenDic[t].clear(), delete this._tweenDic[t];
      }for (t in this._firstTweenDic) {
        delete this._firstTweenDic[t];
      }if (this._endTweenDataList = null, this._tweenDataList && this._tweenDataList.length) {
        var e = 0,
            i = 0;for (i = this._tweenDataList.length, e = 0; e < i; e++) {
          this._tweenDataList[e] && this._tweenDataList[e].destroy();
        }
      }this._tweenDataList.length = 0, this._currTime = 0, this._lastTime = 0, this._startTime = 0, this._index = 0, this._gidIndex = 0, this.scale = 1, Laya.timer.clear(this, this._update);
    }, n.destroy = function () {
      this.reset(), this._labelDic = null, this._tweenDic = null, this._tweenDataList = null, this._firstTweenDic = null;
    }, __getset(0, n, "index", function () {
      return this._frameIndex;
    }, function (t) {
      this._frameIndex = t, this.gotoTime(this._frameIndex / this._frameRate * 1e3);
    }), __getset(0, n, "total", function () {
      return this._total = Math.floor(this._startTime / 1e3 * this._frameRate), this._total;
    }), e.to = function (t, i, n, s, r) {
      return void 0 === r && (r = 0), new e().to(t, i, n, s, r);
    }, e.from = function (t, i, n, s, r) {
      return void 0 === r && (r = 0), new e().from(t, i, n, s, r);
    }, e.__init$ = function () {
      i = function () {
        function t() {
          this.type = 0, this.isTo = !0, this.startTime = NaN, this.endTime = NaN, this.target = null, this.duration = NaN, this.ease = null, this.data = null;
        }__class(t, "");return t.prototype.destroy = function () {
          this.target = null, this.ease = null, this.data = null, this.isTo = !0, this.type = 0, Pool.recover("tweenData", this);
        }, t;
      }();
    }, e;
  }(),
      Sprite = function (t) {
    function e() {
      this._transform = null, this._tfChanged = !1, this._x = 0, this._y = 0, this._width = 0, this._height = 0, this._repaint = 1, this._mouseEnableState = 0, this._zOrder = 0, this._graphics = null, this._renderType = 0, this._optimizeScrollRect = !1, this._texture = null, this.mouseThrough = !1, this.autoSize = !1, this.hitTestPrior = !1, this.viewport = null, e.__super.call(this), this._style = Style.EMPTY;
    }__class(e, "laya.display.Sprite", t);var i = e.prototype;return Laya.imps(i, { "laya.display.ILayout": !0 }), i.createConchModel = function () {
      return new ConchNode();
    }, i.destroy = function (e) {
      void 0 === e && (e = !0), this._releaseMem(), t.prototype.destroy.call(this, e), this._style && this._style.destroy(), this._transform && this._transform.destroy(), this._transform = null, this._style = null, this._graphics = null;
    }, i.updateZOrder = function () {
      Utils.updateOrder(this._childs) && this.repaint();
    }, i.reCache = function () {
      this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0), this._repaint = 1;
    }, i.setBounds = function (t) {
      this._set$P("uBounds", t);
    }, i.getBounds = function () {
      return this._$P.mBounds || this._set$P("mBounds", new Rectangle()), Rectangle._getWrapRec(this._boundPointsToParent(), this._$P.mBounds);
    }, i.getSelfBounds = function () {
      return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new Rectangle()), Rectangle._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
    }, i._boundPointsToParent = function (t) {
      void 0 === t && (t = !1);var e = 0,
          i = 0;this._style && (e = this._style._tf.translateX, i = this._style._tf.translateY, t = t || 0 !== this._style._tf.rotate, this._style.scrollRect && (e += this._style.scrollRect.x, i += this._style.scrollRect.y));var n = this._getBoundPointsM(t);if (!n || n.length < 1) return n;if (8 != n.length && (n = t ? GrahamScan.scanPList(n) : Rectangle._getWrapRec(n, Rectangle.TEMP)._getBoundPoints()), !this.transform) return Utils.transPointList(n, this._x - e, this._y - i), n;var s = Point.TEMP,
          r = 0,
          a = n.length;for (r = 0; r < a; r += 2) {
        s.x = n[r], s.y = n[r + 1], this.toParentPoint(s), n[r] = s.x, n[r + 1] = s.y;
      }return n;
    }, i.getGraphicBounds = function (t) {
      return void 0 === t && (t = !1), this._graphics ? this._graphics.getBounds(t) : Rectangle.TEMP.setTo(0, 0, 0, 0);
    }, i._getBoundPointsM = function (t) {
      if (void 0 === t && (t = !1), this._$P.uBounds) return this._$P.uBounds._getBoundPoints();if (this._$P.temBM || this._set$P("temBM", []), this.scrollRect) {
        var e = Utils.clearArray(this._$P.temBM),
            i = Rectangle.TEMP;return i.copyFrom(this.scrollRect), Utils.concatArray(e, i._getBoundPoints()), e;
      }for (var n, s, r, a = this._graphics ? this._graphics.getBoundPoints() : Utils.clearArray(this._$P.temBM), o = 0, h = (r = this._childs).length; o < h; o++) {
        (n = r[o]) instanceof laya.display.Sprite && 1 == n.visible && (s = n._boundPointsToParent(t)) && (a = a ? Utils.concatArray(a, s) : s);
      }return a;
    }, i.getStyle = function () {
      return this._style === Style.EMPTY && (this._style = new Style()), this._style;
    }, i.setStyle = function (t) {
      this._style = t;
    }, i._adjustTransform = function () {
      "use strict";
      this._tfChanged = !1;var t,
          e = this._style._tf,
          i = e.scaleX,
          n = e.scaleY;if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
        (t = this._transform || (this._transform = Matrix.create())).bTransform = !0;var s = .0174532922222222 * (e.rotate - e.skewX),
            r = .0174532922222222 * (e.rotate + e.skewY),
            a = Math.cos(r),
            o = Math.sin(r),
            h = Math.sin(s),
            l = Math.cos(s);return t.a = i * a, t.b = i * o, t.c = -n * h, t.d = n * l, t.tx = t.ty = 0, t;
      }return this._transform && this._transform.destroy(), this._transform = null, this._renderType &= -5, t;
    }, i.pos = function (t, e, i) {
      if (void 0 === i && (i = !1), this._x !== t || this._y !== e) {
        if (this.destroyed) return this;if (i) {
          this._x = t, this._y = e, this.conchModel && this.conchModel.pos(this._x, this._y);var n = this._parent;n && 0 === n._repaint && (n._repaint = 1, n.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
        } else this.x = t, this.y = e;
      }return this;
    }, i.pivot = function (t, e) {
      return this.pivotX = t, this.pivotY = e, this;
    }, i.size = function (t, e) {
      return this.width = t, this.height = e, this;
    }, i.scale = function (t, e, i) {
      void 0 === i && (i = !1);var n = this.getStyle(),
          s = n._tf;if (s.scaleX != t || s.scaleY != e) {
        if (this.destroyed) return this;if (i) {
          n.setScale(t, e), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e), this._renderType |= 4;var r = this._parent;r && 0 === r._repaint && (r._repaint = 1, r.parentRepaint());
        } else this.scaleX = t, this.scaleY = e;
      }return this;
    }, i.skew = function (t, e) {
      return this.skewX = t, this.skewY = e, this;
    }, i.render = function (t, e, i) {
      Stat.spriteCount++, RenderSprite.renders[this._renderType]._fun(this, t, e + this._x, i + this._y), this._repaint = 0;
    }, i.drawToCanvas = function (t, e, i, n) {
      if (Render.isConchNode) {
        var s = HTMLCanvas.create("2D");return new RenderContext(t, e, s).ctx.setCanvasType(1), this.conchModel.drawToCanvas(s.source, i, n), s;
      }return RunDriver.drawToCanvas(this, this._renderType, t, e, i, n);
    }, i.customRender = function (t, e, i) {
      this._renderType |= 1024;
    }, i._applyFilters = function () {
      if (!Render.isWebGL) {
        var t;if ((t = this._$P.filters) && !(t.length < 1)) for (var e = 0, i = t.length; e < i; e++) {
          t[e].action.apply(this._$P.cacheCanvas);
        }
      }
    }, i._isHaveGlowFilter = function () {
      var t = 0,
          e = 0;if (this.filters) for (t = 0; t < this.filters.length; t++) {
        if (8 == this.filters[t].type) return !0;
      }for (t = 0, e = this._childs.length; t < e; t++) {
        if (this._childs[t]._isHaveGlowFilter()) return !0;
      }return !1;
    }, i.localToGlobal = function (t, e) {
      void 0 === e && (e = !1), !0 === e && (t = new Point(t.x, t.y));for (var i = this; i && i != Laya.stage;) {
        t = i.toParentPoint(t), i = i.parent;
      }return t;
    }, i.globalToLocal = function (t, e) {
      void 0 === e && (e = !1), e && (t = new Point(t.x, t.y));for (var i = this, n = []; i && i != Laya.stage;) {
        n.push(i), i = i.parent;
      }for (var s = n.length - 1; s >= 0;) {
        t = (i = n[s]).fromParentPoint(t), s--;
      }return t;
    }, i.toParentPoint = function (t) {
      if (!t) return t;t.x -= this.pivotX, t.y -= this.pivotY, this.transform && this._transform.transformPoint(t), t.x += this._x, t.y += this._y;var e = this._style.scrollRect;return e && (t.x -= e.x, t.y -= e.y), t;
    }, i.fromParentPoint = function (t) {
      if (!t) return t;t.x -= this._x, t.y -= this._y;var e = this._style.scrollRect;return e && (t.x += e.x, t.y += e.y), this.transform && this._transform.invertTransformPoint(t), t.x += this.pivotX, t.y += this.pivotY, t;
    }, i.on = function (e, i, n, s) {
      return 1 !== this._mouseEnableState && this.isMouseEvent(e) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(e, i, n, s, !1)) : t.prototype.on.call(this, e, i, n, s);
    }, i.once = function (e, i, n, s) {
      return 1 !== this._mouseEnableState && this.isMouseEvent(e) ? (this.mouseEnabled = !0, this._setBit(2, !0), this._parent && this._$2__onDisplay(), this._createListener(e, i, n, s, !0)) : t.prototype.once.call(this, e, i, n, s);
    }, i._$2__onDisplay = function () {
      if (1 !== this._mouseEnableState) {
        var t = this;for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2);) {
          t.mouseEnabled = !0, t._setBit(2, !0), t = t.parent;
        }
      }
    }, i.loadImage = function (t, e, i, n, s, r) {
      var a = this;return void 0 === e && (e = 0), void 0 === i && (i = 0), void 0 === n && (n = 0), void 0 === s && (s = 0), this.graphics.loadImage(t, e, i, n, s, function (t) {
        a.destroyed || (a.size(e + (n || t.width), i + (s || t.height)), a.repaint(), r && r.runWith(t));
      }), this;
    }, i.repaint = function () {
      this.conchModel && this.conchModel.repaint && this.conchModel.repaint(), 0 === this._repaint && (this._repaint = 1, this.parentRepaint()), this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
    }, i._needRepaint = function () {
      return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
    }, i._childChanged = function (t) {
      this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049, t && this._get$P("hasZorder") && Laya.timer.callLater(this, this.updateZOrder), this.repaint();
    }, i.parentRepaint = function () {
      var t = this._parent;t && 0 === t._repaint && (t._repaint = 1, t.parentRepaint());
    }, i.startDrag = function (t, e, i, n, s, r, a) {
      void 0 === e && (e = !1), void 0 === i && (i = 0), void 0 === n && (n = 300), void 0 === r && (r = !1), void 0 === a && (a = .92), this._$P.dragging || this._set$P("dragging", new Dragging()), this._$P.dragging.start(this, t, e, i, n, s, r, a);
    }, i.stopDrag = function () {
      this._$P.dragging && this._$P.dragging.stop();
    }, i._releaseMem = function () {
      if (this._$P) {
        var t = this._$P.cacheCanvas;t && t.ctx && (Pool.recover("RenderContext", t.ctx), t.ctx.canvas.size(0, 0), t.ctx = null);var e = this._$P._filterCache;e && (e.destroy(), e.recycle(), this._set$P("_filterCache", null)), this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1), this._$P._isHaveGlowFilter = null;
      }
    }, i._setDisplay = function (e) {
      e || this._releaseMem(), t.prototype._setDisplay.call(this, e);
    }, i.hitTestPoint = function (t, e) {
      var i = this.globalToLocal(Point.TEMP.setTo(t, e));return (this._$P.hitArea ? this._$P.hitArea : this._width > 0 && this._height > 0 ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(i.x, i.y);
    }, i.getMousePoint = function () {
      return this.globalToLocal(Point.TEMP.setTo(Laya.stage.mouseX, Laya.stage.mouseY));
    }, i._getWords = function () {
      return null;
    }, i._addChildsToLayout = function (t) {
      var e = this._getWords();if (null == e && 0 == this._childs.length) return !1;if (e) for (var i = 0, n = e.length; i < n; i++) {
        t.push(e[i]);
      }return this._childs.forEach(function (e, i, n) {
        e._style._enableLayout() && e._addToLayout(t);
      }), !0;
    }, i._addToLayout = function (t) {
      this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0));
    }, i._isChar = function () {
      return !1;
    }, i._getCSSStyle = function () {
      return this._style.getCSSStyle();
    }, i._setAttributes = function (t, e) {
      switch (t) {case "x":
          this.x = parseFloat(e);break;case "y":
          this.y = parseFloat(e);break;case "width":
          this.width = parseFloat(e);break;case "height":
          this.height = parseFloat(e);break;default:
          this[t] = e;}
    }, i._layoutLater = function () {
      this.parent && this.parent._layoutLater();
    }, __getset(0, i, "optimizeScrollRect", function () {
      return this._optimizeScrollRect;
    }, function (t) {
      this._optimizeScrollRect != t && (this._optimizeScrollRect = t, this.conchModel && this.conchModel.optimizeScrollRect(t));
    }), __getset(0, i, "customRenderEnable", null, function (t) {
      if (t && (this._renderType |= 1024, Render.isConchNode)) {
        e.CustomList.push(this);var i = new HTMLCanvas("2d");i._setContext(new CanvasRenderingContext2D()), this.customContext = new RenderContext(0, 0, i), i.context.setCanvasType && i.context.setCanvasType(2), this.conchModel.custom(i.context);
      }
    }), __getset(0, i, "cacheAsBitmap", function () {
      return "none" !== this.cacheAs;
    }, function (t) {
      this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none";
    }), __getset(0, i, "cacheAs", function () {
      return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type;
    }, function (t) {
      var e = this._$P.cacheCanvas;if (t !== (e ? e.type : "none")) {
        if ("none" !== t) this._getBit(1) || this._setUpNoticeType(1), e || (e = this._set$P("cacheCanvas", Pool.getItemByClass("cacheCanvas", Object))), e.type = t, e.reCache = !0, this._renderType |= 16, "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1), this._set$P("cacheForFilters", !1);else if (this._$P.hasFilter) this._set$P("cacheForFilters", !0);else {
          if (e) {
            var i = e;i && i.ctx && (Pool.recover("RenderContext", i.ctx), i.ctx.canvas.size(0, 0), i.ctx = null), Pool.recover("cacheCanvas", e);
          }this._$P.cacheCanvas = null, this._renderType &= -17, this.conchModel && this.conchModel.cacheAs(0);
        }this.repaint();
      }
    }), __getset(0, i, "zOrder", function () {
      return this._zOrder;
    }, function (t) {
      this._zOrder != t && (this._zOrder = t, this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t), this._parent && (t && this._parent._set$P("hasZorder", !0), Laya.timer.callLater(this._parent, this.updateZOrder)));
    }), __getset(0, i, "rotation", function () {
      return this._style._tf.rotate;
    }, function (t) {
      var e = this.getStyle();if (e._tf.rotate !== t) {
        e.setRotate(t), this._tfChanged = !0, this.conchModel && this.conchModel.rotate(t), this._renderType |= 4;var i = this._parent;i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
      }
    }), __getset(0, i, "width", function () {
      return this.autoSize ? this.getSelfBounds().width : this._width;
    }, function (t) {
      this._width !== t && (this._width = t, this.conchModel && this.conchModel.size(t, this._height), this.repaint());
    }), __getset(0, i, "x", function () {
      return this._x;
    }, function (t) {
      if (this._x !== t) {
        if (this.destroyed) return;this._x = t, this.conchModel && this.conchModel.pos(t, this._y);var e = this._parent;e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
      }
    }), __getset(0, i, "globalScaleY", function () {
      for (var t = 1, e = this; e && e !== Laya.stage;) {
        t *= e.scaleY, e = e.parent;
      }return t;
    }), __getset(0, i, "hitArea", function () {
      return this._$P.hitArea;
    }, function (t) {
      this._set$P("hitArea", t);
    }), __getset(0, i, "staticCache", function () {
      return this._$P.staticCache;
    }, function (t) {
      this._set$P("staticCache", t), t || this.reCache();
    }), __getset(0, i, "texture", function () {
      return this._texture;
    }, function (t) {
      this._texture != t && (this._texture = t, this.graphics.cleanByTexture(t, 0, 0));
    }), __getset(0, i, "y", function () {
      return this._y;
    }, function (t) {
      if (this._y !== t) {
        if (this.destroyed) return;this._y = t, this.conchModel && this.conchModel.pos(this._x, t);var e = this._parent;e && 0 === e._repaint && (e._repaint = 1, e.parentRepaint()), this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1, this._$P.maskParent.parentRepaint());
      }
    }), __getset(0, i, "height", function () {
      return this.autoSize ? this.getSelfBounds().height : this._height;
    }, function (t) {
      this._height !== t && (this._height = t, this.conchModel && this.conchModel.size(this._width, t), this.repaint());
    }), __getset(0, i, "blendMode", function () {
      return this._style.blendMode;
    }, function (t) {
      this.getStyle().blendMode = t, this.conchModel && this.conchModel.blendMode(t), t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9, this.parentRepaint();
    }), __getset(0, i, "scaleX", function () {
      return this._style._tf.scaleX;
    }, function (t) {
      var e = this.getStyle();if (e._tf.scaleX !== t) {
        e.setScaleX(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(t, e._tf.scaleY), this._renderType |= 4;var i = this._parent;i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
      }
    }), __getset(0, i, "scaleY", function () {
      return this._style._tf.scaleY;
    }, function (t) {
      var e = this.getStyle();if (e._tf.scaleY !== t) {
        e.setScaleY(t), this._tfChanged = !0, this.conchModel && this.conchModel.scale(e._tf.scaleX, t), this._renderType |= 4;var i = this._parent;i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
      }
    }), __getset(0, i, "stage", function () {
      return Laya.stage;
    }), __getset(0, i, "skewX", function () {
      return this._style._tf.skewX;
    }, function (t) {
      var e = this.getStyle();if (e._tf.skewX !== t) {
        e.setSkewX(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(t, e._tf.skewY), this._renderType |= 4;var i = this._parent;i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
      }
    }), __getset(0, i, "scrollRect", function () {
      return this._style.scrollRect;
    }, function (t) {
      this.getStyle().scrollRect = t, this.repaint(), t ? (this._renderType |= 128, this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129, this.conchModel && (e.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)));
    }), __getset(0, i, "skewY", function () {
      return this._style._tf.skewY;
    }, function (t) {
      var e = this.getStyle();if (e._tf.skewY !== t) {
        e.setSkewY(t), this._tfChanged = !0, this.conchModel && this.conchModel.skew(e._tf.skewX, t), this._renderType |= 4;var i = this._parent;i && 0 === i._repaint && (i._repaint = 1, i.parentRepaint());
      }
    }), __getset(0, i, "transform", function () {
      return this._tfChanged ? this._adjustTransform() : this._transform;
    }, function (t) {
      this._tfChanged = !1, this._transform = t, t && (this._x = t.tx, this._y = t.ty, t.tx = t.ty = 0, this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)), t ? this._renderType |= 4 : (this._renderType &= -5, this.conchModel && this.conchModel.removeType(4)), this.parentRepaint();
    }), __getset(0, i, "pivotX", function () {
      return this._style._tf.translateX;
    }, function (t) {
      this.getStyle().setTranslateX(t), this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY), this.repaint();
    }), __getset(0, i, "pivotY", function () {
      return this._style._tf.translateY;
    }, function (t) {
      this.getStyle().setTranslateY(t), this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t), this.repaint();
    }), __getset(0, i, "alpha", function () {
      return this._style.alpha;
    }, function (t) {
      this._style && this._style.alpha !== t && (t = t < 0 ? 0 : t > 1 ? 1 : t, this.getStyle().alpha = t, this.conchModel && this.conchModel.alpha(t), 1 !== t ? this._renderType |= 2 : this._renderType &= -3, this.parentRepaint());
    }), __getset(0, i, "visible", function () {
      return this._style.visible;
    }, function (t) {
      this._style && this._style.visible !== t && (this.getStyle().visible = t, this.conchModel && this.conchModel.visible(t), this.parentRepaint());
    }), __getset(0, i, "graphics", function () {
      return this._graphics || (this.graphics = RunDriver.createGraphics());
    }, function (t) {
      this._graphics && (this._graphics._sp = null), this._graphics = t, t ? (this._renderType &= -2, this._renderType |= 512, t._sp = this, this.conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513, this._renderType &= -2, this.conchModel && (e.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))), this.repaint();
    }), __getset(0, i, "filters", function () {
      return this._$P.filters;
    }, function (t) {
      t && 0 === t.length && (t = null), this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null), Render.isConchApp && (this.conchModel && (e.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)), this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)), Render.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33), t && t.length > 0 ? (this._getBit(1) || this._setUpNoticeType(1), Render.isWebGL && 1 == t.length && t[0] instanceof laya.filters.ColorFilter || ("bitmap" != this.cacheAs && (Render.isConchNode || (this.cacheAs = "bitmap"), this._set$P("cacheForFilters", !0)), this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1), this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")), this.repaint());
    }), __getset(0, i, "parent", t.prototype._$get_parent, function (t) {
      Laya.superSet(Node, this, "parent", t), t && this._getBit(2) && this._$2__onDisplay();
    }), __getset(0, i, "mask", function () {
      return this._$P._mask;
    }, function (t) {
      t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap", this._set$P("_mask", t), t._set$P("maskParent", this)) : (this.cacheAs = "none", this.mask && this.mask._set$P("maskParent", null), this._set$P("_mask", t)), this.conchModel && this.conchModel.mask(t ? t.conchModel : null), this._renderType |= 64, this.parentRepaint());
    }), __getset(0, i, "mouseEnabled", function () {
      return this._mouseEnableState > 1;
    }, function (t) {
      this._mouseEnableState = t ? 2 : 1;
    }), __getset(0, i, "globalScaleX", function () {
      for (var t = 1, e = this; e && e !== Laya.stage;) {
        t *= e.scaleX, e = e.parent;
      }return t;
    }), __getset(0, i, "mouseX", function () {
      return this.getMousePoint().x;
    }), __getset(0, i, "mouseY", function () {
      return this.getMousePoint().y;
    }), e.fromImage = function (t) {
      return new e().loadImage(t);
    }, e.CustomList = [], __static(e, ["RUNTIMEVERION", function () {
      return this.RUNTIMEVERION = window.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "";
    }]), e;
  }(Node),
      AudioSoundChannel = function (t) {
    function e(t) {
      this._audio = null, this._onEnd = null, this._resumePlay = null, e.__super.call(this), this._onEnd = Utils.bind(this.__onEnd, this), this._resumePlay = Utils.bind(this.__resumePlay, this), t.addEventListener("ended", this._onEnd), this._audio = t;
    }__class(e, "laya.media.h5audio.AudioSoundChannel", SoundChannel);var i = e.prototype;return i.__onEnd = function () {
      if (1 == this.loops) return this.completeHandler && (Laya.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");this.loops > 0 && this.loops--, this.startTime = 0, this.play();
    }, i.__resumePlay = function () {
      this._audio && this._audio.removeEventListener("canplay", this._resumePlay);try {
        this._audio.currentTime = this.startTime, Browser.container.appendChild(this._audio), this._audio.play();
      } catch (t) {
        this.event("error");
      }
    }, i.play = function () {
      this.isStopped = !1;try {
        this._audio.playbackRate = SoundManager.playbackRate, this._audio.currentTime = this.startTime;
      } catch (t) {
        return void this._audio.addEventListener("canplay", this._resumePlay);
      }SoundManager.addChannel(this), Browser.container.appendChild(this._audio), "play" in this._audio && this._audio.play();
    }, i.stop = function () {
      this.isStopped = !0, SoundManager.removeChannel(this), this.completeHandler = null, this._audio && ("pause" in this._audio && Render.isConchApp && this._audio.stop(), this._audio.pause(), this._audio.removeEventListener("ended", this._onEnd), this._audio.removeEventListener("canplay", this._resumePlay), Browser.onIE || this._audio != AudioSound._musicAudio && Pool.recover("audio:" + this.url, this._audio), Browser.removeElement(this._audio), this._audio = null);
    }, i.pause = function () {
      this.isStopped = !0, SoundManager.removeChannel(this), "pause" in this._audio && this._audio.pause();
    }, i.resume = function () {
      this._audio && (this.isStopped = !1, SoundManager.addChannel(this), "play" in this._audio && this._audio.play());
    }, __getset(0, i, "position", function () {
      return this._audio ? this._audio.currentTime : 0;
    }), __getset(0, i, "duration", function () {
      return this._audio ? this._audio.duration : 0;
    }), __getset(0, i, "volume", function () {
      return this._audio ? this._audio.volume : 1;
    }, function (t) {
      this._audio && (this._audio.volume = t);
    }), e;
  }(),
      WebAudioSoundChannel = function (t) {
    function e() {
      this.audioBuffer = null, this.gain = null, this.bufferSource = null, this._currentTime = 0, this._volume = 1, this._startTime = 0, this._pauseTime = 0, this._onPlayEnd = null, this.context = WebAudioSound.ctx, e.__super.call(this), this._onPlayEnd = Utils.bind(this.__onPlayEnd, this), this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode();
    }__class(e, "laya.media.webaudio.WebAudioSoundChannel", SoundChannel);var i = e.prototype;return i.play = function () {
      if (SoundManager.addChannel(this), this.isStopped = !1, this._clearBufferSource(), this.audioBuffer) {
        var t = this.context,
            e = this.gain,
            i = t.createBufferSource();this.bufferSource = i, i.buffer = this.audioBuffer, i.connect(e), e && e.disconnect(), e.connect(t.destination), i.onended = this._onPlayEnd, this.startTime >= this.duration && (this.startTime = 0), this._startTime = Browser.now(), this.gain.gain.value = this._volume, 0 == this.loops && (i.loop = !0), i.playbackRate.value = SoundManager.playbackRate, i.start(0, this.startTime), this._currentTime = 0;
      }
    }, i.__onPlayEnd = function () {
      if (1 == this.loops) return this.completeHandler && (Laya.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");this.loops > 0 && this.loops--, this.startTime = 0, this.play();
    }, i._clearBufferSource = function () {
      if (this.bufferSource) {
        var t = this.bufferSource;t.stop ? t.stop(0) : t.noteOff(0), t.disconnect(0), t.onended = null, e._tryCleanFailed || this._tryClearBuffer(t), this.bufferSource = null;
      }
    }, i._tryClearBuffer = function (t) {
      if (Browser.onIOS) try {
        t.buffer = WebAudioSound._miniBuffer;
      } catch (t) {
        e._tryCleanFailed = !0;
      } else e._tryCleanFailed = !0;
    }, i.stop = function () {
      this._clearBufferSource(), this.audioBuffer = null, this.gain && this.gain.disconnect(), this.isStopped = !0, SoundManager.removeChannel(this), this.completeHandler = null, SoundManager.autoReleaseSound && Laya.timer.once(5e3, null, SoundManager.disposeSoundIfNotUsed, [this.url], !1);
    }, i.pause = function () {
      this.isStopped || (this._pauseTime = this.position), this._clearBufferSource(), this.gain && this.gain.disconnect(), this.isStopped = !0, SoundManager.removeChannel(this), SoundManager.autoReleaseSound && Laya.timer.once(5e3, null, SoundManager.disposeSoundIfNotUsed, [this.url], !1);
    }, i.resume = function () {
      this.startTime = this._pauseTime, this.play();
    }, __getset(0, i, "position", function () {
      return this.bufferSource ? (Browser.now() - this._startTime) / 1e3 + this.startTime : 0;
    }), __getset(0, i, "duration", function () {
      return this.audioBuffer ? this.audioBuffer.duration : 0;
    }), __getset(0, i, "volume", function () {
      return this._volume;
    }, function (t) {
      this.isStopped || (this._volume = t, this.gain.gain.value = t);
    }), e._tryCleanFailed = !1, e;
  }(),
      Bitmap = function (t) {
    function e() {
      this.useNum = 0, e.__super.call(this), this._w = 0, this._h = 0;
    }__class(e, "laya.resource.Bitmap", Resource);var i = e.prototype;return __getset(0, i, "width", function () {
      return this._w;
    }), __getset(0, i, "height", function () {
      return this._h;
    }), __getset(0, i, "source", function () {
      return this._source;
    }), e;
  }(),
      AnimationPlayerBase = function (t) {
    function e() {
      this.loop = !1, this.wrapMode = 0, this._index = 0, this._count = 0, this._isPlaying = !1, this._labels = null, this._isReverse = !1, this._frameRateChanged = !1, this._controlNode = null, this._actionName = null, e.__super.call(this), this._interval = Config.animationInterval, this._setUpNoticeType(1);
    }__class(e, "laya.display.AnimationPlayerBase", t);var i = e.prototype;return i.play = function (t, e, i, n) {
      void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
    }, i._getFrameByLabel = function (t) {
      var e = 0;for (e = 0; e < this._count; e++) {
        if (this._labels[e] && this._labels[e].indexOf(t) >= 0) return e;
      }return 0;
    }, i._frameLoop = function () {
      if (this._isReverse) {
        if (this._index--, this._index < 0) {
          if (!this.loop) return this._index = 0, this.stop(), void this.event("complete");2 == this.wrapMode ? (this._index = this._count > 0 ? 1 : 0, this._isReverse = !1) : this._index = this._count - 1, this.event("complete");
        }
      } else if (this._index++, this._index >= this._count) {
        if (!this.loop) return this._index--, this.stop(), void this.event("complete");2 == this.wrapMode ? (this._index = this._count - 2 >= 0 ? this._count - 2 : 0, this._isReverse = !0) : this._index = 0, this.event("complete");
      }this.index = this._index;
    }, i._setControlNode = function (t) {
      this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying), this._controlNode.off("undisplay", this, this._checkResumePlaying)), this._controlNode = t, t && t != this && (t.on("display", this, this._checkResumePlaying), t.on("undisplay", this, this._checkResumePlaying));
    }, i._setDisplay = function (e) {
      t.prototype._setDisplay.call(this, e), this._checkResumePlaying();
    }, i._checkResumePlaying = function () {
      this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop));
    }, i.stop = function () {
      this._isPlaying = !1, this.clearTimer(this, this._frameLoop);
    }, i.addLabel = function (t, e) {
      this._labels || (this._labels = {}), this._labels[e] || (this._labels[e] = []), this._labels[e].push(t);
    }, i.removeLabel = function (t) {
      if (t) {
        if (this._labels) for (var e in this._labels) {
          this._removeLabelFromLabelList(this._labels[e], t);
        }
      } else this._labels = null;
    }, i._removeLabelFromLabelList = function (t, e) {
      if (t) for (var i = t.length - 1; i >= 0; i--) {
        t[i] == e && t.splice(i, 1);
      }
    }, i.gotoAndStop = function (t) {
      this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.stop();
    }, i._displayToIndex = function (t) {}, i.clear = function () {
      this.stop(), this._labels = null;
    }, __getset(0, i, "interval", function () {
      return this._interval;
    }, function (t) {
      this._interval != t && (this._frameRateChanged = !0, this._interval = t, this._isPlaying && t > 0 && this.timerLoop(t, this, this._frameLoop, null, !0, !0));
    }), __getset(0, i, "isPlaying", function () {
      return this._isPlaying;
    }), __getset(0, i, "index", function () {
      return this._index;
    }, function (t) {
      if (this._index = t, this._displayToIndex(t), this._labels && this._labels[t]) for (var e = this._labels[t], i = 0, n = e.length; i < n; i++) {
        this.event("label", e[i]);
      }
    }), __getset(0, i, "count", function () {
      return this._count;
    }), e.WRAP_POSITIVE = 0, e.WRAP_REVERSE = 1, e.WRAP_PINGPONG = 2, e;
  }(Sprite),
      Text = function (t) {
    function e() {
      this._clipPoint = null, this._currBitmapFont = null, this._text = null, this._isChanged = !1, this._textWidth = 0, this._textHeight = 0, this._lines = [], this._lineWidths = [], this._startX = NaN, this._startY = NaN, this._lastVisibleLineIndex = -1, this._words = null, this._charSize = {}, this.underline = !1, this._underlineColor = null, e.__super.call(this), this.overflow = e.VISIBLE, this._style = new CSSStyle(this), this._style.wordWrap = !1;
    }__class(e, "laya.display.Text", t);var i = e.prototype;return i.destroy = function (e) {
      void 0 === e && (e = !0), t.prototype.destroy.call(this, e), this._lines = null, this._words && (this._words.length = 0, this._words = null);
    }, i._getBoundPointsM = function (t) {
      void 0 === t && (t = !1);var e = Rectangle.TEMP;return e.setTo(0, 0, this.width, this.height), e._getBoundPoints();
    }, i.getGraphicBounds = function (t) {
      void 0 === t && (t = !1);var e = Rectangle.TEMP;return e.setTo(0, 0, this.width, this.height), e;
    }, i._getCSSStyle = function () {
      return this._style;
    }, i.lang = function (t, i, n, s, r, a, o, h, l, u, c) {
      if (t = e.langPacks && e.langPacks[t] ? e.langPacks[t] : t, arguments.length < 2) this._text = t;else {
        for (var _ = 0, d = arguments.length; _ < d; _++) {
          t = t.replace("{" + _ + "}", arguments[_ + 1]);
        }this._text = t;
      }
    }, i.renderText = function (t, e) {
      var i = this.graphics;i.clear(!0);var n = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (Browser.onIPhone ? laya.display.Text._fontFamilyMap[this.font] || this.font : this.font);Browser.context.font = n;var s = this.padding,
          r = s[3],
          a = "left",
          o = this._lines,
          h = this.leading + this._charSize.height,
          l = this._currBitmapFont;l && (h = this.leading + l.getMaxHeight());var u = s[0];if (!l && this._width > 0 && this._textWidth <= this._width && ("right" == this.align ? (a = "right", r = this._width - s[1]) : "center" == this.align && (a = "center", r = .5 * this._width + s[3] - s[1])), this._height > 0) {
        var c = this._textHeight > this._height ? "top" : this.valign;"middle" === c ? u = .5 * (this._height - e * h) + s[0] - s[2] : "bottom" === c && (u = this._height - e * h - s[2]);
      }var _ = this._style;if (l && l.autoScaleSize) var d = l.fontSize / this.fontSize;if (this._clipPoint) if (i.save(), l && l.autoScaleSize) {
        var f = 0,
            p = 0;f = this._width ? this._width - s[3] - s[1] : this._textWidth, p = this._height ? this._height - s[0] - s[2] : this._textHeight, f *= d, p *= d, i.clipRect(s[3], s[0], f, p);
      } else i.clipRect(s[3], s[0], this._width ? this._width - s[3] - s[1] : this._textWidth, this._height ? this._height - s[0] - s[2] : this._textHeight);var g = _.password;"prompt" in this && this.prompt == this._text && (g = !1);for (var m = 0, v = 0, y = Math.min(this._lines.length, e + t) || 1, w = t; w < y; w++) {
        var x,
            T = o[w];if (g) {
          var b = T.length;T = "";for (var C = b; C > 0; C--) {
            T += "●";
          }
        }if (m = r - (this._clipPoint ? this._clipPoint.x : 0), v = u + h * w - (this._clipPoint ? this._clipPoint.y : 0), this.underline && this.drawUnderline(a, m, v, w), l) {
          var M = this.width;l.autoScaleSize && (M = this.width * d), l.drawText(T, this, m, v, this.align, M);
        } else Render.isWebGL ? (this._words || (this._words = []), (x = this._words.length > w - t ? this._words[w - t] : new WordText()).setText(T)) : x = T, _.stroke ? i.fillBorderText(x, m, v, n, this.color, _.strokeColor, _.stroke, a) : i.fillText(x, m, v, n, this.color, a);
      }if (l && l.autoScaleSize) {
        var S = 1 / d;this.scale(S, S);
      }this._clipPoint && i.restore(), this._startX = r, this._startY = u;
    }, i.drawUnderline = function (t, e, i, n) {
      var s = this._lineWidths[n];switch (t) {case "center":
          e -= s / 2;break;case "right":
          e -= s;}i += this._charSize.height, this._graphics.drawLine(e, i, e + s, i, this.underlineColor || this.color, 1);
    }, i.typeset = function () {
      if (this._isChanged = !1, !this._text) return this._clipPoint = null, this._textWidth = this._textHeight = 0, void this.graphics.clear(!0);Browser.context.font = this._getCSSStyle().font, this._lines.length = 0, this._lineWidths.length = 0, this.parseLines(this._text), this.evalTextSize(), this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new Point(0, 0)) : this._clipPoint = null;var t = this._lines.length;if (this.overflow != e.VISIBLE) {
        var i = this.overflow == e.HIDDEN ? Math.floor : Math.ceil;t = Math.min(t, i((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)));
      }var n = this.scrollY / (this._charSize.height + this.leading) | 0;this.renderText(n, t), this.repaint();
    }, i.evalTextSize = function () {
      var t = NaN,
          e = NaN;t = Math.max.apply(this, this._lineWidths), e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2], t == this._textWidth && e == this._textHeight || (this._textWidth = t, this._textHeight = e, this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight));
    }, i.checkEnabledViewportOrNot = function () {
      return this.overflow == e.SCROLL && (this._width > 0 && this._textWidth > this._width || this._height > 0 && this._textHeight > this._height);
    }, i.changeText = function (t) {
      this._text !== t && (this.lang(t + ""), this._graphics && this._graphics.replaceText(this._text) || this.typeset());
    }, i.parseLines = function (t) {
      var i = this.wordWrap || this.overflow == e.HIDDEN;if (i) var n = this.getWordWrapWidth();if (this._currBitmapFont) this._charSize.width = this._currBitmapFont.getMaxWidth(), this._charSize.height = this._currBitmapFont.getMaxHeight();else {
        var s = Browser.context.measureText(e._testWord);this._charSize.width = s.width, this._charSize.height = s.height || this.fontSize;
      }for (var r = t.replace(/\r\n/g, "\n").split("\n"), a = 0, o = r.length; a < o; a++) {
        var h = r[a];i ? this.parseLine(h, n) : (this._lineWidths.push(this.getTextWidth(h)), this._lines.push(h));
      }
    }, i.parseLine = function (t, i) {
      Browser.context;var n,
          s = this._lines,
          r = 0,
          a = NaN,
          o = NaN,
          h = 0;if ((a = this.getTextWidth(t)) <= i) return s.push(t), void this._lineWidths.push(a);a = this._charSize.width, 0 == (r = Math.floor(i / a)) && (r = 1), o = a = this.getTextWidth(t.substring(0, r));for (var l = r, u = t.length; l < u; l++) {
        if (a = this.getTextWidth(t.charAt(l)), (o += a) > i) if (this.wordWrap) {
          var c = t.substring(h, l);if (c.charCodeAt(c.length - 1) < 255 ? (n = /(?:\w|-)+$/.exec(c)) && (l = n.index + h, 0 == n.index ? l += c.length : c = t.substring(h, l)) : e.RightToLeft && (n = /([\u0600-\u06FF])+$/.exec(c)) && (l = n.index + h, 0 == n.index ? l += c.length : c = t.substring(h, l)), s.push(c), this._lineWidths.push(o - a), h = l, !(l + r < u)) {
            s.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(s[s.length - 1])), h = -1;break;
          }l += r, o = a = this.getTextWidth(t.substring(h, l)), l--;
        } else if (this.overflow == e.HIDDEN) return s.push(t.substring(0, l)), void this._lineWidths.push(this.getTextWidth(s[s.length - 1]));
      }this.wordWrap && -1 != h && (s.push(t.substring(h, u)), this._lineWidths.push(this.getTextWidth(s[s.length - 1])));
    }, i.getTextWidth = function (t) {
      return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : Browser.context.measureText(t).width;
    }, i.getWordWrapWidth = function () {
      var t = this.padding,
          e = NaN;return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : Browser.width), e <= 0 && (e = 100), e - t[3] - t[1];
    }, i.getCharPoint = function (t, e) {
      this._isChanged && Laya.timer.runCallLater(this, this.typeset);for (var i = 0, n = this._lines, s = 0, r = 0, a = n.length; r < a; r++) {
        if (i += n[r].length, t < i) {
          var o = r;break;
        }s = i;
      }var h = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;Browser.context.font = h;var l = this.getTextWidth(this._text.substring(s, t));return (e || new Point()).setTo(this._startX + l - (this._clipPoint ? this._clipPoint.x : 0), this._startY + o * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));
    }, __getset(0, i, "width", function () {
      return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3];
    }, function (t) {
      t != this._width && (Laya.superSet(Sprite, this, "width", t), this.isChanged = !0);
    }), __getset(0, i, "textWidth", function () {
      return this._isChanged && Laya.timer.runCallLater(this, this.typeset), this._textWidth;
    }), __getset(0, i, "height", function () {
      return this._height ? this._height : this.textHeight + this.padding[0] + this.padding[2];
    }, function (t) {
      t != this._height && (Laya.superSet(Sprite, this, "height", t), this.isChanged = !0);
    }), __getset(0, i, "textHeight", function () {
      return this._isChanged && Laya.timer.runCallLater(this, this.typeset), this._textHeight;
    }), __getset(0, i, "padding", function () {
      return this._getCSSStyle().padding;
    }, function (t) {
      this._getCSSStyle().padding = t, this.isChanged = !0;
    }), __getset(0, i, "bold", function () {
      return this._getCSSStyle().bold;
    }, function (t) {
      this._getCSSStyle().bold = t, this.isChanged = !0;
    }), __getset(0, i, "text", function () {
      return this._text || "";
    }, function (t) {
      this._text !== t && (this.lang(t + ""), this.isChanged = !0, this.event("change"));
    }), __getset(0, i, "color", function () {
      return this._getCSSStyle().color;
    }, function (t) {
      this._getCSSStyle().color != t && (this._getCSSStyle().color = t, !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0);
    }), __getset(0, i, "font", function () {
      return this._getCSSStyle().fontFamily;
    }, function (t) {
      this._currBitmapFont && (this._currBitmapFont = null, this.scale(1, 1)), e._bitmapFonts && e._bitmapFonts[t] && (this._currBitmapFont = e._bitmapFonts[t]), this._getCSSStyle().fontFamily = t, this.isChanged = !0;
    }), __getset(0, i, "fontSize", function () {
      return this._getCSSStyle().fontSize;
    }, function (t) {
      this._getCSSStyle().fontSize = t, this.isChanged = !0;
    }), __getset(0, i, "italic", function () {
      return this._getCSSStyle().italic;
    }, function (t) {
      this._getCSSStyle().italic = t, this.isChanged = !0;
    }), __getset(0, i, "align", function () {
      return this._getCSSStyle().align;
    }, function (t) {
      this._getCSSStyle().align = t, this.isChanged = !0;
    }), __getset(0, i, "valign", function () {
      return this._getCSSStyle().valign;
    }, function (t) {
      this._getCSSStyle().valign = t, this.isChanged = !0;
    }), __getset(0, i, "wordWrap", function () {
      return this._getCSSStyle().wordWrap;
    }, function (t) {
      this._getCSSStyle().wordWrap = t, this.isChanged = !0;
    }), __getset(0, i, "leading", function () {
      return this._getCSSStyle().leading;
    }, function (t) {
      this._getCSSStyle().leading = t, this.isChanged = !0;
    }), __getset(0, i, "bgColor", function () {
      return this._getCSSStyle().backgroundColor;
    }, function (t) {
      this._getCSSStyle().backgroundColor = t, this.isChanged = !0;
    }), __getset(0, i, "borderColor", function () {
      return this._getCSSStyle().borderColor;
    }, function (t) {
      this._getCSSStyle().borderColor = t, this.isChanged = !0;
    }), __getset(0, i, "stroke", function () {
      return this._getCSSStyle().stroke;
    }, function (t) {
      this._getCSSStyle().stroke = t, this.isChanged = !0;
    }), __getset(0, i, "strokeColor", function () {
      return this._getCSSStyle().strokeColor;
    }, function (t) {
      this._getCSSStyle().strokeColor = t, this.isChanged = !0;
    }), __getset(0, i, "isChanged", null, function (t) {
      this._isChanged !== t && (this._isChanged = t, t && Laya.timer.callLater(this, this.typeset));
    }), __getset(0, i, "scrollX", function () {
      return this._clipPoint ? this._clipPoint.x : 0;
    }, function (t) {
      if (!(this.overflow != e.SCROLL || this.textWidth < this._width) && this._clipPoint) {
        t = t < this.padding[3] ? this.padding[3] : t;var i = this._textWidth - this._width;t = t > i ? i : t;var n = this._height / (this._charSize.height + this.leading) | 1;this._clipPoint.x = t, this.renderText(this._lastVisibleLineIndex, n);
      }
    }), __getset(0, i, "scrollY", function () {
      return this._clipPoint ? this._clipPoint.y : 0;
    }, function (t) {
      if (!(this.overflow != e.SCROLL || this.textHeight < this._height) && this._clipPoint) {
        t = t < this.padding[0] ? this.padding[0] : t;var i = this._textHeight - this._height,
            n = (t = t > i ? i : t) / (this._charSize.height + this.leading) | 0;this._lastVisibleLineIndex = n;var s = 1 + (this._height / (this._charSize.height + this.leading) | 0);this._clipPoint.y = t, this.renderText(n, s);
      }
    }), __getset(0, i, "maxScrollX", function () {
      return this.textWidth < this._width ? 0 : this._textWidth - this._width;
    }), __getset(0, i, "maxScrollY", function () {
      return this.textHeight < this._height ? 0 : this._textHeight - this._height;
    }), __getset(0, i, "lines", function () {
      return this._isChanged && this.typeset(), this._lines;
    }), __getset(0, i, "underlineColor", function () {
      return this._underlineColor;
    }, function (t) {
      this._underlineColor = t, this._isChanged = !0, this.typeset();
    }), e.registerBitmapFont = function (t, i) {
      e._bitmapFonts || (e._bitmapFonts = {}), e._bitmapFonts[t] = i;
    }, e.unregisterBitmapFont = function (t, i) {
      if (void 0 === i && (i = !0), e._bitmapFonts && e._bitmapFonts[t]) {
        var n = e._bitmapFonts[t];i && n.destroy(), delete e._bitmapFonts[t];
      }
    }, e.setTextRightToLeft = function () {
      var t;(t = Browser.canvas.source.style).display = "none", t.position = "absolute", t.direction = "rtl", Render._mainCanvas.source.style.direction = "rtl", laya.display.Text.RightToLeft = !0, Browser.document.body.appendChild(Browser.canvas.source);
    }, e.supportFont = function (t) {
      Browser.context.font = "10px sans-serif";var e = Browser.context.measureText("abcji").width;Browser.context.font = "10px " + t;var i = Browser.context.measureText("abcji").width;return console.log(e, i), e !== i;
    }, e._testWord = "游", e.langPacks = null, e.VISIBLE = "visible", e.SCROLL = "scroll", e.HIDDEN = "hidden", e.CharacterCache = !0, e.RightToLeft = !1, e._bitmapFonts = null, __static(e, ["_fontFamilyMap", function () {
      return this._fontFamilyMap = { "报隶": "报隶-简", "黑体": "黑体-简", "楷体": "楷体-简", "兰亭黑": "兰亭黑-简", "隶变": "隶变-简", "凌慧体": "凌慧体-简", "翩翩体": "翩翩体-简", "苹方": "苹方-简", "手札体": "手札体-简", "宋体": "宋体-简", "娃娃体": "娃娃体-简", "魏碑": "魏碑-简", "行楷": "行楷-简", "雅痞": "雅痞-简", "圆体": "圆体-简" };
    }]), e;
  }(Sprite),
      Stage = function (t) {
    function e() {
      this.focus = null, this.frameRate = "fast", this.designWidth = 0, this.designHeight = 0, this.canvasRotation = !1, this.canvasDegree = 0, this.renderingEnabled = !0, this.screenAdaptationEnabled = !0, this._screenMode = "none", this._scaleMode = "noscale", this._alignV = "top", this._alignH = "left", this._bgColor = "black", this._mouseMoveTime = 0, this._renderCount = 0, this._frameStartTime = NaN, this._isFocused = !1, this._isVisibility = !1, this._scenes = null, e.__super.call(this), this.offset = new Point(), this._canvasTransform = new Matrix(), this._previousOrientation = Browser.window.orientation;var t = this;this.transform = Matrix.create(), this._scenes = [], this.mouseEnabled = !0, this.hitTestPrior = !0, this.autoSize = !1, this._displayedInStage = !0, this._isFocused = !0, this._isVisibility = !0;var i = Browser.window,
          n = this;i.addEventListener("focus", function () {
        t._isFocused = !0, n.event("focus"), n.event("focuschange");
      }), i.addEventListener("blur", function () {
        t._isFocused = !1, n.event("blur"), n.event("focuschange"), n._isInputting() && (Input.inputElement.target.focus = !1);
      });var s = "visibilityState",
          r = "visibilitychange",
          a = i.document;void 0 !== a.hidden ? (r = "visibilitychange", s = "visibilityState") : void 0 !== a.mozHidden ? (r = "mozvisibilitychange", s = "mozVisibilityState") : void 0 !== a.msHidden ? (r = "msvisibilitychange", s = "msVisibilityState") : void 0 !== a.webkitHidden && (r = "webkitvisibilitychange", s = "webkitVisibilityState"), i.document.addEventListener(r, function () {
        "hidden" == Browser.document[s] ? (t._isVisibility = !1, n._isInputting() && (Input.inputElement.target.focus = !1)) : t._isVisibility = !0, n.event("visibilitychange");
      }), i.addEventListener("resize", function () {
        var e = Browser.window.orientation;null != e && e != t._previousOrientation && n._isInputting() && (Input.inputElement.target.focus = !1), t._previousOrientation = e, n._isInputting() || n._resetCanvas();
      }), i.addEventListener("orientationchange", function (t) {
        n._resetCanvas();
      }), this.on("mousemove", this, this._onmouseMove), Browser.onMobile && this.on("mousedown", this, this._onmouseMove);
    }__class(e, "laya.display.Stage", t);var i = e.prototype;return i._isInputting = function () {
      return Browser.onMobile && Input.isInputting;
    }, i._changeCanvasSize = function () {
      this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);
    }, i._resetCanvas = function () {
      if (this.screenAdaptationEnabled) {
        var t = Render._mainCanvas;t.source.style;t.size(1, 1), Laya.timer.once(100, this, this._changeCanvasSize);
      }
    }, i.setScreenSize = function (t, e) {
      var i = !1;if ("none" !== this._screenMode) {
        if (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode) {
          var n = e;e = t, t = n;
        }
      }this.canvasRotation = i;var s = Render._mainCanvas,
          r = s.source.style,
          a = this._canvasTransform.identity(),
          o = this._scaleMode,
          h = t / this.designWidth,
          l = e / this.designHeight,
          u = this.designWidth,
          c = this.designHeight,
          _ = t,
          d = e,
          f = Browser.pixelRatio;switch (this._width = this.designWidth, this._height = this.designHeight, o) {case "noscale":
          h = l = 1, _ = this.designWidth, d = this.designHeight;break;case "showall":
          h = l = Math.min(h, l), u = _ = Math.round(this.designWidth * h), c = d = Math.round(this.designHeight * l);break;case "noborder":
          h = l = Math.max(h, l), _ = Math.round(this.designWidth * h), d = Math.round(this.designHeight * l);break;case "full":
          h = l = 1, this._width = u = t, this._height = c = e;break;case "fixedwidth":
          l = h, this._height = c = Math.round(e / h);break;case "fixedheight":
          h = l, this._width = u = Math.round(t / l);break;case "fixedauto":
          t / e < this.designWidth / this.designHeight ? (l = h, this._height = c = Math.round(e / h)) : (h = l, this._width = u = Math.round(t / l));}this.conchModel && this.conchModel.size(this._width, this._height), h *= this.scaleX, l *= this.scaleY, 1 === h && 1 === l ? this.transform.identity() : (this.transform.a = this._formatData(h / (_ / u)), this.transform.d = this._formatData(l / (d / c)), this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)), s.size(u, c), RunDriver.changeWebGLSize(u, c), a.scale(_ / u / f, d / c / f), "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = t - _ : this.offset.x = .5 * (t - _) / f, "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = e - d : this.offset.y = .5 * (e - d) / f, this.offset.x = Math.round(this.offset.x), this.offset.y = Math.round(this.offset.y), a.translate(this.offset.x, this.offset.y), this.canvasDegree = 0, i && ("horizontal" === this._screenMode ? (a.rotate(Math.PI / 2), a.translate(e / f, 0), this.canvasDegree = 90) : (a.rotate(-Math.PI / 2), a.translate(0, t / f), this.canvasDegree = -90)), a.a = this._formatData(a.a), a.d = this._formatData(a.d), a.tx = this._formatData(a.tx), a.ty = this._formatData(a.ty), r.transformOrigin = r.webkitTransformOrigin = r.msTransformOrigin = r.mozTransformOrigin = r.oTransformOrigin = "0px 0px 0px", r.transform = r.webkitTransform = r.msTransform = r.mozTransform = r.oTransform = "matrix(" + a.toString() + ")", a.translate(parseInt(r.left) || 0, parseInt(r.top) || 0), this.visible = !0, this._repaint = 1, this.event("resize");
    }, i._formatData = function (t) {
      return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? t > 0 ? 1 : -1 : t;
    }, i.getMousePoint = function () {
      return Point.TEMP.setTo(this.mouseX, this.mouseY);
    }, i.repaint = function () {
      this._repaint = 1;
    }, i.parentRepaint = function () {}, i._loop = function () {
      return this.render(Render.context, 0, 0), !0;
    }, i._onmouseMove = function (t) {
      this._mouseMoveTime = Browser.now();
    }, i.getTimeFromFrameStart = function () {
      return Browser.now() - this._frameStartTime;
    }, i.render = function (e, i, n) {
      if ("sleep" === this.frameRate) {
        var s = Browser.now();if (!(s - this._frameStartTime >= 1e3)) return;this._frameStartTime = s;
      }if (this._renderCount++, Render.isFlash && this.repaint(), this._style.visible) {
        this._frameStartTime = Browser.now();var r = "slow" !== ("mouse" === this.frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this.frameRate),
            a = this._renderCount % 2 == 0;if (Stat.renderSlow = !r, r || a) {
          Stat.loopCount++, MouseManager.instance.runEvent(), Laya.timer._update(), RunDriver.update3DLoop();var o,
              h = 0,
              l = 0;if (Render.isConchNode) for (h = 0, l = this._scenes.length; h < l; h++) {
            (o = this._scenes[h]) && o._updateSceneConch();
          } else for (h = 0, l = this._scenes.length; h < l; h++) {
            (o = this._scenes[h]) && o._updateScene();
          }if (Render.isConchNode) {
            var u = Sprite.CustomList;for (h = 0, l = u.length; h < l; h++) {
              var c = u[h];c.customRender(c.customContext, 0, 0);
            }return;
          }
        }Render.isConchNode || !this.renderingEnabled || !r && a || (Render.isWebGL ? (e.clear(), t.prototype.render.call(this, e, i, n), Stat._show && Stat._sp.render(e, i, n), RunDriver.clear(this._bgColor), RunDriver.beginFlush(), e.flush(), RunDriver.endFinish(), VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose()) : (RunDriver.clear(this._bgColor), t.prototype.render.call(this, e, i, n), Stat._show && Stat._sp.render(e, i, n)));
      } else this._renderCount % 5 == 0 && (Stat.loopCount++, MouseManager.instance.runEvent(), Laya.timer._update());
    }, i._requestFullscreen = function () {
      var t = Browser.document.documentElement;t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
    }, i._fullScreenChanged = function () {
      Laya.stage.event("fullscreenchange");
    }, i.exitFullscreen = function () {
      var t = Browser.document;t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen();
    }, __getset(0, i, "clientScaleY", function () {
      return this._transform ? this._transform.getScaleY() : 1;
    }), __getset(0, i, "width", t.prototype._$get_width, function (t) {
      this.designWidth = t, Laya.superSet(Sprite, this, "width", t), Laya.timer.callLater(this, this._changeCanvasSize);
    }), __getset(0, i, "isFocused", function () {
      return this._isFocused;
    }), __getset(0, i, "alignH", function () {
      return this._alignH;
    }, function (t) {
      this._alignH = t, Laya.timer.callLater(this, this._changeCanvasSize);
    }), __getset(0, i, "height", t.prototype._$get_height, function (t) {
      this.designHeight = t, Laya.superSet(Sprite, this, "height", t), Laya.timer.callLater(this, this._changeCanvasSize);
    }), __getset(0, i, "transform", function () {
      return this._tfChanged && this._adjustTransform(), this._transform = this._transform || Matrix.create();
    }, t.prototype._$set_transform), __getset(0, i, "isVisibility", function () {
      return this._isVisibility;
    }), __getset(0, i, "desginWidth", function () {
      return console.debug("desginWidth已经弃用，请使用designWidth代替"), this.designWidth;
    }), __getset(0, i, "clientScaleX", function () {
      return this._transform ? this._transform.getScaleX() : 1;
    }), __getset(0, i, "desginHeight", function () {
      return console.debug("desginHeight已经弃用，请使用designHeight代替"), this.designHeight;
    }), __getset(0, i, "scaleMode", function () {
      return this._scaleMode;
    }, function (t) {
      this._scaleMode = t, Laya.timer.callLater(this, this._changeCanvasSize);
    }), __getset(0, i, "alignV", function () {
      return this._alignV;
    }, function (t) {
      this._alignV = t, Laya.timer.callLater(this, this._changeCanvasSize);
    }), __getset(0, i, "bgColor", function () {
      return this._bgColor;
    }, function (t) {
      this._bgColor = t, this.conchModel && this.conchModel.bgColor(t), Render.isWebGL && (t && "black" !== t && "#000000" !== t ? e._wgColor = Color.create(t)._color : Browser.onMiniGame || (e._wgColor = null)), Render.canvas.style.background = t || "none";
    }), __getset(0, i, "mouseX", function () {
      return Math.round(MouseManager.instance.mouseX / this.clientScaleX);
    }), __getset(0, i, "mouseY", function () {
      return Math.round(MouseManager.instance.mouseY / this.clientScaleY);
    }), __getset(0, i, "screenMode", function () {
      return this._screenMode;
    }, function (t) {
      this._screenMode = t;
    }), __getset(0, i, "visible", t.prototype._$get_visible, function (t) {
      if (this.visible !== t) {
        Laya.superSet(Sprite, this, "visible", t);Render._mainCanvas.source.style.visibility = t ? "visible" : "hidden";
      }
    }), __getset(0, i, "fullScreenEnabled", null, function (t) {
      var e = Browser.document,
          i = Render.canvas;t ? (i.addEventListener("mousedown", this._requestFullscreen), i.addEventListener("touchstart", this._requestFullscreen), e.addEventListener("fullscreenchange", this._fullScreenChanged), e.addEventListener("mozfullscreenchange", this._fullScreenChanged), e.addEventListener("webkitfullscreenchange", this._fullScreenChanged), e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen), i.removeEventListener("touchstart", this._requestFullscreen), e.removeEventListener("fullscreenchange", this._fullScreenChanged), e.removeEventListener("mozfullscreenchange", this._fullScreenChanged), e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged), e.removeEventListener("msfullscreenchange", this._fullScreenChanged));
    }), e.SCALE_NOSCALE = "noscale", e.SCALE_EXACTFIT = "exactfit", e.SCALE_SHOWALL = "showall", e.SCALE_NOBORDER = "noborder", e.SCALE_FULL = "full", e.SCALE_FIXED_WIDTH = "fixedwidth", e.SCALE_FIXED_HEIGHT = "fixedheight", e.SCALE_FIXED_AUTO = "fixedauto", e.ALIGN_LEFT = "left", e.ALIGN_RIGHT = "right", e.ALIGN_CENTER = "center", e.ALIGN_TOP = "top", e.ALIGN_MIDDLE = "middle", e.ALIGN_BOTTOM = "bottom", e.SCREEN_NONE = "none", e.SCREEN_HORIZONTAL = "horizontal", e.SCREEN_VERTICAL = "vertical", e.FRAME_FAST = "fast", e.FRAME_SLOW = "slow", e.FRAME_MOUSE = "mouse", e.FRAME_SLEEP = "sleep", e._wgColor = null, e;
  }(Sprite),
      SoundNode = function (t) {
    function e() {
      this.url = null, this._channel = null, this._tar = null, this._playEvents = null, this._stopEvents = null, e.__super.call(this), this.visible = !1, this.on("added", this, this._onParentChange), this.on("removed", this, this._onParentChange);
    }__class(e, "laya.media.SoundNode", Sprite);var i = e.prototype;return i._onParentChange = function () {
      this.target = this.parent;
    }, i.play = function (t, e) {
      void 0 === t && (t = 1), isNaN(t) && (t = 1), this.url && (this.stop(), this._channel = SoundManager.playSound(this.url, t, e));
    }, i.stop = function () {
      this._channel && !this._channel.isStopped && this._channel.stop(), this._channel = null;
    }, i._setPlayAction = function (t, e, i, n) {
      void 0 === n && (n = !0), this[i] && t && (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
    }, i._setPlayActions = function (t, e, i, n) {
      if (void 0 === n && (n = !0), t && e) {
        var s = e.split(","),
            r = 0,
            a = 0;for (a = s.length, r = 0; r < a; r++) {
          this._setPlayAction(t, s[r], i, n);
        }
      }
    }, __getset(0, i, "playEvent", null, function (t) {
      this._playEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "play");
    }), __getset(0, i, "target", null, function (t) {
      this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1), this._setPlayActions(this._tar, this._stopEvents, "stop", !1)), this._tar = t, this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0), this._setPlayActions(this._tar, this._stopEvents, "stop", !0));
    }), __getset(0, i, "stopEvent", null, function (t) {
      this._stopEvents = t, t && this._tar && this._setPlayActions(this._tar, t, "stop");
    }), e;
  }(),
      FileBitmap = function (t) {
    function e() {
      this._src = null, this._onload = null, this._onerror = null, e.__super.call(this);
    }__class(e, "laya.resource.FileBitmap", Bitmap);var i = e.prototype;return __getset(0, i, "src", function () {
      return this._src;
    }, function (t) {
      this._src = t;
    }), __getset(0, i, "onload", null, function (t) {}), __getset(0, i, "onerror", null, function (t) {}), e;
  }(),
      HTMLCanvas = function (t) {
    function e(t) {
      this._is2D = !1, e.__super.call(this);var i = this;if (this._source = this, "2D" === t || "AUTO" === t && !Render.isWebGL) {
        this._is2D = !0, this._source = Browser.createElement("canvas");var n = this;n.getContext = function (t, e) {
          if (i._ctx) return i._ctx;var s = i._ctx = i._source.getContext(t, e);return s && (s._canvas = n, Render.isFlash || (s.size = function (t, e) {})), s;
        };
      }
    }__class(e, "laya.resource.HTMLCanvas", Bitmap);var i = e.prototype;return i.clear = function () {
      this._ctx && this._ctx.clear();
    }, i.destroy = function () {
      this._ctx && this._ctx.destroy(), this._ctx = null, this.dispose();
    }, i.release = function () {}, i._setContext = function (t) {
      this._ctx = t;
    }, i.getContext = function (t, i) {
      return this._ctx ? this._ctx : this._ctx = e._createContext(this);
    }, i.getMemSize = function () {
      return 0;
    }, i.size = function (t, e) {
      (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t, this._h = e, this.memorySize = this._w * this._h * 4, this._ctx && this._ctx.size(t, e), this._source && (this._source.height = e, this._source.width = t));
    }, i.getCanvas = function () {
      return this._source;
    }, __getset(0, i, "context", function () {
      return this._ctx;
    }), __getset(0, i, "asBitmap", null, function (t) {}), e.create = function (t) {
      return new e(t);
    }, e.TYPE2D = "2D", e.TYPE3D = "3D", e.TYPEAUTO = "AUTO", e._createContext = null, e;
  }(),
      HTMLSubImage = function (t) {
    function e(t, i, n, s, r, a, o, h) {
      throw e.__super.call(this), new Error("不允许new！");
    }return __class(e, "laya.resource.HTMLSubImage", Bitmap), e.create = function (t, i, n, s, r, a, o, h) {
      return void 0 === h && (h = !1), new e(t, i, n, s, r, a, o, h);
    }, e;
  }(),
      Animation = function (t) {
    function e() {
      this._frames = null, this._url = null, e.__super.call(this), this._setControlNode(this);
    }__class(e, "laya.display.Animation", t);var i = e.prototype;return i.destroy = function (t) {
      void 0 === t && (t = !0), this.stop(), laya.display.Sprite.prototype.destroy.call(this, t), this._frames = null, this._labels = null;
    }, i.play = function (t, e, i, n) {
      void 0 === t && (t = 0), void 0 === e && (e = !0), void 0 === i && (i = ""), void 0 === n && (n = !0), i && this._setFramesFromCache(i, n), this._isPlaying = !0, this.index = "string" == typeof t ? this._getFrameByLabel(t) : t, this.loop = e, this._actionName = i, this._isReverse = 1 == this.wrapMode, this._frames && this.interval > 0 && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
    }, i._setFramesFromCache = function (t, i) {
      if (void 0 === i && (i = !1), this._url && (t = this._url + "#" + t), t && e.framesMap[t]) {
        var n;return (n = e.framesMap[t]) instanceof Array ? (this._frames = e.framesMap[t], this._count = this._frames.length) : (n.nodeRoot && (e.framesMap[t] = this._parseGraphicAnimationByData(n), n = e.framesMap[t]), this._frames = n.frames, this._count = this._frames.length, this._frameRateChanged || (this._interval = n.interval), this._labels = this._copyLabels(n.labels)), !0;
      }return i && console.log("ani not found:", t), !1;
    }, i._copyLabels = function (t) {
      if (!t) return null;var e;e = {};var i;for (i in t) {
        e[i] = Utils.copyArray([], t[i]);
      }return e;
    }, i._frameLoop = function () {
      this._style.visible && this._style.alpha > .01 && t.prototype._frameLoop.call(this);
    }, i._displayToIndex = function (t) {
      this._frames && (this.graphics = this._frames[t]);
    }, i.clear = function () {
      this.stop(), this.graphics = null, this._frames = null, this._labels = null;
    }, i.loadImages = function (t, i) {
      return void 0 === i && (i = ""), this._url = "", this._setFramesFromCache(i) || (this.frames = e.framesMap[i] ? e.framesMap[i] : e.createFrames(t, i)), this;
    }, i.loadAtlas = function (t, i, n) {
      function s(s) {
        t === s && (r.frames = e.framesMap[n] ? e.framesMap[n] : e.createFrames(t, n), i && i.run());
      }void 0 === n && (n = ""), this._url = "";var r = this;return r._setFramesFromCache(n) || (Loader.getAtlas(t) ? s(t) : Laya.loader.load(t, Handler.create(null, s, [t]), null, "atlas")), this;
    }, i.loadAnimation = function (t, e, i) {
      this._url = t;return this._actionName || (this._actionName = ""), this._setFramesFromCache("") ? (this._setFramesFromCache(this._actionName, !0), e && e.run()) : !i || Loader.getAtlas(i) ? this._loadAnimationData(t, e, i) : Laya.loader.load(i, Handler.create(this, this._loadAnimationData, [t, e, i]), null, "atlas"), this;
    }, i._loadAnimationData = function (t, i, n) {
      function s(n) {
        if (Loader.getRes(n) && t === n) {
          var s;if (e.framesMap[t + "#"]) a._setFramesFromCache(r._actionName, !0), r.index = 0, r._checkResumePlaying();else {
            var o = a._parseGraphicAnimation(Loader.getRes(t));if (!o) return;var h,
                l = o.animationList,
                u = 0,
                c = l.length;for (u = 0; u < c; u++) {
              s = l[u], e.framesMap[t + "#" + s.name] = s, h || (h = s);
            }h && (e.framesMap[t + "#"] = h, a._setFramesFromCache(r._actionName, !0), r.index = 0), r._checkResumePlaying();
          }i && i.run();
        }
      }var r = this;if (!n || Loader.getAtlas(n)) {
        var a = this;Loader.getRes(t) ? s(t) : Laya.loader.load(t, Handler.create(null, s, [t]), null, "json"), Loader.clearRes(t);
      } else console.warn("atlas load fail:" + n);
    }, i._parseGraphicAnimation = function (t) {
      return GraphicAnimation.parseAnimationData(t);
    }, i._parseGraphicAnimationByData = function (t) {
      return GraphicAnimation.parseAnimationByData(t);
    }, __getset(0, i, "frames", function () {
      return this._frames;
    }, function (t) {
      this._frames = t, t && (this._count = t.length, this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index);
    }), __getset(0, i, "autoPlay", null, function (t) {
      t ? this.play() : this.stop();
    }), __getset(0, i, "source", null, function (t) {
      t.indexOf(".ani") > -1 ? this.loadAnimation(t) : t.indexOf(".json") > -1 || t.indexOf("als") > -1 || t.indexOf("atlas") > -1 ? this.loadAtlas(t) : this.loadImages(t.split(","));
    }), __getset(0, i, "autoAnimation", null, function (t) {
      this.play(0, !0, t, !1);
    }), e.createFrames = function (t, i) {
      var n,
          s,
          r = 0,
          a = 0;if ("string" == typeof t) {
        var o = Loader.getAtlas(t);if (o && o.length) for (n = [], r = 0, a = o.length; r < a; r++) {
          (s = new RunDriver.createGraphics()).drawTexture(Loader.getRes(o[r]), 0, 0), n.push(s);
        }
      } else if (t instanceof Array) for (n = [], r = 0, a = t.length; r < a; r++) {
        (s = new RunDriver.createGraphics()).loadImage(t[r], 0, 0), n.push(s);
      }return i && (e.framesMap[i] = n), n;
    }, e.clearCache = function (t) {
      var i,
          n = e.framesMap,
          s = t + "#";for (i in n) {
        i !== t && 0 != i.indexOf(s) || delete e.framesMap[i];
      }
    }, e.framesMap = {}, e;
  }(AnimationPlayerBase),
      FrameAnimation = function (t) {
    function e() {
      this._targetDic = null, this._animationData = null, this._animationNewFrames = null, e.__super.call(this), null == e._sortIndexFun && (e._sortIndexFun = MathUtil.sortByKey("index", !1, !0));
    }__class(e, "laya.display.FrameAnimation", t);var i = e.prototype;return i._setUp = function (t, e) {
      this._labels = null, this._animationNewFrames = null, this._targetDic = t, this._animationData = e, this.interval = 1e3 / e.frameRate, e.parsed ? (this._count = e.count, this._labels = e.labels, this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [], this._calculateDatas()), e.parsed = !0, e.labels = this._labels, e.count = this._count, e.animationNewFrames = this._animationNewFrames;
    }, i.clear = function () {
      t.prototype.clear.call(this), this._targetDic = null, this._animationData = null;
    }, i._displayToIndex = function (t) {
      if (this._animationData) {
        t < 0 && (t = 0), t > this._count && (t = this._count);var e = this._animationData.nodes,
            i = 0,
            n = e.length;for (i = 0; i < n; i++) {
          this._displayNodeToFrame(e[i], t);
        }
      }
    }, i._displayNodeToFrame = function (t, e, i) {
      i || (i = this._targetDic);var n = i[t.target];if (n) {
        var s,
            r,
            a,
            o = t.frames,
            h = t.keys,
            l = 0,
            u = h.length;for (l = 0; l < u; l++) {
          a = (r = o[s = h[l]]).length > e ? r[e] : r[r.length - 1], n[s] = a;
        }
      }
    }, i._calculateDatas = function () {
      if (this._animationData) {
        var t,
            e = this._animationData.nodes,
            i = 0,
            n = e.length;for (this._count = 0, i = 0; i < n; i++) {
          t = e[i], this._calculateNodeKeyFrames(t);
        }this._count += 1;
      }
    }, i._calculateNodeKeyFrames = function (t) {
      var i,
          n,
          s = t.keyframes,
          r = t.target;t.frames || (t.frames = {}), t.keys ? t.keys.length = 0 : t.keys = [], t.initValues || (t.initValues = {});for (i in s) {
        n = s[i], t.frames[i] || (t.frames[i] = []), this._targetDic && this._targetDic[r] && (t.initValues[i] = this._targetDic[r][i]), n.sort(e._sortIndexFun), t.keys.push(i), this._calculateNodePropFrames(n, t.frames[i], i, r);
      }
    }, i.resetToInitState = function () {
      if (this._targetDic && this._animationData) {
        var t,
            e,
            i = this._animationData.nodes,
            n = 0,
            s = i.length;for (n = 0; n < s; n++) {
          if (t = i[n], e = t.initValues) {
            var r = this._targetDic[t.target];if (r) {
              var a;for (a in e) {
                r[a] = e[a];
              }
            }
          }
        }
      }
    }, i._calculateNodePropFrames = function (t, e, i, n) {
      var s = 0,
          r = t.length - 1;for (e.length = t[r].index + 1, s = 0; s < r; s++) {
        this._dealKeyFrame(t[s]), this._calculateFrameValues(t[s], t[s + 1], e);
      }0 == r && (e[0] = t[0].value, this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)), this._dealKeyFrame(t[s]);
    }, i._dealKeyFrame = function (t) {
      t.label && "" != t.label && this.addLabel(t.label, t.index);
    }, i._calculateFrameValues = function (t, e, i) {
      var n,
          s = 0,
          r = t.index,
          a = e.index,
          o = t.value,
          h = e.value - t.value,
          l = a - r;if (a > this._count && (this._count = a), t.tween) for (null == (n = Ease[t.tweenMethod]) && (n = Ease.linearNone), s = r; s < a; s++) {
        i[s] = n(s - r, o, h, l), this._animationNewFrames && (this._animationNewFrames[s] = !0);
      } else for (s = r; s < a; s++) {
        i[s] = o;
      }this._animationNewFrames && (this._animationNewFrames[t.index] = !0, this._animationNewFrames[e.index] = !0), i[e.index] = e.value;
    }, e._sortIndexFun = null, e;
  }(AnimationPlayerBase),
      Input = function (t) {
    function e() {
      this._focus = !1, this._multiline = !1, this._editable = !0, this._restrictPattern = null, this._type = "text", this._prompt = "", this._promptColor = "#A9A9A9", this._originColor = "#000000", this._content = "", e.__super.call(this), this._maxChars = 1e5, this._width = 100, this._height = 20, this.multiline = !1, this.overflow = Text.SCROLL, this.on("mousedown", this, this._onMouseDown), this.on("undisplay", this, this._onUnDisplay);
    }__class(e, "laya.display.Input", t);var i = e.prototype;return i.setSelection = function (t, e) {
      this.focus = !0, laya.display.Input.inputElement.selectionStart = t, laya.display.Input.inputElement.selectionEnd = e;
    }, i._onUnDisplay = function (t) {
      this.focus = !1;
    }, i._onMouseDown = function (t) {
      this.focus = !0;
    }, i._syncInputTransform = function () {
      var t = this.nativeInput,
          i = Utils.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]),
          n = this._width - this.padding[1] - this.padding[3],
          s = this._height - this.padding[0] - this.padding[2];Render.isConchApp ? (t.setScale(i.scaleX, i.scaleY), t.setSize(n, s), t.setPos(i.x, i.y)) : (e.inputContainer.style.transform = e.inputContainer.style.webkitTransform = "scale(" + i.scaleX + "," + i.scaleY + ") rotate(" + Laya.stage.canvasDegree + "deg)", t.style.width = n + "px", t.style.height = s + "px", e.inputContainer.style.left = i.x + "px", e.inputContainer.style.top = i.y + "px");
    }, i.select = function () {
      this.nativeInput.select();
    }, i._setInputMethod = function () {
      e.input.parentElement && e.inputContainer.removeChild(e.input), e.area.parentElement && e.inputContainer.removeChild(e.area), e.inputElement = this._multiline ? e.area : e.input, e.inputContainer.appendChild(e.inputElement), Text.RightToLeft && (e.inputElement.style.direction = "rtl");
    }, i._focusIn = function () {
      laya.display.Input.isInputting = !0;var t = this.nativeInput;this._focus = !0;var e = t.style;e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap", this._setPromptColor(), t.readOnly = !this._editable, Render.isConchApp && (t.setType(this._type), t.setForbidEdit(!this._editable)), t.maxLength = this._maxChars;this.padding;if (t.type = this._type, t.value = this._content, t.placeholder = this._prompt, Laya.stage.off("keydown", this, this._onKeyDown), Laya.stage.on("keydown", this, this._onKeyDown), Laya.stage.focus = this, this.event("focus"), Browser.onPC && t.focus(), !Browser.onMiniGame) {
        this._text;this._text = null;
      }this.typeset(), t.setColor(this._originColor), t.setFontSize(this.fontSize), t.setFontFace(Browser.onIPhone ? Text._fontFamilyMap[this.font] || this.font : this.font), Render.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline), e.lineHeight = this.leading + this.fontSize + "px", e.fontStyle = this.italic ? "italic" : "normal", e.fontWeight = this.bold ? "bold" : "normal", e.textAlign = this.align, e.padding = "0 0", this._syncInputTransform(), !Render.isConchApp && Browser.onPC && Laya.timer.frameLoop(1, this, this._syncInputTransform);
    }, i._setPromptColor = function () {
      (e.promptStyleDOM = Browser.getElementById("promptStyle")) || ((e.promptStyleDOM = Browser.createElement("style")).setAttribute("id", "promptStyle"), Browser.document.head.appendChild(e.promptStyleDOM)), e.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}";
    }, i._focusOut = function () {
      laya.display.Input.isInputting = !1, this._focus = !1, this._text = null, this._content = this.nativeInput.value, this._content ? (Laya.superSet(Text, this, "text", this._content), Laya.superSet(Text, this, "color", this._originColor)) : (Laya.superSet(Text, this, "text", this._prompt), Laya.superSet(Text, this, "color", this._promptColor)), Laya.stage.off("keydown", this, this._onKeyDown), Laya.stage.focus = null, this.event("blur"), Render.isConchApp && this.nativeInput.blur(), Browser.onPC && Laya.timer.clear(this, this._syncInputTransform);
    }, i._onKeyDown = function (t) {
      13 === t.keyCode && (Browser.onMobile && !this._multiline && (this.focus = !1), this.event("enter"));
    }, i.changeText = function (e) {
      this._content = e, this._focus ? (this.nativeInput.value = e || "", this.event("change")) : t.prototype.changeText.call(this, e);
    }, __getset(0, i, "color", t.prototype._$get_color, function (t) {
      this._focus && this.nativeInput.setColor(t), Laya.superSet(Text, this, "color", this._content ? t : this._promptColor), this._originColor = t;
    }), __getset(0, i, "inputElementYAdjuster", function () {
      return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"), 0;
    }, function (t) {
      console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
    }), __getset(0, i, "multiline", function () {
      return this._multiline;
    }, function (t) {
      this._multiline = t, this.valign = t ? "top" : "middle";
    }), __getset(0, i, "maxChars", function () {
      return this._maxChars;
    }, function (t) {
      t <= 0 && (t = 1e5), this._maxChars = t;
    }), __getset(0, i, "text", function () {
      return this._focus ? this.nativeInput.value : this._content || "";
    }, function (t) {
      Laya.superSet(Text, this, "color", this._originColor), t += "", this._focus ? (this.nativeInput.value = t || "", this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")), this._content = t, t ? Laya.superSet(Text, this, "text", t) : (Laya.superSet(Text, this, "text", this._prompt), Laya.superSet(Text, this, "color", this.promptColor)));
    }), __getset(0, i, "nativeInput", function () {
      return this._multiline ? e.area : e.input;
    }), __getset(0, i, "prompt", function () {
      return this._prompt;
    }, function (t) {
      !this._text && t && Laya.superSet(Text, this, "color", this._promptColor), this.promptColor = this._promptColor, this._text ? Laya.superSet(Text, this, "text", this._text == this._prompt ? t : this._text) : Laya.superSet(Text, this, "text", t), this._prompt = Text.langPacks && Text.langPacks[t] ? Text.langPacks[t] : t;
    }), __getset(0, i, "focus", function () {
      return this._focus;
    }, function (t) {
      var i = this.nativeInput;this._focus !== t && (t ? (i.target ? i.target._focusOut() : this._setInputMethod(), i.target = this, this._focusIn()) : (i.target = null, this._focusOut(), Browser.document.body.scrollTop = 0, i.blur(), Render.isConchApp ? i.setPos(-1e4, -1e4) : e.inputContainer.contains(i) && e.inputContainer.removeChild(i)));
    }), __getset(0, i, "restrict", function () {
      return this._restrictPattern ? this._restrictPattern.source : "";
    }, function (t) {
      t ? ((t = "[^" + t + "]").indexOf("^^") > -1 && (t = t.replace("^^", "")), this._restrictPattern = new RegExp(t, "g")) : this._restrictPattern = null;
    }), __getset(0, i, "editable", function () {
      return this._editable;
    }, function (t) {
      this._editable = t, Render.isConchApp && e.input.setForbidEdit(!t);
    }), __getset(0, i, "promptColor", function () {
      return this._promptColor;
    }, function (t) {
      this._promptColor = t, this._content || Laya.superSet(Text, this, "color", t);
    }), __getset(0, i, "type", function () {
      return this._type;
    }, function (t) {
      this._getCSSStyle().password = "password" == t, this._type = t, Render.isConchApp && this.nativeInput.setType(t);
    }), __getset(0, i, "inputElementXAdjuster", function () {
      return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"), 0;
    }, function (t) {
      console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
    }), __getset(0, i, "asPassword", function () {
      return this._getCSSStyle().password;
    }, function (t) {
      this._getCSSStyle().password = t, this._type = "password", console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'), this.isChanged = !0;
    }), e.__init__ = function () {
      e._createInputElement(), Browser.onMobile && Render.canvas.addEventListener(e.IOS_IFRAME ? Browser.onMiniGame ? "touchend" : "click" : "touchend", e._popupInputMethod);
    }, e._popupInputMethod = function (t) {
      if (laya.display.Input.isInputting) {
        laya.display.Input.inputElement.focus();
      }
    }, e._createInputElement = function () {
      e._initInput(e.area = Browser.createElement("textarea")), e._initInput(e.input = Browser.createElement("input")), (e.inputContainer = Browser.createElement("div")).style.position = "absolute", e.inputContainer.style.zIndex = 1e5, Browser.container.appendChild(e.inputContainer), e.inputContainer.setPos = function (t, i) {
        e.inputContainer.style.left = t + "px", e.inputContainer.style.top = i + "px";
      };
    }, e._initInput = function (t) {
      var i = t.style;i.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;", i.resize = "none", i.backgroundColor = "transparent", i.border = "none", i.outline = "none", i.zIndex = 1, t.addEventListener("input", e._processInputting), t.addEventListener("mousemove", e._stopEvent), t.addEventListener("mousedown", e._stopEvent), t.addEventListener("touchmove", e._stopEvent), t.setFontFace = function (e) {
        t.style.fontFamily = e;
      }, Render.isConchApp || (t.setColor = function (e) {
        t.style.color = e;
      }, t.setFontSize = function (e) {
        t.style.fontSize = e + "px";
      });
    }, e._processInputting = function (t) {
      var e = laya.display.Input.inputElement.target;if (e) {
        var i = laya.display.Input.inputElement.value;e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""), e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""), laya.display.Input.inputElement.value = i)), e._text = i, e.event("input");
      }
    }, e._stopEvent = function (t) {
      "touchmove" == t.type && t.preventDefault(), t.stopPropagation && t.stopPropagation();
    }, e.TYPE_TEXT = "text", e.TYPE_PASSWORD = "password", e.TYPE_EMAIL = "email", e.TYPE_URL = "url", e.TYPE_NUMBER = "number", e.TYPE_RANGE = "range", e.TYPE_DATE = "date", e.TYPE_MONTH = "month", e.TYPE_WEEK = "week", e.TYPE_TIME = "time", e.TYPE_DATE_TIME = "datetime", e.TYPE_DATE_TIME_LOCAL = "datetime-local", e.TYPE_SEARCH = "search", e.input = null, e.area = null, e.inputElement = null, e.inputContainer = null, e.confirmButton = null, e.promptStyleDOM = null, e.inputHeight = 45, e.isInputting = !1, e.stageMatrix = null, __static(e, ["IOS_IFRAME", function () {
      return this.IOS_IFRAME = Browser.onIOS && Browser.window.top != Browser.window.self;
    }]), e;
  }(Text),
      HTMLImage = function (t) {
    function e(t, i) {
      this._recreateLock = !1, this._needReleaseAgain = !1, this._enableMerageInAtlas = !0, e.__super.call(this), this._init_(t, i);
    }__class(e, "laya.resource.HTMLImage", FileBitmap);var i = e.prototype;return i._init_ = function (t, e) {
      this._src = t, this._source = new Browser.window.Image(), e && (e.onload && (this.onload = e.onload), e.onerror && (this.onerror = e.onerror), e.onCreate && e.onCreate(this)), 0 != t.indexOf("data:image") && (this._source.crossOrigin = ""), t && (this._source.src = t);
    }, i.recreateResource = function () {
      var t = this;if ("" === this._src) throw new Error("src no null！");if (this._needReleaseAgain = !1, this._source) {
        if (this._recreateLock) return;this.memorySize = this._w * this._h * 4, this._recreateLock = !1, this.completeCreate();
      } else {
        this._recreateLock = !0;var e = this;this._source = new Browser.window.Image(), this._source.crossOrigin = "", this._source.onload = function () {
          if (e._needReleaseAgain) return e._needReleaseAgain = !1, e._source.onload = null, void (e._source = null);e._source.onload = null, e.memorySize = t._w * t._h * 4, e._recreateLock = !1, e.completeCreate();
        }, this._source.src = this._src;
      }
    }, i.detoryResource = function () {
      this._recreateLock && (this._needReleaseAgain = !0), this._source && (this._source = null, this.memorySize = 0);
    }, i.onresize = function () {
      this._w = this._source.width, this._h = this._source.height;
    }, __getset(0, i, "onload", null, function (t) {
      var e = this;this._onload = t, this._source && (this._source.onload = null != this._onload ? function () {
        e.onresize(), e._onload();
      } : null);
    }), __getset(0, i, "onerror", null, function (t) {
      var e = this;this._onerror = t, this._source && (this._source.onerror = null != this._onerror ? function () {
        e._onerror();
      } : null);
    }), __getset(0, i, "enableMerageInAtlas", function () {
      return this._enableMerageInAtlas;
    }, function (t) {
      this._enableMerageInAtlas = t, Render.isConchApp && this._source && (this._source.enableMerageInAtlas = t);
    }), e.create = function (t, i) {
      return new e(t, i);
    }, e;
  }(),
      EffectAnimation = function (t) {
    function e() {
      this._target = null, this._playEvents = null, this._initData = {}, this._aniKeys = null, this._effectClass = null, e.__super.call(this);
    }__class(e, "laya.display.EffectAnimation", t);var i = e.prototype;return i._onOtherBegin = function (t) {
      t != this && this.stop();
    }, i.addEvent = function () {
      this._target && this._playEvents && (this._setControlNode(this._target), this._target.on(this._playEvents, this, this._onPlayAction));
    }, i._onPlayAction = function () {
      this._target && (this._target.event("effectanimationbegin", [this]), this._recordInitData(), this.play(0, !1));
    }, i._recordInitData = function () {
      if (this._aniKeys) {
        var t = 0,
            e = 0;e = this._aniKeys.length;var i;for (t = 0; t < e; t++) {
          i = this._aniKeys[t], this._initData[i] = this._target[i];
        }
      }
    }, i._displayToIndex = function (t) {
      if (this._animationData) {
        t < 0 && (t = 0), t > this._count && (t = this._count);var e = this._animationData.nodes,
            i = 0,
            n = e.length;for (n = n > 1 ? 1 : n, i = 0; i < n; i++) {
          this._displayNodeToFrame(e[i], t);
        }
      }
    }, i._displayNodeToFrame = function (t, e, i) {
      if (this._target) {
        var n;n = this._target;var s,
            r,
            a,
            o,
            h = t.frames,
            l = t.keys,
            u = 0,
            c = l.length;o = t.secondFrames;var _,
            d,
            f,
            p,
            g = 0;for (u = 0; u < c; u++) {
          r = h[s = l[u]], -1 == (g = o[s]) ? a = this._initData[s] : e < g ? (f = (d = t.keyframes[s])[0]).tween ? (null == (_ = Ease[f.tweenMethod]) && (_ = Ease.linearNone), p = d[1], a = _(e, this._initData[s], p.value - this._initData[s], p.index)) : a = this._initData[s] : a = r.length > e ? r[e] : r[r.length - 1], n[s] = a;
        }
      }
    }, i._calculateNodeKeyFrames = function (e) {
      t.prototype._calculateNodeKeyFrames.call(this, e);var i,
          n,
          s,
          r = e.keyframes;e.target;s = {}, e.secondFrames = s;for (i in r) {
        (n = r[i]).length <= 1 ? s[i] = -1 : s[i] = n[1].index;
      }
    }, __getset(0, i, "target", function () {
      return this._target;
    }, function (t) {
      this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin), this._target = t, this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin), this.addEvent();
    }), __getset(0, i, "playEvent", null, function (t) {
      this._playEvents = t, t && this.addEvent();
    }), __getset(0, i, "effectData", null, function (t) {
      if (t) {
        var e;(e = t.animations) && e[0] && (this._setUp({}, e[0]), e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys));
      }
    }), __getset(0, i, "effectClass", null, function (t) {
      if (this._effectClass = ClassUtils.getClass(t), this._effectClass) {
        var e;if (e = this._effectClass.uiView) {
          var i;(i = e.animations) && i[0] && (this._setUp({}, i[0]), i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys));
        }
      }
    }), e.EffectAnimationBegin = "effectanimationbegin", e;
  }(FrameAnimation),
      GraphicAnimation = function (t) {
    function e() {
      this.animationList = null, this.animationDic = null, this._nodeList = null, this._nodeDefaultProps = null, this._gList = null, this._nodeIDAniDic = {}, this._rootNode = null, this._nodeGDic = null, e.__super.call(this);
    }var i;__class(e, "laya.utils.GraphicAnimation", t);var n = e.prototype;return n._parseNodeList = function (t) {
      this._nodeList || (this._nodeList = []), this._nodeDefaultProps[t.compId] = t.props, t.compId && this._nodeList.push(t.compId);var e = t.child;if (e) {
        var i = 0,
            n = e.length;for (i = 0; i < n; i++) {
          this._parseNodeList(e[i]);
        }
      }
    }, n._calGraphicData = function (t) {
      if (this._setUp(null, t), this._createGraphicData(), this._nodeIDAniDic) {
        var e;for (e in this._nodeIDAniDic) {
          this._nodeIDAniDic[e] = null;
        }
      }
    }, n._createGraphicData = function () {
      var t = [],
          e = 0,
          i = this.count,
          n = this._animationNewFrames;n || (n = []);var s;for (e = 0; e < i; e++) {
        !n[e] && s || (s = this._createFrameGraphic(e)), t.push(s);
      }this._gList = t;
    }, n._createFrameGraphic = function (t) {
      var i = RunDriver.createGraphics();return e._rootMatrix || (e._rootMatrix = new Matrix()), this._updateNodeGraphic(this._rootNode, t, e._rootMatrix, i), i;
    }, n._updateNodeGraphic = function (t, e, i, n, s) {
      void 0 === s && (s = 1);var r,
          a = (r = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * s;if (!(a < .01)) {
        r.resultTransform || (r.resultTransform = Matrix.create());var o;o = r.resultTransform, Matrix.mul(r.transform, i, o);var h;r.skin && (h = this._getTextureByUrl(r.skin)) && (o._checkTransform() ? (n.drawTexture(h, 0, 0, r.width, r.height, o, a), r.resultTransform = null) : n.drawTexture(h, o.tx, o.ty, r.width, r.height, null, a));var l;if (l = t.child) {
          var u = 0,
              c = 0;for (c = l.length, u = 0; u < c; u++) {
            this._updateNodeGraphic(l[u], e, o, n, a);
          }
        }
      }
    }, n._updateNoChilds = function (t, e) {
      if (t.skin) {
        var i = this._getTextureByUrl(t.skin);if (i) {
          var n = t.transform;n._checkTransform();!n.bTransform ? e.drawTexture(i, n.tx, n.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, n.clone(), t.alpha);
        }
      }
    }, n._updateNodeGraphic2 = function (t, e, i) {
      var n;if (n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]), t.child) {
        var s = n.transform;s._checkTransform();var r = !1,
            a = !1;a = (r = !s.bTransform) && (0 != s.tx || 0 != s.ty);var o = !1;(o = s.bTransform || 1 != n.alpha) && i.save(), 1 != n.alpha && i.alpha(n.alpha), r ? a && i.translate(s.tx, s.ty) : i.transform(s.clone());var h;h = t.child;var l;if (n.skin && (l = this._getTextureByUrl(n.skin)) && i.drawTexture(l, 0, 0, n.width, n.height), h) {
          var u = 0,
              c = 0;for (c = h.length, u = 0; u < c; u++) {
            this._updateNodeGraphic2(h[u], e, i);
          }
        }o ? i.restore() : r ? a && i.translate(-s.tx, -s.ty) : i.transform(s.clone().invert());
      } else this._updateNoChilds(n, i);
    }, n._calculateNodeKeyFrames = function (e) {
      t.prototype._calculateNodeKeyFrames.call(this, e), this._nodeIDAniDic[e.target] = e;
    }, n.getNodeDataByID = function (t) {
      return this._nodeIDAniDic[t];
    }, n._getParams = function (t, i, n, s) {
      var r = e._temParam;r.length = i.length;var a = 0,
          o = i.length;for (a = 0; a < o; a++) {
        r[a] = this._getObjVar(t, i[a][0], n, i[a][1], s);
      }return r;
    }, n._getObjVar = function (t, e, i, n, s) {
      if (t.hasOwnProperty(e)) {
        var r = t[e];return i >= r.length && (i = r.length - 1), t[e][i];
      }return s.hasOwnProperty(e) ? s[e] : n;
    }, n._getNodeGraphicData = function (t, n, s) {
      s || (s = i.create()), s.transform ? s.transform.identity() : s.transform = Matrix.create();var r = this.getNodeDataByID(t);if (!r) return s;var a = r.frames,
          o = this._getParams(a, e._drawTextureCmd, n, this._nodeDefaultProps[t]),
          h = o[0],
          l = NaN,
          u = NaN,
          c = o[5],
          _ = o[6],
          d = o[13],
          f = o[14],
          p = o[7],
          g = o[8],
          m = o[9],
          v = o[11],
          y = o[12];l = o[3], u = o[4], 0 != l && 0 != u || (h = null), -1 == l && (l = 0), -1 == u && (u = 0);var w;s.skin = h, s.width = l, s.height = u, h && ((w = this._getTextureByUrl(h)) ? (l || (l = w.sourceWidth), u || (u = w.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")), s.alpha = o[10];var x;x = s.transform, 0 != d && (c = d * l), 0 != f && (_ = f * u), 0 == c && 0 == _ || x.translate(-c, -_);var T = null;if (m || 1 !== p || 1 !== g || v || y) {
        (T = e._tempMt).identity(), T.bTransform = !0;var b = .0174532922222222 * (m - v),
            C = .0174532922222222 * (m + y),
            M = Math.cos(C),
            S = Math.sin(C),
            L = Math.sin(b),
            R = Math.cos(b);T.a = p * M, T.b = p * S, T.c = -g * L, T.d = g * R, T.tx = T.ty = 0;
      }return T && (x = Matrix.mul(x, T, x)), x.translate(o[1], o[2]), s;
    }, n._getTextureByUrl = function (t) {
      return Loader.getRes(t);
    }, n.setAniData = function (t, i) {
      if (t.animations) {
        this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = t, this._parseNodeList(t);var n,
            s = {},
            r = [],
            a = t.animations,
            o = 0,
            h = a.length;for (o = 0; o < h; o++) {
          if (n = a[o], this._labels = null, (!i || i == n.name) && n) {
            try {
              this._calGraphicData(n);
            } catch (t) {
              console.warn("parse animation fail:" + n.name + ",empty animation created"), this._gList = [];
            }var l = {};l.interval = 1e3 / n.frameRate, l.frames = this._gList, l.labels = this._labels, l.name = n.name, r.push(l), s[n.name] = l;
          }
        }this.animationList = r, this.animationDic = s;
      }e._temParam.length = 0;
    }, n.parseByData = function (t) {
      var e, i;e = t.nodeRoot, i = t.aniO, delete t.nodeRoot, delete t.aniO, this._nodeDefaultProps = {}, this._nodeGDic = {}, this._nodeList && (this._nodeList.length = 0), this._rootNode = e, this._parseNodeList(e), this._labels = null;try {
        this._calGraphicData(i);
      } catch (t) {
        console.warn("parse animation fail:" + i.name + ",empty animation created"), this._gList = [];
      }var n = t;return n.interval = 1e3 / i.frameRate, n.frames = this._gList, n.labels = this._labels, n.name = i.name, n;
    }, n.setUpAniData = function (t) {
      if (t.animations) {
        var e,
            i = {},
            n = [],
            s = t.animations,
            r = 0,
            a = s.length;for (r = 0; r < a; r++) {
          if (e = s[r]) {
            var o = {};o.name = e.name, o.aniO = e, o.nodeRoot = t, n.push(o), i[e.name] = o;
          }
        }this.animationList = n, this.animationDic = i;
      }
    }, n._clear = function () {
      if (this.animationList = null, this.animationDic = null, this._gList = null, this._nodeGDic) {
        var t, e;for (t in this._nodeGDic) {
          (e = this._nodeGDic[t]) && e.recover();
        }
      }this._nodeGDic = null;
    }, e.parseAnimationByData = function (t) {
      e._I || (e._I = new e());var i;return i = e._I.parseByData(t), e._I._clear(), i;
    }, e.parseAnimationData = function (t) {
      e._I || (e._I = new e()), e._I.setUpAniData(t);var i;return i = {}, i.animationList = e._I.animationList, i.animationDic = e._I.animationDic, e._I._clear(), i;
    }, e._temParam = [], e._I = null, e._rootMatrix = null, __static(e, ["_drawTextureCmd", function () {
      return this._drawTextureCmd = [["skin", null], ["x", 0], ["y", 0], ["width", -1], ["height", -1], ["pivotX", 0], ["pivotY", 0], ["scaleX", 1], ["scaleY", 1], ["rotation", 0], ["alpha", 1], ["skewX", 0], ["skewY", 0], ["anchorX", 0], ["anchorY", 0]];
    }, "_tempMt", function () {
      return this._tempMt = new Matrix();
    }]), e.__init$ = function () {
      i = function () {
        function t() {
          this.skin = null, this.transform = null, this.resultTransform = null, this.width = NaN, this.height = NaN, this.alpha = 1;
        }__class(t, "");return t.prototype.recover = function () {
          this.skin = null, this.width = 0, this.height = 0, this.alpha = 1, this.transform && (this.transform.destroy(), this.transform = null), this.resultTransform && (this.resultTransform.destroy(), this.resultTransform = null), Pool.recover("GraphicNode", this);
        }, t.create = function () {
          return Pool.getItemByClass("GraphicNode", t);
        }, t;
      }();
    }, e;
  }(FrameAnimation);Laya.__init([EventDispatcher, LoaderManager, Render, Browser, Timer, LocalStorage, TimeLine, GraphicAnimation]);
}(window, document, Laya), function (t, e, i) {
  i.un, i.uns, i.static;var n = i.class;i.getset, i.__newvec;new (function () {
    function t() {}return n(t, "LayaMain"), t;
  }())();
}(window, document, Laya), "function" == "function" && __webpack_require__(29) && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (t, e) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: !0 });for (var i in Laya) {
    var n = Laya[i];n && n.__isclass && (e[i] = n);
  }
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function (t, i, e) {
  e.un, e.uns;var s = e.static,
      h = e.class,
      n = e.getset,
      o = (e.__newvec, laya.display.Animation),
      r = laya.utils.Browser,
      l = laya.utils.ClassUtils,
      a = laya.filters.ColorFilter,
      c = laya.utils.Ease,
      u = laya.events.Event,
      _ = laya.display.css.Font,
      d = laya.display.FrameAnimation,
      f = laya.display.Graphics,
      p = laya.utils.Handler,
      g = laya.display.Input,
      m = laya.net.Loader,
      y = (laya.display.Node, laya.maths.Point),
      v = laya.maths.Rectangle,
      C = laya.renders.Render,
      b = laya.display.Sprite,
      S = laya.display.Text,
      w = laya.resource.Texture,
      x = laya.utils.Tween,
      B = laya.utils.Utils,
      k = laya.utils.WeakObject;e.interface("laya.ui.IItem"), e.interface("laya.ui.ISelect"), e.interface("laya.ui.IRender"), e.interface("laya.ui.IComponent"), e.interface("laya.ui.IBox", "IComponent");var I = function () {
    function t() {
      this.enable = !1, this.top = NaN, this.bottom = NaN, this.left = NaN, this.right = NaN, this.centerX = NaN, this.centerY = NaN, this.anchorX = NaN, this.anchorY = NaN;
    }return h(t, "laya.ui.LayoutStyle"), s(t, ["EMPTY", function () {
      return this.EMPTY = new t();
    }]), t;
  }(),
      M = function () {
    function t() {}return h(t, "laya.ui.Styles"), t.labelColor = "#000000", t.buttonStateNum = 3, t.scrollBarMinNum = 15, t.scrollBarDelayTime = 500, s(t, ["defaultSizeGrid", function () {
      return this.defaultSizeGrid = [4, 4, 4, 4, 0];
    }, "labelPadding", function () {
      return this.labelPadding = [2, 2, 2, 2];
    }, "inputLabelPadding", function () {
      return this.inputLabelPadding = [1, 1, 1, 3];
    }, "buttonLabelColors", function () {
      return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"];
    }, "comboBoxItemColors", function () {
      return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"];
    }]), t;
  }(),
      L = function () {
    function t() {}return h(t, "laya.ui.UIUtils"), t.fillArray = function (t, i, e) {
      var s = t.concat();if (i) for (var h = i.split(","), n = 0, o = Math.min(s.length, h.length); n < o; n++) {
        var r = h[n];s[n] = "true" == r || "false" != r && r, null != e && (s[n] = e(r));
      }return s;
    }, t.toColor = function (t) {
      return B.toHexColor(t);
    }, t.gray = function (i, e) {
      void 0 === e && (e = !0), e ? t.addFilter(i, t.grayFilter) : t.clearFilter(i, a);
    }, t.addFilter = function (t, i) {
      var e = t.filters || [];e.push(i), t.filters = e;
    }, t.clearFilter = function (t, i) {
      var s = t.filters;if (null != s && s.length > 0) {
        for (var h = s.length - 1; h > -1; h--) {
          var n = s[h];e.__typeof(n, i) && s.splice(h, 1);
        }t.filters = s;
      }
    }, t._getReplaceStr = function (i) {
      return t.escapeSequence[i];
    }, t.adptString = function (i) {
      return i.replace(/\\(\w)/g, t._getReplaceStr);
    }, t.getBindFun = function (i) {
      var e = t._funMap.get(i);if (null == e) {
        var s = '"' + i + '"',
            h = "(function(data){if(data==null)return;with(data){try{\nreturn " + (s = s.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"')) + "\n}catch(e){}}})";e = r.window.eval(h), t._funMap.set(i, e);
      }return e;
    }, s(t, ["grayFilter", function () {
      return this.grayFilter = new a([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
    }, "escapeSequence", function () {
      return this.escapeSequence = { "\\n": "\n", "\\t": "\t" };
    }, "_funMap", function () {
      return this._funMap = new k();
    }]), t;
  }(),
      z = function () {
    function t() {}return h(t, "UIConfig"), t.touchScrollEnable = !0, t.mouseWheelEnable = !0, t.showButtons = !0, t.popupBgColor = "#000000", t.popupBgAlpha = .5, t.closeDialogOnSide = !0, t;
  }(),
      T = function (t) {
    function i() {
      this.autoCacheCmd = !0, this._width = 0, this._height = 0, this._source = null, this._sizeGrid = null, this._isChanged = !1, this._offset = null, i.__super.call(this);
    }h(i, "laya.ui.AutoBitmap", t);var s = i.prototype;return s.destroy = function () {
      t.prototype.destroy.call(this), this._source = null, this._sizeGrid = null, this._offset = null;
    }, s._setChanged = function () {
      this._isChanged || (this._isChanged = !0, e.timer.callLater(this, this.changeSource));
    }, s.changeSource = function () {
      this._isChanged = !1;var t = this._source;if (t && t.bitmap) {
        var e = this.width,
            s = this.height,
            h = this._sizeGrid,
            n = t.sourceWidth,
            o = t.sourceHeight;if (!h || n === e && o === s) this.cleanByTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, e, s);else {
          t.$_GID || (t.$_GID = B.getGID());var r = t.$_GID + "." + e + "." + s + "." + h.join(".");if (k.I.get(r)) return void (this.cmds = k.I.get(r));this.clear();var l = h[0],
              a = h[1],
              c = h[2],
              u = h[3],
              _ = h[4],
              d = !1;if (e == n && (u = a = 0), s == o && (l = c = 0), u + a > e) {
            var f = e;d = !0, e = u + a, this.save(), this.clipRect(0, 0, f, s);
          }u && l && this.drawTexture(i.getTexture(t, 0, 0, u, l), 0, 0, u, l), a && l && this.drawTexture(i.getTexture(t, n - a, 0, a, l), e - a, 0, a, l), u && c && this.drawTexture(i.getTexture(t, 0, o - c, u, c), 0, s - c, u, c), a && c && this.drawTexture(i.getTexture(t, n - a, o - c, a, c), e - a, s - c, a, c), l && this.drawBitmap(_, i.getTexture(t, u, 0, n - u - a, l), u, 0, e - u - a, l), c && this.drawBitmap(_, i.getTexture(t, u, o - c, n - u - a, c), u, s - c, e - u - a, c), u && this.drawBitmap(_, i.getTexture(t, 0, l, u, o - l - c), 0, l, u, s - l - c), a && this.drawBitmap(_, i.getTexture(t, n - a, l, a, o - l - c), e - a, l, a, s - l - c), this.drawBitmap(_, i.getTexture(t, u, l, n - u - a, o - l - c), u, l, e - u - a, s - l - c), d && this.restore(), this.autoCacheCmd && !C.isConchApp && k.I.set(r, this.cmds);
        }this._repaint();
      }
    }, s.drawBitmap = function (t, i, e, s, h, n) {
      void 0 === h && (h = 0), void 0 === n && (n = 0), h < .1 || n < .1 || (!t || i.width == h && i.height == n ? this.drawTexture(i, e, s, h, n) : this.fillTexture(i, e, s, h, n));
    }, s.clear = function (i) {
      void 0 === i && (i = !0), t.prototype.clear.call(this, !1);
    }, n(0, s, "sizeGrid", function () {
      return this._sizeGrid;
    }, function (t) {
      this._sizeGrid = t, this._setChanged();
    }), n(0, s, "width", function () {
      return this._width ? this._width : this._source ? this._source.sourceWidth : 0;
    }, function (t) {
      this._width != t && (this._width = t, this._setChanged());
    }), n(0, s, "height", function () {
      return this._height ? this._height : this._source ? this._source.sourceHeight : 0;
    }, function (t) {
      this._height != t && (this._height = t, this._setChanged());
    }), n(0, s, "source", function () {
      return this._source;
    }, function (t) {
      t ? (this._source = t, this._setChanged()) : (this._source = null, this.clear());
    }), i.getTexture = function (t, i, e, s, h) {
      s <= 0 && (s = 1), h <= 0 && (h = 1), t.$_GID || (t.$_GID = B.getGID());var n = t.$_GID + "." + i + "." + e + "." + s + "." + h,
          o = k.I.get(n);return o || (o = w.createFromTexture(t, i, e, s, h), k.I.set(n, o)), o;
    }, i;
  }(f),
      P = (function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.UIEvent", u), i.SHOW_TIP = "showtip", i.HIDE_TIP = "hidetip";
  }(), function (t) {
    function i() {
      this._comXml = null, this._dataSource = null, this._toolTip = null, this._tag = null, this._disabled = !1, this._gray = !1, this.layoutEnabled = !0, i.__super.call(this), this._layout = I.EMPTY, this.preinitialize(), this.createChildren(), this.initialize();
    }h(i, "laya.ui.Component", t);var s = i.prototype;return e.imps(s, { "laya.ui.IComponent": !0 }), s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._dataSource = this._layout = null, this._tag = null, this._toolTip = null;
    }, s.preinitialize = function () {}, s.createChildren = function () {}, s.initialize = function () {}, s.callLater = function (t, i) {
      e.timer.callLater(this, t, i);
    }, s.runCallLater = function (t) {
      e.timer.runCallLater(this, t);
    }, s.commitMeasure = function () {}, s.changeSize = function () {
      this.event("resize");
    }, s.getLayout = function () {
      return this._layout === I.EMPTY && (this._layout = new I()), this._layout;
    }, s._setLayoutEnabled = function (t) {
      this._layout && this._layout.enable != t && (this._layout.enable = t, this.on("added", this, this.onAdded), this.on("removed", this, this.onRemoved), this.parent && this.onAdded());
    }, s.onRemoved = function () {
      this.parent.off("resize", this, this.onCompResize);
    }, s.onAdded = function () {
      this.parent.on("resize", this, this.onCompResize), this.resetLayoutX(), this.resetLayoutY();
    }, s.onCompResize = function () {
      this._layout && this._layout.enable && (this.resetLayoutX(), this.resetLayoutY());
    }, s.resetLayoutX = function () {
      var t = this._layout;if (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width), this.layoutEnabled) {
        var i = this.parent;i && (isNaN(t.centerX) ? isNaN(t.left) ? isNaN(t.right) || (this.x = Math.round(i.width - this.displayWidth - t.right + this.pivotX * this.scaleX)) : (this.x = Math.round(t.left + this.pivotX * this.scaleX), isNaN(t.right) || (this.width = (i._width - t.left - t.right) / (this.scaleX || .01))) : this.x = Math.round(.5 * (i.width - this.displayWidth) + t.centerX + this.pivotX * this.scaleX));
      }
    }, s.resetLayoutY = function () {
      var t = this._layout;if (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height), this.layoutEnabled) {
        var i = this.parent;i && (isNaN(t.centerY) ? isNaN(t.top) ? isNaN(t.bottom) || (this.y = Math.round(i.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY)) : (this.y = Math.round(t.top + this.pivotY * this.scaleY), isNaN(t.bottom) || (this.height = (i._height - t.top - t.bottom) / (this.scaleY || .01))) : this.y = Math.round(.5 * (i.height - this.displayHeight) + t.centerY + this.pivotY * this.scaleY));
      }
    }, s.onMouseOver = function (t) {
      e.stage.event("showtip", this._toolTip);
    }, s.onMouseOut = function (t) {
      e.stage.event("hidetip", this._toolTip);
    }, n(0, s, "displayWidth", function () {
      return this.width * this.scaleX;
    }), n(0, s, "width", function () {
      return this._width ? this._width : this.measureWidth;
    }, function (t) {
      this._width != t && (this._width = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerX) && isNaN(this._layout.right) && isNaN(this._layout.anchorX) || this.resetLayoutX());
    }), n(0, s, "measureWidth", function () {
      var t = 0;this.commitMeasure();for (var i = this.numChildren - 1; i > -1; i--) {
        var e = this.getChildAt(i);e.visible && (t = Math.max(e.x + e.width * e.scaleX, t));
      }return t;
    }), n(0, s, "displayHeight", function () {
      return this.height * this.scaleY;
    }), n(0, s, "height", function () {
      return this._height ? this._height : this.measureHeight;
    }, function (t) {
      this._height != t && (this._height = t, this.conchModel && this.conchModel.size(this._width, this._height), this.callLater(this.changeSize), !this._layout.enable || isNaN(this._layout.centerY) && isNaN(this._layout.bottom) && isNaN(this._layout.anchorY) || this.resetLayoutY());
    }), n(0, s, "dataSource", function () {
      return this._dataSource;
    }, function (t) {
      this._dataSource = t;for (var i in this._dataSource) {
        this.hasOwnProperty(i) && "function" != typeof this[i] && (this[i] = this._dataSource[i]);
      }
    }), n(0, s, "scaleY", t.prototype._$get_scaleY, function (t) {
      e.superGet(b, this, "scaleY") != t && (e.superSet(b, this, "scaleY", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutY());
    }), n(0, s, "measureHeight", function () {
      var t = 0;this.commitMeasure();for (var i = this.numChildren - 1; i > -1; i--) {
        var e = this.getChildAt(i);e.visible && (t = Math.max(e.y + e.height * e.scaleY, t));
      }return t;
    }), n(0, s, "scaleX", t.prototype._$get_scaleX, function (t) {
      e.superGet(b, this, "scaleX") != t && (e.superSet(b, this, "scaleX", t), this.callLater(this.changeSize), this._layout.enable && this.resetLayoutX());
    }), n(0, s, "top", function () {
      return this._layout.top;
    }, function (t) {
      t != this._layout.top && (this.getLayout().top = t, this._setLayoutEnabled(!0)), this.resetLayoutY();
    }), n(0, s, "bottom", function () {
      return this._layout.bottom;
    }, function (t) {
      t != this._layout.bottom && (this.getLayout().bottom = t, this._setLayoutEnabled(!0)), this.resetLayoutY();
    }), n(0, s, "left", function () {
      return this._layout.left;
    }, function (t) {
      t != this._layout.left && (this.getLayout().left = t, this._setLayoutEnabled(!0)), this.resetLayoutX();
    }), n(0, s, "right", function () {
      return this._layout.right;
    }, function (t) {
      t != this._layout.right && (this.getLayout().right = t, this._setLayoutEnabled(!0)), this.resetLayoutX();
    }), n(0, s, "centerX", function () {
      return this._layout.centerX;
    }, function (t) {
      t != this._layout.centerX && (this.getLayout().centerX = t, this._setLayoutEnabled(!0)), this.resetLayoutX();
    }), n(0, s, "centerY", function () {
      return this._layout.centerY;
    }, function (t) {
      t != this._layout.centerY && (this.getLayout().centerY = t, this._setLayoutEnabled(!0)), this.resetLayoutY();
    }), n(0, s, "anchorX", function () {
      return this._layout.anchorX;
    }, function (t) {
      t != this._layout.anchorX && (this.getLayout().anchorX = t, this._setLayoutEnabled(!0)), this.resetLayoutX();
    }), n(0, s, "anchorY", function () {
      return this._layout.anchorY;
    }, function (t) {
      t != this._layout.anchorY && (this.getLayout().anchorY = t, this._setLayoutEnabled(!0)), this.resetLayoutY();
    }), n(0, s, "tag", function () {
      return this._tag;
    }, function (t) {
      this._tag = t;
    }), n(0, s, "toolTip", function () {
      return this._toolTip;
    }, function (t) {
      this._toolTip != t && (this._toolTip = t, null != t ? (this.on("mouseover", this, this.onMouseOver), this.on("mouseout", this, this.onMouseOut)) : (this.off("mouseover", this, this.onMouseOver), this.off("mouseout", this, this.onMouseOut)));
    }), n(0, s, "comXml", function () {
      return this._comXml;
    }, function (t) {
      this._comXml = t;
    }), n(0, s, "gray", function () {
      return this._gray;
    }, function (t) {
      t !== this._gray && (this._gray = t, L.gray(this, t));
    }), n(0, s, "disabled", function () {
      return this._disabled;
    }, function (t) {
      t !== this._disabled && (this.gray = this._disabled = t, this.mouseEnabled = !t);
    }), i;
  }(b)),
      H = function (t) {
    function i() {
      this.lockLayer = null, this.popupEffect = function (t) {
        t.scale(1, 1), x.from(t, { x: e.stage.width / 2, y: e.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, c.backOut, p.create(this, this.doOpen, [t]));
      }, this.closeEffect = function (t, i) {
        x.to(t, { x: e.stage.width / 2, y: e.stage.height / 2, scaleX: 0, scaleY: 0 }, 300, c.strongOut, p.create(this, this.doClose, [t, i]));
      }, i.__super.call(this), this.maskLayer = new b(), this.popupEffectHandler = new p(this, this.popupEffect), this.closeEffectHandler = new p(this, this.closeEffect), this.mouseEnabled = this.maskLayer.mouseEnabled = !0, this.zOrder = 1e3, e.stage.addChild(this), e.stage.on("resize", this, this._onResize), z.closeDialogOnSide && this.maskLayer.on("click", this, this._closeOnSide), this._onResize(null);
    }h(i, "laya.ui.DialogManager", b);var s = i.prototype;return s._closeOnSide = function () {
      var t = this.getChildAt(this.numChildren - 1);t instanceof laya.ui.Dialog && t.close("side");
    }, s.setLockView = function (t) {
      this.lockLayer || (this.lockLayer = new N(), this.lockLayer.mouseEnabled = !0, this.lockLayer.size(e.stage.width, e.stage.height)), this.lockLayer.removeChildren(), t && (t.centerX = t.centerY = 0, this.lockLayer.addChild(t));
    }, s._onResize = function (t) {
      var i = this.maskLayer.width = e.stage.width,
          s = this.maskLayer.height = e.stage.height;this.lockLayer && this.lockLayer.size(i, s), this.maskLayer.graphics.clear(), this.maskLayer.graphics.drawRect(0, 0, i, s, z.popupBgColor), this.maskLayer.alpha = z.popupBgAlpha;for (var h = this.numChildren - 1; h > -1; h--) {
        var n = this.getChildAt(h);n.popupCenter && this._centerDialog(n);
      }
    }, s._centerDialog = function (t) {
      t.x = Math.round((e.stage.width - t.width >> 1) + t.pivotX), t.y = Math.round((e.stage.height - t.height >> 1) + t.pivotY);
    }, s.open = function (t, i, e) {
      void 0 === i && (i = !1), void 0 === e && (e = !1), i && this._closeAll(), t.popupCenter && this._centerDialog(t), this.addChild(t), (t.isModal || this._$P.hasZorder) && this.timer.callLater(this, this._checkMask), e && null != t.popupEffect ? t.popupEffect.runWith(t) : this.doOpen(t), this.event("open");
    }, s.doOpen = function (t) {
      t.onOpened();
    }, s.lock = function (t) {
      this.lockLayer && (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf());
    }, s.close = function (t, i, e) {
      void 0 === e && (e = !1), e && null != t.closeEffect ? t.closeEffect.runWith([t, i]) : this.doClose(t, i), this.event("close");
    }, s.doClose = function (t, i) {
      t.removeSelf(), t.isModal && this._checkMask(), t.closeHandler && t.closeHandler.runWith(i), t.onClosed(i);
    }, s.closeAll = function () {
      this._closeAll(), this.event("close");
    }, s._closeAll = function () {
      for (var t = this.numChildren - 1; t > -1; t--) {
        var i = this.getChildAt(t);i && null != i.close && this.doClose(i);
      }
    }, s.getDialogsByGroup = function (t) {
      for (var i = [], e = this.numChildren - 1; e > -1; e--) {
        var s = this.getChildAt(e);s && s.group === t && i.push(s);
      }return i;
    }, s.closeByGroup = function (t) {
      for (var i = [], e = this.numChildren - 1; e > -1; e--) {
        var s = this.getChildAt(e);s && s.group === t && (s.close(), i.push(s));
      }return i;
    }, s._checkMask = function () {
      this.maskLayer.removeSelf();for (var t = this.numChildren - 1; t > -1; t--) {
        var i = this.getChildAt(t);if (i && i.isModal) return void this.addChildAt(this.maskLayer, t);
      }
    }, i;
  }(),
      N = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.Box", t);var s = i.prototype;return e.imps(s, { "laya.ui.IBox": !0 }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t;for (var i in t) {
        var e = this.getChildByName(i);e ? e.dataSource = t[i] : this.hasOwnProperty(i) && "function" != typeof this[i] && (this[i] = t[i]);
      }
    }), i;
  }(P),
      A = function (t) {
    function i(t, e) {
      this.toggle = !1, this._bitmap = null, this._text = null, this._strokeColors = null, this._state = 0, this._selected = !1, this._skin = null, this._autoSize = !0, this._sources = null, this._clickHandler = null, this._stateChanged = !1, i.__super.call(this), this._labelColors = M.buttonLabelColors, this._stateNum = M.buttonStateNum, void 0 === e && (e = ""), this.skin = t, this.label = e;
    }h(i, "laya.ui.Button", t);var o = i.prototype;return e.imps(o, { "laya.ui.ISelect": !0 }), o.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._bitmap && this._bitmap.destroy(), this._text && this._text.destroy(i), this._bitmap = null, this._text = null, this._clickHandler = null, this._labelColors = this._sources = this._strokeColors = null;
    }, o.createChildren = function () {
      this.graphics = this._bitmap = new T();
    }, o.createText = function () {
      this._text || (this._text = new S(), this._text.overflow = S.HIDDEN, this._text.align = "center", this._text.valign = "middle", this._text.width = this._width, this._text.height = this._height);
    }, o.initialize = function () {
      1 !== this._mouseEnableState && (this.mouseEnabled = !0, this._setBit(2, !0)), this._createListener("mouseover", this, this.onMouse, null, !1, !1), this._createListener("mouseout", this, this.onMouse, null, !1, !1), this._createListener("mousedown", this, this.onMouse, null, !1, !1), this._createListener("mouseup", this, this.onMouse, null, !1, !1), this._createListener("click", this, this.onMouse, null, !1, !1);
    }, o.onMouse = function (t) {
      if (!1 !== this.toggle || !this._selected) return "click" === t.type ? (this.toggle && (this.selected = !this._selected), void (this._clickHandler && this._clickHandler.run())) : void (!this._selected && (this.state = i.stateMap[t.type]));
    }, o.changeClips = function () {
      var t = m.getRes(this._skin);if (t) {
        var i = t.sourceWidth,
            e = t.sourceHeight / this._stateNum;t.$_GID || (t.$_GID = B.getGID());var s = t.$_GID + "-" + this._stateNum,
            h = k.I.get(s);if (h) this._sources = h;else {
          if (this._sources = [], 1 === this._stateNum) this._sources.push(t);else for (var n = 0; n < this._stateNum; n++) {
            this._sources.push(w.createFromTexture(t, 0, e * n, i, e));
          }k.I.set(s, this._sources);
        }this._autoSize ? (this._bitmap.width = this._width || i, this._bitmap.height = this._height || e, this._text && (this._text.width = this._bitmap.width, this._text.height = this._bitmap.height)) : this._text && (this._text.x = i);
      } else console.log("lose skin", this._skin);
    }, o.changeState = function () {
      this._stateChanged = !1, this.runCallLater(this.changeClips);var t = this._state < this._stateNum ? this._state : this._stateNum - 1;this._sources && (this._bitmap.source = this._sources[t]), this.label && (this._text.color = this._labelColors[t], this._strokeColors && (this._text.strokeColor = this._strokeColors[t]));
    }, o._setStateChanged = function () {
      this._stateChanged || (this._stateChanged = !0, this.callLater(this.changeState));
    }, n(0, o, "labelStrokeColor", function () {
      return this.createText(), this._text.strokeColor;
    }, function (t) {
      this.createText(), this._text.strokeColor = t;
    }), n(0, o, "measureHeight", function () {
      return this.runCallLater(this.changeClips), this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height;
    }), n(0, o, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, this.callLater(this.changeClips), this._setStateChanged());
    }), n(0, o, "state", function () {
      return this._state;
    }, function (t) {
      this._state != t && (this._state = t, this._setStateChanged());
    }), n(0, o, "text", function () {
      return this.createText(), this._text;
    }), n(0, o, "stateNum", function () {
      return this._stateNum;
    }, function (t) {
      "string" == typeof t && (t = parseInt(t)), this._stateNum != t && (this._stateNum = t < 1 ? 1 : t > 3 ? 3 : t, this.callLater(this.changeClips));
    }), n(0, o, "strokeColors", function () {
      return this._strokeColors ? this._strokeColors.join(",") : "";
    }, function (t) {
      this._strokeColors = L.fillArray(M.buttonLabelColors, t, String), this._setStateChanged();
    }), n(0, o, "labelColors", function () {
      return this._labelColors.join(",");
    }, function (t) {
      this._labelColors = L.fillArray(M.buttonLabelColors, t, String), this._setStateChanged();
    }), n(0, o, "measureWidth", function () {
      return this.runCallLater(this.changeClips), this._autoSize ? this._bitmap.width : (this.runCallLater(this.changeState), this._bitmap.width + (this._text ? this._text.width : 0));
    }), n(0, o, "label", function () {
      return this._text ? this._text.text : null;
    }, function (t) {
      (this._text || t) && (this.createText(), this._text.text != t && (t && !this._text.parent && this.addChild(this._text), this._text.text = (t + "").replace(/\\n/g, "\n"), this._setStateChanged()));
    }), n(0, o, "selected", function () {
      return this._selected;
    }, function (t) {
      this._selected != t && (this._selected = t, this.state = this._selected ? 2 : 0, this.event("change"));
    }), n(0, o, "labelPadding", function () {
      return this.createText(), this._text.padding.join(",");
    }, function (t) {
      this.createText(), this._text.padding = L.fillArray(M.labelPadding, t, Number);
    }), n(0, o, "labelSize", function () {
      return this.createText(), this._text.fontSize;
    }, function (t) {
      this.createText(), this._text.fontSize = t;
    }), n(0, o, "labelStroke", function () {
      return this.createText(), this._text.stroke;
    }, function (t) {
      this.createText(), this._text.stroke = t;
    }), n(0, o, "labelBold", function () {
      return this.createText(), this._text.bold;
    }, function (t) {
      this.createText(), this._text.bold = t;
    }), n(0, o, "labelFont", function () {
      return this.createText(), this._text.font;
    }, function (t) {
      this.createText(), this._text.font = t;
    }), n(0, o, "labelAlign", function () {
      return this.createText(), this._text.align;
    }, function (t) {
      this.createText(), this._text.align = t;
    }), n(0, o, "clickHandler", function () {
      return this._clickHandler;
    }, function (t) {
      this._clickHandler = t;
    }), n(0, o, "sizeGrid", function () {
      return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
    }, function (t) {
      this._bitmap.sizeGrid = L.fillArray(M.defaultSizeGrid, t, Number);
    }), n(0, o, "width", t.prototype._$get_width, function (t) {
      e.superSet(P, this, "width", t), this._autoSize && (this._bitmap.width = t, this._text && (this._text.width = t));
    }), n(0, o, "height", t.prototype._$get_height, function (t) {
      e.superSet(P, this, "height", t), this._autoSize && (this._bitmap.height = t, this._text && (this._text.height = t));
    }), n(0, o, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.label = t + "" : e.superSet(P, this, "dataSource", t);
    }), n(0, o, "iconOffset", function () {
      return this._bitmap._offset ? this._bitmap._offset.join(",") : null;
    }, function (t) {
      this._bitmap._offset = t ? L.fillArray([1, 1], t, Number) : [];
    }), s(i, ["stateMap", function () {
      return this.stateMap = { mouseup: 0, mouseover: 1, mousedown: 2, mouseout: 0 };
    }]), i;
  }(P),
      Y = function (t) {
    function i(t, e, s) {
      this._sources = null, this._bitmap = null, this._skin = null, this._clipX = 1, this._clipY = 1, this._clipWidth = 0, this._clipHeight = 0, this._autoPlay = !1, this._interval = 50, this._complete = null, this._isPlaying = !1, this._index = 0, this._clipChanged = !1, this._group = null, this._toIndex = -1, i.__super.call(this), void 0 === e && (e = 1), void 0 === s && (s = 1), this._clipX = e, this._clipY = s, this.skin = t;
    }h(i, "laya.ui.Clip", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(), this._bitmap = null, this._sources = null;
    }, s.dispose = function () {
      this.destroy(!0), e.loader.clearRes(this._skin);
    }, s.createChildren = function () {
      this.graphics = this._bitmap = new T();
    }, s._onDisplay = function (t) {
      this._isPlaying ? this._displayedInStage ? this.play() : this.stop() : this._autoPlay && this.play();
    }, s.changeClip = function () {
      if (this._clipChanged = !1, this._skin) {
        var t = m.getRes(this._skin);t ? this.loadComplete(this._skin, t) : e.loader.load(this._skin, p.create(this, this.loadComplete, [this._skin]));
      }
    }, s.loadComplete = function (t, i) {
      if (t === this._skin && i) {
        var e = this._clipWidth || Math.ceil(i.sourceWidth / this._clipX),
            s = this._clipHeight || Math.ceil(i.sourceHeight / this._clipY),
            h = this._skin + e + s,
            n = k.I.get(h);if (n) this._sources = n;else {
          this._sources = [];for (var o = 0; o < this._clipY; o++) {
            for (var r = 0; r < this._clipX; r++) {
              this._sources.push(w.createFromTexture(i, e * r, s * o, e, s));
            }
          }k.I.set(h, this._sources);
        }this.index = this._index, this.event("loaded"), this.onCompResize();
      }
    }, s.play = function (t, i) {
      void 0 === t && (t = 0), void 0 === i && (i = -1), this._isPlaying = !0, this.index = t, this._toIndex = i, this._index++, e.timer.loop(this.interval, this, this._loop), this.on("display", this, this._onDisplay), this.on("undisplay", this, this._onDisplay);
    }, s._loop = function () {
      this._style.visible && this._sources && (this._index++, this.index = this._index, this._toIndex > -1 && this._index >= this._toIndex ? this.stop() : this._index >= this._sources.length && (this._index = 0));
    }, s.stop = function () {
      this._isPlaying = !1, e.timer.clear(this, this._loop), this.event("complete");
    }, s._setClipChanged = function () {
      this._clipChanged || (this._clipChanged = !0, this.callLater(this.changeClip));
    }, n(0, s, "interval", function () {
      return this._interval;
    }, function (t) {
      this._interval != t && (this._interval = t, this._isPlaying && this.play());
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, t ? this._setClipChanged() : this._bitmap.source = null);
    }), n(0, s, "sources", function () {
      return this._sources;
    }, function (t) {
      this._sources = t, this.index = this._index, this.event("loaded");
    }), n(0, s, "clipX", function () {
      return this._clipX;
    }, function (t) {
      this._clipX = t || 1, this._setClipChanged();
    }), n(0, s, "clipY", function () {
      return this._clipY;
    }, function (t) {
      this._clipY = t || 1, this._setClipChanged();
    }), n(0, s, "total", function () {
      return this.runCallLater(this.changeClip), this._sources ? this._sources.length : 0;
    }), n(0, s, "clipWidth", function () {
      return this._clipWidth;
    }, function (t) {
      this._clipWidth = t, this._setClipChanged();
    }), n(0, s, "sizeGrid", function () {
      return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
    }, function (t) {
      this._bitmap.sizeGrid = L.fillArray(M.defaultSizeGrid, t, Number);
    }), n(0, s, "group", function () {
      return this._group;
    }, function (t) {
      t && this._skin && m.setGroup(this._skin, t), this._group = t;
    }), n(0, s, "clipHeight", function () {
      return this._clipHeight;
    }, function (t) {
      this._clipHeight = t, this._setClipChanged();
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(P, this, "width", t), this._bitmap.width = t;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(P, this, "height", t), this._bitmap.height = t;
    }), n(0, s, "measureWidth", function () {
      return this.runCallLater(this.changeClip), this._bitmap.width;
    }), n(0, s, "measureHeight", function () {
      return this.runCallLater(this.changeClip), this._bitmap.height;
    }), n(0, s, "index", function () {
      return this._index;
    }, function (t) {
      this._index = t, this._bitmap && this._sources && (this._bitmap.source = this._sources[t]), this.event("change");
    }), n(0, s, "autoPlay", function () {
      return this._autoPlay;
    }, function (t) {
      this._autoPlay != t && (this._autoPlay = t, t ? this.play() : this.stop());
    }), n(0, s, "isPlaying", function () {
      return this._isPlaying;
    }, function (t) {
      this._isPlaying = t;
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.index = parseInt(t) : e.superSet(P, this, "dataSource", t);
    }), n(0, s, "bitmap", function () {
      return this._bitmap;
    }), i;
  }(P),
      O = function (t) {
    function i() {
      this.changeHandler = null, this._gridSize = 11, this._bgColor = "#ffffff", this._borderColor = "#000000", this._inputColor = "#000000", this._inputBgColor = "#efefef", this._colorPanel = null, this._colorTiles = null, this._colorBlock = null, this._colorInput = null, this._colorButton = null, this._colors = [], this._selectedColor = "#000000", this._panelChanged = !1, i.__super.call(this);
    }h(i, "laya.ui.ColorPicker", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._colorPanel && this._colorPanel.destroy(i), this._colorButton && this._colorButton.destroy(i), this._colorPanel = null, this._colorTiles = null, this._colorBlock = null, this._colorInput = null, this._colorButton = null, this._colors = null, this.changeHandler = null;
    }, s.createChildren = function () {
      this.addChild(this._colorButton = new A()), this._colorPanel = new N(), this._colorPanel.size(230, 166), this._colorPanel.addChild(this._colorTiles = new b()), this._colorPanel.addChild(this._colorBlock = new b()), this._colorPanel.addChild(this._colorInput = new g());
    }, s.initialize = function () {
      this._colorButton.on("click", this, this.onColorButtonClick), this._colorBlock.pos(5, 5), this._colorInput.pos(60, 5), this._colorInput.size(60, 20), this._colorInput.on("change", this, this.onColorInputChange), this._colorInput.on("keydown", this, this.onColorFieldKeyDown), this._colorTiles.pos(5, 30), this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove), this._colorTiles.on("click", this, this.onColorTilesClick), this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize), this._colorPanel.on("mousedown", this, this.onPanelMouseDown), this.bgColor = this._bgColor;
    }, s.onPanelMouseDown = function (t) {
      t.stopPropagation();
    }, s.changePanel = function () {
      this._panelChanged = !1;var t = this._colorPanel.graphics;t.clear(), t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor), this.drawBlock(this._selectedColor), this._colorInput.borderColor = this._borderColor, this._colorInput.bgColor = this._inputBgColor, this._colorInput.color = this._inputColor, (t = this._colorTiles.graphics).clear();for (var i = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935], e = 0; e < 12; e++) {
        for (var s = 0; s < 20; s++) {
          var h = 0;h = 0 === s ? i[e] : 1 === s ? 0 : 51 * (((3 * e + s / 6) % 3 << 0) + 3 * (e / 6 << 0)) << 16 | s % 6 * 51 << 8 | (e << 0) % 6 * 51;var n = L.toColor(h);this._colors.push(n);var o = s * this._gridSize,
              r = e * this._gridSize;t.drawRect(o, r, this._gridSize, this._gridSize, n, "#000000");
        }
      }
    }, s.onColorButtonClick = function (t) {
      this._colorPanel.parent ? this.close() : this.open();
    }, s.open = function () {
      var t = this.localToGlobal(new y()),
          i = t.x + this._colorPanel.width <= e.stage.width ? t.x : e.stage.width - this._colorPanel.width,
          s = t.y + this._colorButton.height;s = s + this._colorPanel.height <= e.stage.height ? s : t.y - this._colorPanel.height, this._colorPanel.pos(i, s), this._colorPanel.zOrder = 1001, e._currentStage.addChild(this._colorPanel), e.stage.on("mousedown", this, this.removeColorBox);
    }, s.close = function () {
      e.stage.off("mousedown", this, this.removeColorBox), this._colorPanel.removeSelf();
    }, s.removeColorBox = function (t) {
      this.close();
    }, s.onColorFieldKeyDown = function (t) {
      13 == t.keyCode && (this._colorInput.text ? this.selectedColor = this._colorInput.text : this.selectedColor = null, this.close(), t.stopPropagation());
    }, s.onColorInputChange = function (t) {
      this._colorInput.text ? this.drawBlock(this._colorInput.text) : this.drawBlock("#FFFFFF");
    }, s.onColorTilesClick = function (t) {
      this.selectedColor = this.getColorByMouse(), this.close();
    }, s.onColorTilesMouseMove = function (t) {
      this._colorInput.focus = !1;var i = this.getColorByMouse();this._colorInput.text = i, this.drawBlock(i);
    }, s.getColorByMouse = function () {
      var t = this._colorTiles.getMousePoint(),
          i = Math.floor(t.x / this._gridSize),
          e = Math.floor(t.y / this._gridSize);return this._colors[20 * e + i];
    }, s.drawBlock = function (t) {
      var i = this._colorBlock.graphics;i.clear();var e = t || "#ffffff";i.drawRect(0, 0, 50, 20, e, this._borderColor), t || i.drawLine(0, 0, 50, 20, "#ff0000");
    }, s.changeColor = function () {
      var t = this.graphics;t.clear();var i = this._selectedColor || "#000000";t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, i);
    }, s._setPanelChanged = function () {
      this._panelChanged || (this._panelChanged = !0, this.callLater(this.changePanel));
    }, n(0, s, "inputBgColor", function () {
      return this._inputBgColor;
    }, function (t) {
      this._inputBgColor = t, this._setPanelChanged();
    }), n(0, s, "selectedColor", function () {
      return this._selectedColor;
    }, function (t) {
      this._selectedColor != t && (this._selectedColor = this._colorInput.text = t, this.drawBlock(t), this.changeColor(), this.changeHandler && this.changeHandler.runWith(this._selectedColor), this.event("change", u.EMPTY.setTo("change", this, this)));
    }), n(0, s, "skin", function () {
      return this._colorButton.skin;
    }, function (t) {
      this._colorButton.skin = t, this.changeColor();
    }), n(0, s, "bgColor", function () {
      return this._bgColor;
    }, function (t) {
      this._bgColor = t, this._setPanelChanged();
    }), n(0, s, "borderColor", function () {
      return this._borderColor;
    }, function (t) {
      this._borderColor = t, this._setPanelChanged();
    }), n(0, s, "inputColor", function () {
      return this._inputColor;
    }, function (t) {
      this._inputColor = t, this._setPanelChanged();
    }), i;
  }(P),
      X = function (t) {
    function i(t, e) {
      this._visibleNum = 6, this._button = null, this._list = null, this._isOpen = !1, this._itemSize = 12, this._labels = [], this._selectedIndex = -1, this._selectHandler = null, this._itemHeight = NaN, this._listHeight = NaN, this._listChanged = !1, this._itemChanged = !1, this._scrollBarSkin = null, this._isCustomList = !1, this.itemRender = null, i.__super.call(this), this._itemColors = M.comboBoxItemColors, this.skin = t, this.labels = e;
    }h(i, "laya.ui.ComboBox", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._button && this._button.destroy(i), this._list && this._list.destroy(i), this._button = null, this._list = null, this._itemColors = null, this._labels = null, this._selectHandler = null;
    }, s.createChildren = function () {
      this.addChild(this._button = new A()), this._button.text.align = "left", this._button.labelPadding = "0,0,0,5", this._button.on("mousedown", this, this.onButtonMouseDown);
    }, s._createList = function () {
      this._list = new j(), this._scrollBarSkin && (this._list.vScrollBarSkin = this._scrollBarSkin), this._setListEvent(this._list);
    }, s._setListEvent = function (t) {
      this._list.selectEnable = !0, this._list.on("mousedown", this, this.onListDown), this._list.mouseHandler = p.create(this, this.onlistItemMouse, null, !1), this._list.scrollBar && this._list.scrollBar.on("mousedown", this, this.onScrollBarDown);
    }, s.onListDown = function (t) {
      t.stopPropagation();
    }, s.onScrollBarDown = function (t) {
      t.stopPropagation();
    }, s.onButtonMouseDown = function (t) {
      this.callLater(this.switchTo, [!this._isOpen]);
    }, s.changeList = function () {
      this._listChanged = !1;var t = this.width - 2,
          i = this._itemColors[2];this._itemHeight = this._itemSize + 6, this._list.itemRender = this.itemRender || { type: "Box", child: [{ type: "Label", props: { name: "label", x: 1, padding: "3,3,3,3", width: t, height: this._itemHeight, fontSize: this._itemSize, color: i } }] }, this._list.repeatY = this._visibleNum, this._list.refresh();
    }, s.onlistItemMouse = function (t, i) {
      var e = t.type;if ("mouseover" === e || "mouseout" === e) {
        if (this._isCustomList) return;var s = this._list.getCell(i);if (!s) return;var h = s.getChildByName("label");h && ("mouseover" === e ? (h.bgColor = this._itemColors[0], h.color = this._itemColors[1]) : (h.bgColor = null, h.color = this._itemColors[2]));
      } else "click" === e && (this.selectedIndex = i, this.isOpen = !1);
    }, s.switchTo = function (t) {
      this.isOpen = t;
    }, s.changeOpen = function () {
      this.isOpen = !this._isOpen;
    }, s.changeItem = function () {
      if (this._itemChanged = !1, this._listHeight = this._labels.length > 0 ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight, !this._isCustomList) {
        var t = this._list.graphics;t.clear(), t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);
      }var i = this._list.array || [];i.length = 0;for (var e = 0, s = this._labels.length; e < s; e++) {
        i.push({ label: this._labels[e] });
      }this._list.height = this._listHeight, this._list.array = i;
    }, s.changeSelected = function () {
      this._button.label = this.selectedLabel;
    }, s.removeList = function (t) {
      this.isOpen = !1;
    }, n(0, s, "selectedIndex", function () {
      return this._selectedIndex;
    }, function (t) {
      this._selectedIndex != t && (this._selectedIndex = t, this._labels.length > 0 ? this.changeSelected() : this.callLater(this.changeSelected), this.event("change", [u.EMPTY.setTo("change", this, this)]), this._selectHandler && this._selectHandler.runWith(this._selectedIndex));
    }), n(0, s, "measureHeight", function () {
      return this._button.height;
    }), n(0, s, "skin", function () {
      return this._button.skin;
    }, function (t) {
      this._button.skin != t && (this._button.skin = t, this._listChanged = !0);
    }), n(0, s, "measureWidth", function () {
      return this._button.width;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(P, this, "width", t), this._button.width = this._width, this._itemChanged = !0, this._listChanged = !0;
    }), n(0, s, "selectedLabel", function () {
      return this._selectedIndex > -1 && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null;
    }, function (t) {
      this.selectedIndex = this._labels.indexOf(t);
    }), n(0, s, "labels", function () {
      return this._labels.join(",");
    }, function (t) {
      this._labels.length > 0 && (this.selectedIndex = -1), t ? this._labels = t.split(",") : this._labels.length = 0, this._itemChanged = !0;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(P, this, "height", t), this._button.height = this._height;
    }), n(0, s, "selectHandler", function () {
      return this._selectHandler;
    }, function (t) {
      this._selectHandler = t;
    }), n(0, s, "visibleNum", function () {
      return this._visibleNum;
    }, function (t) {
      this._visibleNum = t, this._listChanged = !0;
    }), n(0, s, "labelBold", function () {
      return this._button.text.bold;
    }, function (t) {
      this._button.text.bold = t;
    }), n(0, s, "itemColors", function () {
      return String(this._itemColors);
    }, function (t) {
      this._itemColors = L.fillArray(this._itemColors, t, String), this._listChanged = !0;
    }), n(0, s, "itemSize", function () {
      return this._itemSize;
    }, function (t) {
      this._itemSize = t, this._listChanged = !0;
    }), n(0, s, "scrollBar", function () {
      return this.list.scrollBar;
    }), n(0, s, "isOpen", function () {
      return this._isOpen;
    }, function (t) {
      if (this._isOpen != t) if (this._isOpen = t, this._button.selected = this._isOpen, this._isOpen) {
        this._list || this._createList(), this._listChanged && !this._isCustomList && this.changeList(), this._itemChanged && this.changeItem();var i = this.localToGlobal(y.TEMP.setTo(0, 0)),
            s = i.y + this._button.height;s = s + this._listHeight <= e.stage.height ? s : i.y - this._listHeight, this._list.pos(i.x, s), this._list.zOrder = 1001, e._currentStage.addChild(this._list), e.stage.once("mousedown", this, this.removeList), this._list.selectedIndex = this._selectedIndex;
      } else this._list && this._list.removeSelf();
    }), n(0, s, "scrollBarSkin", function () {
      return this._scrollBarSkin;
    }, function (t) {
      this._scrollBarSkin = t;
    }), n(0, s, "sizeGrid", function () {
      return this._button.sizeGrid;
    }, function (t) {
      this._button.sizeGrid = t;
    }), n(0, s, "button", function () {
      return this._button;
    }), n(0, s, "list", function () {
      return this._list || this._createList(), this._list;
    }, function (t) {
      t && (t.removeSelf(), this._isCustomList = !0, this._list = t, this._setListEvent(t), this._itemHeight = t.getCell(0).height + t.spaceY);
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : e.superSet(P, this, "dataSource", t);
    }), n(0, s, "labelColors", function () {
      return this._button.labelColors;
    }, function (t) {
      this._button.labelColors != t && (this._button.labelColors = t);
    }), n(0, s, "labelPadding", function () {
      return this._button.text.padding.join(",");
    }, function (t) {
      this._button.text.padding = L.fillArray(M.labelPadding, t, Number);
    }), n(0, s, "labelSize", function () {
      return this._button.text.fontSize;
    }, function (t) {
      this._button.text.fontSize = t;
    }), n(0, s, "labelFont", function () {
      return this._button.text.font;
    }, function (t) {
      this._button.text.font = t;
    }), n(0, s, "stateNum", function () {
      return this._button.stateNum;
    }, function (t) {
      this._button.stateNum = t;
    }), i;
  }(P),
      E = function (t) {
    function i(t) {
      this.rollRatio = .95, this.changeHandler = null, this.scaleBar = !0, this.autoHide = !1, this.elasticDistance = 0, this.elasticBackTime = 500, this.upButton = null, this.downButton = null, this.slider = null, this._scrollSize = 1, this._skin = null, this._thumbPercent = 1, this._target = null, this._lastPoint = null, this._lastOffset = 0, this._checkElastic = !1, this._isElastic = !1, this._value = NaN, this._hide = !1, this._clickOnly = !0, this._offsets = null, i.__super.call(this), this._showButtons = z.showButtons, this._touchScrollEnable = z.touchScrollEnable, this._mouseWheelEnable = z.mouseWheelEnable, this.skin = t, this.max = 1;
    }h(i, "laya.ui.ScrollBar", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), this.stopScroll(), this.target = null, t.prototype.destroy.call(this, i), this.upButton && this.upButton.destroy(i), this.downButton && this.downButton.destroy(i), this.slider && this.slider.destroy(i), this.upButton = this.downButton = null, this.slider = null, this.changeHandler = null, this._offsets = null;
    }, s.createChildren = function () {
      this.addChild(this.slider = new V()), this.addChild(this.upButton = new A()), this.addChild(this.downButton = new A());
    }, s.initialize = function () {
      this.slider.showLabel = !1, this.slider.on("change", this, this.onSliderChange), this.slider.setSlider(0, 0, 0), this.upButton.on("mousedown", this, this.onButtonMouseDown), this.downButton.on("mousedown", this, this.onButtonMouseDown);
    }, s.onSliderChange = function () {
      this.value = this.slider.value;
    }, s.onButtonMouseDown = function (t) {
      var i = t.currentTarget === this.upButton;this.slide(i), e.timer.once(M.scrollBarDelayTime, this, this.startLoop, [i]), e.stage.once("mouseup", this, this.onStageMouseUp);
    }, s.startLoop = function (t) {
      e.timer.frameLoop(1, this, this.slide, [t]);
    }, s.slide = function (t) {
      t ? this.value -= this._scrollSize : this.value += this._scrollSize;
    }, s.onStageMouseUp = function (t) {
      e.timer.clear(this, this.startLoop), e.timer.clear(this, this.slide);
    }, s.changeScrollBar = function () {
      this.upButton.visible = this._showButtons, this.downButton.visible = this._showButtons, this._showButtons && (this.upButton.skin = this._skin.replace(".png", "$up.png"), this.downButton.skin = this._skin.replace(".png", "$down.png")), this.slider.isVertical ? this.slider.y = this._showButtons ? this.upButton.height : 0 : this.slider.x = this._showButtons ? this.upButton.width : 0, this.resetPositions(), this.repaint();
    }, s.changeSize = function () {
      t.prototype.changeSize.call(this), this.repaint(), this.resetPositions(), this.event("change"), this.changeHandler && this.changeHandler.runWith(this.value);
    }, s.resetPositions = function () {
      this.slider.isVertical ? this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0) : this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0), this.resetButtonPosition();
    }, s.resetButtonPosition = function () {
      this.slider.isVertical ? this.downButton.y = this.slider.y + this.slider.height : this.downButton.x = this.slider.x + this.slider.width;
    }, s.setScroll = function (t, i, e) {
      this.runCallLater(this.changeSize), this.slider.setSlider(t, i, e), this.slider.bar.visible = i > 0, !this._hide && this.autoHide && (this.visible = !1);
    }, s.onTargetMouseWheel = function (t) {
      this.value -= t.delta * this._scrollSize, this.target = this._target;
    }, s.onTargetMouseDown = function (t) {
      this._clickOnly = !0, this._lastOffset = 0, this._checkElastic = !1, this._lastPoint || (this._lastPoint = new y()), this._lastPoint.setTo(e.stage.mouseX, e.stage.mouseY), e.timer.clear(this, this.tweenMove), x.clearTween(this), e.stage.once("mouseup", this, this.onStageMouseUp2), e.stage.once("mouseout", this, this.onStageMouseUp2), e.timer.frameLoop(1, this, this.loop);
    }, s.loop = function () {
      var t = e.stage.mouseY,
          i = e.stage.mouseX;if (this._lastOffset = this.isVertical ? t - this._lastPoint.y : i - this._lastPoint.x, this._clickOnly) {
        if (!(Math.abs(this._lastOffset * (this.isVertical ? e.stage._canvasTransform.getScaleY() : e.stage._canvasTransform.getScaleX())) > 1)) return;this._clickOnly = !1, this._offsets || (this._offsets = []), this._offsets.length = 0, this._target.mouseEnabled = !1, !this.hide && this.autoHide && (this.alpha = 1, this.visible = !0), this.event("start");
      }this._offsets.push(this._lastOffset), this._lastPoint.x = i, this._lastPoint.y = t, 0 !== this._lastOffset && (this._checkElastic || (this.elasticDistance > 0 ? this._checkElastic || 0 == this._lastOffset || (this._lastOffset > 0 && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max ? (this._isElastic = !0, this._checkElastic = !0) : this._isElastic = !1) : this._checkElastic = !0), this._isElastic ? this._value <= this.min ? this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) : this._value >= this.max && (this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)) : this.value -= this._lastOffset);
    }, s.onStageMouseUp2 = function (t) {
      if (e.stage.off("mouseup", this, this.onStageMouseUp2), e.stage.off("mouseout", this, this.onStageMouseUp2), e.timer.clear(this, this.loop), !this._clickOnly) if (this._target.mouseEnabled = !0, this._isElastic) this._value < this.min ? x.to(this, { value: this.min }, this.elasticBackTime, c.sineOut, p.create(this, this.elasticOver)) : this._value > this.max && x.to(this, { value: this.max }, this.elasticBackTime, c.sineOut, p.create(this, this.elasticOver));else {
        if (!this._offsets) return;this._offsets.length < 1 && (this._offsets[0] = this.isVertical ? e.stage.mouseY - this._lastPoint.y : e.stage.mouseX - this._lastPoint.x);for (var i = 0, s = Math.min(this._offsets.length, 3), h = 0; h < s; h++) {
          i += this._offsets[this._offsets.length - 1 - h];
        }if (this._lastOffset = i / s, (i = Math.abs(this._lastOffset)) < 2) return void this.event("end");i > 60 && (this._lastOffset = this._lastOffset > 0 ? 60 : -60);var n = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));e.timer.frameLoop(1, this, this.tweenMove, [n]);
      }
    }, s.elasticOver = function () {
      this._isElastic = !1, !this.hide && this.autoHide && x.to(this, { alpha: 0 }, 500), this.event("end");
    }, s.tweenMove = function (t) {
      this._lastOffset *= this.rollRatio;var i = NaN;if (t > 0 && (this._lastOffset > 0 && this.value <= this.min ? (this._isElastic = !0, i = .5 * -(this.min - t - this.value), this._lastOffset > i && (this._lastOffset = i)) : this._lastOffset < 0 && this.value >= this.max && (this._isElastic = !0, i = .5 * -(this.max + t - this.value), this._lastOffset < i && (this._lastOffset = i))), this.value -= this._lastOffset, Math.abs(this._lastOffset) < 1) {
        if (e.timer.clear(this, this.tweenMove), this._isElastic) return void (this._value < this.min ? x.to(this, { value: this.min }, this.elasticBackTime, c.sineOut, p.create(this, this.elasticOver)) : this._value > this.max ? x.to(this, { value: this.max }, this.elasticBackTime, c.sineOut, p.create(this, this.elasticOver)) : this.elasticOver());this.event("end"), !this.hide && this.autoHide && x.to(this, { alpha: 0 }, 500);
      }
    }, s.stopScroll = function () {
      this.onStageMouseUp2(null), e.timer.clear(this, this.tweenMove), x.clearTween(this);
    }, n(0, s, "measureHeight", function () {
      return this.slider.isVertical ? 100 : this.slider.height;
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, this.slider.skin = this._skin, this.callLater(this.changeScrollBar));
    }), n(0, s, "max", function () {
      return this.slider.max;
    }, function (t) {
      this.slider.max = t;
    }), n(0, s, "showButtons", function () {
      return this._showButtons;
    }, function (t) {
      this._showButtons = t, this.callLater(this.changeScrollBar);
    }), n(0, s, "measureWidth", function () {
      return this.slider.isVertical ? this.slider.width : 100;
    }), n(0, s, "min", function () {
      return this.slider.min;
    }, function (t) {
      this.slider.min = t;
    }), n(0, s, "value", function () {
      return this._value;
    }, function (t) {
      t !== this._value && (this._isElastic ? this._value = t : (this.slider.value = t, this._value = this.slider.value), this.event("change"), this.changeHandler && this.changeHandler.runWith(this.value));
    }), n(0, s, "isVertical", function () {
      return this.slider.isVertical;
    }, function (t) {
      this.slider.isVertical = t;
    }), n(0, s, "sizeGrid", function () {
      return this.slider.sizeGrid;
    }, function (t) {
      this.slider.sizeGrid = t;
    }), n(0, s, "scrollSize", function () {
      return this._scrollSize;
    }, function (t) {
      this._scrollSize = t;
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : e.superSet(P, this, "dataSource", t);
    }), n(0, s, "thumbPercent", function () {
      return this._thumbPercent;
    }, function (t) {
      this.runCallLater(this.changeScrollBar), this.runCallLater(this.changeSize), t = t >= 1 ? .99 : t, this._thumbPercent = t, this.scaleBar && (this.slider.isVertical ? this.slider.bar.height = Math.max(this.slider.height * t, M.scrollBarMinNum) : this.slider.bar.width = Math.max(this.slider.width * t, M.scrollBarMinNum));
    }), n(0, s, "target", function () {
      return this._target;
    }, function (t) {
      this._target && (this._target.off("mousewheel", this, this.onTargetMouseWheel), this._target.off("mousedown", this, this.onTargetMouseDown)), this._target = t, t && (this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel), this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown));
    }), n(0, s, "hide", function () {
      return this._hide;
    }, function (t) {
      this._hide = t, this.visible = !t;
    }), n(0, s, "touchScrollEnable", function () {
      return this._touchScrollEnable;
    }, function (t) {
      this._touchScrollEnable = t, this.target = this._target;
    }), n(0, s, "mouseWheelEnable", function () {
      return this._mouseWheelEnable;
    }, function (t) {
      this._mouseWheelEnable = t;
    }), n(0, s, "tick", function () {
      return this.slider.tick;
    }, function (t) {
      this.slider.tick = t;
    }), i;
  }(P),
      V = function (t) {
    function i(t) {
      this.changeHandler = null, this.isVertical = !0, this.showLabel = !0, this._allowClickBack = !1, this._max = 100, this._min = 0, this._tick = 1, this._value = 0, this._skin = null, this._bg = null, this._progress = null, this._bar = null, this._tx = NaN, this._ty = NaN, this._maxMove = NaN, this._globalSacle = null, i.__super.call(this), this.skin = t;
    }h(i, "laya.ui.Slider", t);var o = i.prototype;return o.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._bg && this._bg.destroy(i), this._bar && this._bar.destroy(i), this._progress && this._progress.destroy(i), this._bg = null, this._bar = null, this._progress = null, this.changeHandler = null;
    }, o.createChildren = function () {
      this.addChild(this._bg = new D()), this.addChild(this._bar = new A());
    }, o.initialize = function () {
      this._bar.on("mousedown", this, this.onBarMouseDown), this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0", this._progress && (this._progress.sizeGrid = this._bar.sizeGrid), this.allowClickBack = !0;
    }, o.onBarMouseDown = function (t) {
      this._globalSacle || (this._globalSacle = new y()), this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01), this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width, this._tx = e.stage.mouseX, this._ty = e.stage.mouseY, e.stage.on("mousemove", this, this.mouseMove), e.stage.once("mouseup", this, this.mouseUp), e.stage.once("mouseout", this, this.mouseUp), this.showValueText();
    }, o.showValueText = function () {
      if (this.showLabel) {
        var t = laya.ui.Slider.label;this.addChild(t), t.textField.changeText(this._value + ""), this.isVertical ? (t.x = this._bar.x + 20, t.y = .5 * (this._bar.height - t.height) + this._bar.y) : (t.y = this._bar.y - 20, t.x = .5 * (this._bar.width - t.width) + this._bar.x);
      }
    }, o.hideValueText = function () {
      laya.ui.Slider.label && laya.ui.Slider.label.removeSelf();
    }, o.mouseUp = function (t) {
      e.stage.off("mousemove", this, this.mouseMove), e.stage.off("mouseup", this, this.mouseUp), e.stage.off("mouseout", this, this.mouseUp), this.sendChangeEvent("changed"), this.hideValueText();
    }, o.mouseMove = function (t) {
      var i = this._value;this.isVertical ? (this._bar.y += (e.stage.mouseY - this._ty) / this._globalSacle.y, this._bar.y > this._maxMove ? this._bar.y = this._maxMove : this._bar.y < 0 && (this._bar.y = 0), this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x += (e.stage.mouseX - this._tx) / this._globalSacle.x, this._bar.x > this._maxMove ? this._bar.x = this._maxMove : this._bar.x < 0 && (this._bar.x = 0), this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min, this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width)), this._tx = e.stage.mouseX, this._ty = e.stage.mouseY;var s = Math.pow(10, (this._tick + "").length - 1);this._value = Math.round(Math.round(this._value / this._tick) * this._tick * s) / s, this._value != i && this.sendChangeEvent(), this.showValueText();
    }, o.sendChangeEvent = function (t) {
      void 0 === t && (t = "change"), this.event(t), this.changeHandler && this.changeHandler.runWith(this._value);
    }, o.setBarPoint = function () {
      this.isVertical ? this._bar.x = Math.round(.5 * (this._bg.width - this._bar.width)) : this._bar.y = Math.round(.5 * (this._bg.height - this._bar.height));
    }, o.changeSize = function () {
      t.prototype.changeSize.call(this), this.isVertical ? this._bg.height = this.height : this._bg.width = this.width, this.setBarPoint(), this.changeValue();
    }, o.setSlider = function (t, i, e) {
      this._value = -1, this._min = t, this._max = i > t ? i : t, this.value = e < t ? t : e > i ? i : e;
    }, o.changeValue = function () {
      var t = Math.pow(10, (this._tick + "").length - 1);this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t, this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;var i = this._max - this._min;0 === i && (i = 1), this.isVertical ? (this._bar.y = (this._value - this._min) / i * (this.height - this._bar.height), this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x = (this._value - this._min) / i * (this.width - this._bar.width), this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width));
    }, o.onBgMouseDown = function (t) {
      var i = this._bg.getMousePoint();this.isVertical ? this.value = i.y / (this.height - this._bar.height) * (this._max - this._min) + this._min : this.value = i.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;
    }, n(0, o, "measureHeight", function () {
      return Math.max(this._bg.height, this._bar.height);
    }), n(0, o, "skin", function () {
      return this._skin;
    }, function (t) {
      if (this._skin != t) {
        this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png");var i = this._skin.replace(".png", "$progress.png");m.getRes(i) && (this._progress || (this.addChild(this._progress = new D()), this._progress.sizeGrid = this._bar.sizeGrid, this.setChildIndex(this._progress, 1)), this._progress.skin = i), this.setBarPoint(), this.callLater(this.changeValue);
      }
    }), n(0, o, "allowClickBack", function () {
      return this._allowClickBack;
    }, function (t) {
      this._allowClickBack != t && (this._allowClickBack = t, t ? this._bg.on("mousedown", this, this.onBgMouseDown) : this._bg.off("mousedown", this, this.onBgMouseDown));
    }), n(0, o, "max", function () {
      return this._max;
    }, function (t) {
      this._max != t && (this._max = t, this.callLater(this.changeValue));
    }), n(0, o, "measureWidth", function () {
      return Math.max(this._bg.width, this._bar.width);
    }), n(0, o, "tick", function () {
      return this._tick;
    }, function (t) {
      this._tick != t && (this._tick = t, this.callLater(this.changeValue));
    }), n(0, o, "sizeGrid", function () {
      return this._bg.sizeGrid;
    }, function (t) {
      this._bg.sizeGrid = t, this._bar.sizeGrid = t, this._progress && (this._progress.sizeGrid = this._bar.sizeGrid);
    }), n(0, o, "min", function () {
      return this._min;
    }, function (t) {
      this._min != t && (this._min = t, this.callLater(this.changeValue));
    }), n(0, o, "value", function () {
      return this._value;
    }, function (t) {
      if (this._value != t) {
        var i = this._value;this._value = t, this.changeValue(), this._value != i && this.sendChangeEvent();
      }
    }), n(0, o, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : e.superSet(P, this, "dataSource", t);
    }), n(0, o, "bar", function () {
      return this._bar;
    }), s(i, ["label", function () {
      return this.label = new G();
    }]), i;
  }(P),
      D = function (t) {
    function i(t) {
      this._bitmap = null, this._skin = null, this._group = null, i.__super.call(this), this.skin = t;
    }h(i, "laya.ui.Image", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, !0), this._bitmap && this._bitmap.destroy(), this._bitmap = null;
    }, s.dispose = function () {
      this.destroy(!0), e.loader.clearRes(this._skin);
    }, s.createChildren = function () {
      this.graphics = this._bitmap = new T(), this._bitmap.autoCacheCmd = !1;
    }, s.setSource = function (t, i) {
      t === this._skin && i && (this.source = i, this.onCompResize());
    }, n(0, s, "source", function () {
      return this._bitmap.source;
    }, function (t) {
      this._bitmap && (this._bitmap.source = t, this.event("loaded"), this.repaint());
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "string" == typeof t ? this.skin = t : e.superSet(P, this, "dataSource", t);
    }), n(0, s, "measureHeight", function () {
      return this._bitmap.height;
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      if (this._skin != t) if (this._skin = t, t) {
        var i = m.getRes(t);i ? (this.source = i, this.onCompResize()) : e.loader.load(this._skin, p.create(this, this.setSource, [this._skin]), null, "image", 1, !0, this._group);
      } else this.source = null;
    }), n(0, s, "group", function () {
      return this._group;
    }, function (t) {
      t && this._skin && m.setGroup(this._skin, t), this._group = t;
    }), n(0, s, "sizeGrid", function () {
      return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
    }, function (t) {
      this._bitmap.sizeGrid = L.fillArray(M.defaultSizeGrid, t, Number);
    }), n(0, s, "measureWidth", function () {
      return this._bitmap.width;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(P, this, "width", t), this._bitmap.width = 0 == t ? 1e-7 : t;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(P, this, "height", t), this._bitmap.height = 0 == t ? 1e-7 : t;
    }), i;
  }(P),
      G = function (t) {
    function i(t) {
      this._tf = null, i.__super.call(this), void 0 === t && (t = ""), _.defaultColor = M.labelColor, this.text = t;
    }h(i, "laya.ui.Label", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._tf = null;
    }, s.createChildren = function () {
      this.addChild(this._tf = new S());
    }, s.changeText = function (t) {
      this._tf.changeText(t);
    }, n(0, s, "padding", function () {
      return this._tf.padding.join(",");
    }, function (t) {
      this._tf.padding = L.fillArray(M.labelPadding, t, Number);
    }), n(0, s, "bold", function () {
      return this._tf.bold;
    }, function (t) {
      this._tf.bold = t;
    }), n(0, s, "align", function () {
      return this._tf.align;
    }, function (t) {
      this._tf.align = t;
    }), n(0, s, "text", function () {
      return this._tf.text;
    }, function (t) {
      this._tf.text != t && (t && (t = L.adptString(t + "")), this._tf.text = t, this.event("change"), this._width && this._height || this.onCompResize());
    }), n(0, s, "italic", function () {
      return this._tf.italic;
    }, function (t) {
      this._tf.italic = t;
    }), n(0, s, "wordWrap", function () {
      return this._tf.wordWrap;
    }, function (t) {
      this._tf.wordWrap = t;
    }), n(0, s, "font", function () {
      return this._tf.font;
    }, function (t) {
      this._tf.font = t;
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.text = t + "" : e.superSet(P, this, "dataSource", t);
    }), n(0, s, "color", function () {
      return this._tf.color;
    }, function (t) {
      this._tf.color = t;
    }), n(0, s, "valign", function () {
      return this._tf.valign;
    }, function (t) {
      this._tf.valign = t;
    }), n(0, s, "leading", function () {
      return this._tf.leading;
    }, function (t) {
      this._tf.leading = t;
    }), n(0, s, "fontSize", function () {
      return this._tf.fontSize;
    }, function (t) {
      this._tf.fontSize = t;
    }), n(0, s, "bgColor", function () {
      return this._tf.bgColor;
    }, function (t) {
      this._tf.bgColor = t;
    }), n(0, s, "borderColor", function () {
      return this._tf.borderColor;
    }, function (t) {
      this._tf.borderColor = t;
    }), n(0, s, "stroke", function () {
      return this._tf.stroke;
    }, function (t) {
      this._tf.stroke = t;
    }), n(0, s, "strokeColor", function () {
      return this._tf.strokeColor;
    }, function (t) {
      this._tf.strokeColor = t;
    }), n(0, s, "textField", function () {
      return this._tf;
    }), n(0, s, "measureWidth", function () {
      return this._tf.width;
    }), n(0, s, "measureHeight", function () {
      return this._tf.height;
    }), n(0, s, "width", function () {
      return this._width || this._tf.text ? e.superGet(P, this, "width") : 0;
    }, function (t) {
      e.superSet(P, this, "width", t), this._tf.width = t;
    }), n(0, s, "height", function () {
      return this._height || this._tf.text ? e.superGet(P, this, "height") : 0;
    }, function (t) {
      e.superSet(P, this, "height", t), this._tf.height = t;
    }), n(0, s, "overflow", function () {
      return this._tf.overflow;
    }, function (t) {
      this._tf.overflow = t;
    }), n(0, s, "underline", function () {
      return this._tf.underline;
    }, function (t) {
      this._tf.underline = t;
    }), n(0, s, "underlineColor", function () {
      return this._tf.underlineColor;
    }, function (t) {
      this._tf.underlineColor = t;
    }), i;
  }(P),
      R = function (t) {
    function i(t) {
      this.changeHandler = null, this._bg = null, this._bar = null, this._skin = null, this._value = .5, i.__super.call(this), this.skin = t;
    }h(i, "laya.ui.ProgressBar", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._bg && this._bg.destroy(i), this._bar && this._bar.destroy(i), this._bg = this._bar = null, this.changeHandler = null;
    }, s.createChildren = function () {
      this.addChild(this._bg = new D()), this.addChild(this._bar = new D()), this._bar._bitmap.autoCacheCmd = !1;
    }, s.changeValue = function () {
      if (this.sizeGrid) {
        var t = this.sizeGrid.split(","),
            i = Number(t[3]),
            e = Number(t[1]),
            s = (this.width - i - e) * this._value;this._bar.width = i + e + s, this._bar.visible = this._bar.width > i + e;
      } else this._bar.width = this.width * this._value;
    }, n(0, s, "measureHeight", function () {
      return this._bg.height;
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, this._bg.skin = this._skin, this._bar.skin = this._skin.replace(".png", "$bar.png"), this.callLater(this.changeValue));
    }), n(0, s, "measureWidth", function () {
      return this._bg.width;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(P, this, "height", t), this._bg.height = this._height, this._bar.height = this._height;
    }), n(0, s, "bar", function () {
      return this._bar;
    }), n(0, s, "value", function () {
      return this._value;
    }, function (t) {
      this._value != t && (t = t > 1 ? 1 : t < 0 ? 0 : t, this._value = t, this.callLater(this.changeValue), this.event("change"), this.changeHandler && this.changeHandler.runWith(t));
    }), n(0, s, "bg", function () {
      return this._bg;
    }), n(0, s, "sizeGrid", function () {
      return this._bg.sizeGrid;
    }, function (t) {
      this._bg.sizeGrid = this._bar.sizeGrid = t;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(P, this, "width", t), this._bg.width = this._width, this.callLater(this.changeValue);
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t || "string" == typeof t ? this.value = Number(t) : e.superSet(P, this, "dataSource", t);
    }), i;
  }(P),
      $ = (function (t) {
    function i() {
      this._tipBox = null, this._tipText = null, this._defaultTipHandler = null, i.__super.call(this), this._tipBox = new P(), this._tipBox.addChild(this._tipText = new S()), this._tipText.x = this._tipText.y = 5, this._tipText.color = i.tipTextColor, this._defaultTipHandler = this._showDefaultTip, e.stage.on("showtip", this, this._onStageShowTip), e.stage.on("hidetip", this, this._onStageHideTip), this.zOrder = 1100;
    }h(i, "laya.ui.TipManager", P);var s = i.prototype;s._onStageHideTip = function (t) {
      e.timer.clear(this, this._showTip), this.closeAll(), this.removeSelf();
    }, s._onStageShowTip = function (t) {
      e.timer.once(i.tipDelay, this, this._showTip, [t], !0);
    }, s._showTip = function (t) {
      if ("string" == typeof t) {
        var i = String(t);Boolean(i) && this._defaultTipHandler(i);
      } else t instanceof laya.utils.Handler ? t.run() : "function" == typeof t && t.apply();e.stage.on("mousemove", this, this._onStageMouseMove), e.stage.on("mousedown", this, this._onStageMouseDown), this._onStageMouseMove(null);
    }, s._onStageMouseDown = function (t) {
      this.closeAll();
    }, s._onStageMouseMove = function (t) {
      this._showToStage(this, i.offsetX, i.offsetY);
    }, s._showToStage = function (t, i, s) {
      void 0 === i && (i = 0), void 0 === s && (s = 0);var h = t.getBounds();t.x = e.stage.mouseX + i, t.y = e.stage.mouseY + s, t.x + h.width > e.stage.width && (t.x -= h.width + i), t.y + h.height > e.stage.height && (t.y -= h.height + s);
    }, s.closeAll = function () {
      e.timer.clear(this, this._showTip), e.stage.off("mousemove", this, this._onStageMouseMove), e.stage.off("mousedown", this, this._onStageMouseDown), this.removeChildren();
    }, s.showDislayTip = function (t) {
      this.addChild(t), this._showToStage(this), e._currentStage.addChild(this);
    }, s._showDefaultTip = function (t) {
      this._tipText.text = t;var s = this._tipBox.graphics;s.clear(), s.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, i.tipBackColor), this.addChild(this._tipBox), this._showToStage(this), e._currentStage.addChild(this);
    }, n(0, s, "defaultTipHandler", function () {
      return this._defaultTipHandler;
    }, function (t) {
      this._defaultTipHandler = t;
    }), i.offsetX = 10, i.offsetY = 15, i.tipTextColor = "#ffffff", i.tipBackColor = "#111111", i.tipDelay = 200;
  }(), function (t) {
    function i() {
      this._idMap = null, this._aniList = null, this._watchMap = {}, i.__super.call(this);
    }var n;h(i, "laya.ui.View", N);var a = i.prototype;return a.createView = function (t) {
      if (t.animations && !this._idMap && (this._idMap = {}), i.createComp(t, this, this), t.animations) {
        var e,
            s,
            h = [],
            n = t.animations,
            o = 0,
            r = n.length;for (o = 0; o < r; o++) {
          switch (e = new d(), s = n[o], e._setUp(this._idMap, s), this[s.name] = e, e._setControlNode(this), s.action) {case 1:
              e.play(0, !1);break;case 2:
              e.play(0, !0);}h.push(e);
        }this._aniList = h;
      }this._width > 0 && null == t.props.hitTestPrior && !this.mouseThrough && (this.hitTestPrior = !0);
    }, a.loadUI = function (t) {
      var e = i.uiMap[t];e && this.createView(e);
    }, a.destroy = function (t) {
      void 0 === t && (t = !0), this._aniList && (this._aniList.length = 0), this._idMap = null, this._aniList = null, this._watchMap = null, laya.ui.Component.prototype.destroy.call(this, t);
    }, a.changeData = function (t) {
      var i = this._watchMap[t];if (i) {
        console.log("change", t);for (var e = 0, s = i.length; e < s; e++) {
          i[e].exe(this);
        }
      }
    }, i._regs = function () {
      for (var t in i.uiClassMap) {
        l.regClass(t, i.uiClassMap[t]);
      }
    }, i.createComp = function (t, s, h, n) {
      if (!(s = s || i.getCompInstance(t))) return console.warn("can not create:" + t.type), null;var o = t.child;if (o) for (var r = s instanceof laya.ui.List, a = 0, c = o.length; a < c; a++) {
        var u = o[a];if (!s.hasOwnProperty("itemRender") || "render" != u.props.name && "render" !== u.props.renderType) {
          if ("Graphic" == u.type) l.addGraphicsToSprite(u, s);else if (l.isDrawType(u.type)) l.addGraphicToSprite(u, s, !0);else {
            if (r) {
              var _ = [],
                  d = i.createComp(u, null, h, _);_.length && (d._$bindData = _);
            } else d = i.createComp(u, null, h, n);"Script" == u.type ? "owner" in d ? d.owner = s : "target" in d && (d.target = s) : "mask" == u.props.renderType || "mask" == u.props.name ? s.mask = d : d instanceof laya.display.Sprite && s.addChild(d);
          }
        } else s.itemRender = u;
      }var f = t.props;for (var p in f) {
        var g = f[p];i.setCompValue(s, p, g, h, n);
      }return e.__typeof(s, "laya.ui.IItem") && s.initItems(), t.compId && h && h._idMap && (h._idMap[t.compId] = s), s;
    }, i.setCompValue = function (t, e, s, h, o) {
      if ("string" == typeof s && s.indexOf("${") > -1) {
        if (i._sheet || (i._sheet = l.getClass("laya.data.Sheet")), !i._sheet) return void console.warn("Can not find class Sheet");if (o) o.push(t, e, s);else if (h) {
          -1 == s.indexOf("].") && (s = s.replace(".", "[0]."));var a = new n(t, e, s);a.exe(h);for (var c, u, _ = s.replace(/\[.*?\]\./g, "."); null != (c = i._parseWatchData.exec(_));) {
            for (var d = c[1]; null != (u = i._parseKeyWord.exec(d));) {
              var f = u[0],
                  p = h._watchMap[f] || (h._watchMap[f] = []);p.push(a), i._sheet.notifer.on(f, h, h.changeData, [f]);
            }(p = h._watchMap[d] || (h._watchMap[d] = [])).push(a), i._sheet.notifer.on(d, h, h.changeData, [d]);
          }
        }
      } else if ("var" === e && h) h[s] = t;else if ("onClick" == e) {
        var g = r.window.eval("(function(){" + s + "})");t.on("click", h, g);
      } else t[e] = "true" === s || "false" !== s && s;
    }, i.getCompInstance = function (t) {
      var s,
          h = t.props ? t.props.runtime : null;return s = h ? i.viewClassMap[h] || i.uiClassMap[h] || e.__classmap[h] : i.uiClassMap[t.type], t.props && t.props.hasOwnProperty("renderType") && "instance" == t.props.renderType ? s.instance : s ? new s() : null;
    }, i.regComponent = function (t, e) {
      i.uiClassMap[t] = e, l.regClass(t, e);
    }, i.regViewRuntime = function (t, e) {
      i.viewClassMap[t] = e;
    }, i.uiMap = {}, i.viewClassMap = {}, i._sheet = null, s(i, ["uiClassMap", function () {
      return this.uiClassMap = { ViewStack: it, LinkButton: A, TextArea: ct, ColorPicker: O, Box: N, Button: A, CheckBox: W, Clip: Y, ComboBox: X, Component: P, HScrollBar: Z, HSlider: q, Image: D, Label: G, List: j, Panel: K, ProgressBar: R, Radio: Q, RadioGroup: lt, ScrollBar: E, Slider: V, Tab: at, TextInput: st, View: i, VScrollBar: et, VSlider: ht, Tree: tt, HBox: ot, VBox: rt, Sprite: b, Animation: o, Text: S, FontClip: U };
    }, "_parseWatchData", function () {
      return this._parseWatchData = /\${(.*?)}/g;
    }, "_parseKeyWord", function () {
      return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;
    }]), i.__init$ = function () {
      i._regs(), n = function () {
        function t(t, i, e) {
          this.comp = null, this.prop = null, this.value = null, this.comp = t, this.prop = i, this.value = e;
        }h(t, "");return t.prototype.exe = function (t) {
          var i = L.getBindFun(this.value);this.comp[this.prop] = i.call(this, t);
        }, t;
      }();
    }, i;
  }()),
      W = function (t) {
    function i(t, e) {
      void 0 === e && (e = ""), i.__super.call(this, t, e);
    }h(i, "laya.ui.CheckBox", t);var s = i.prototype;return s.preinitialize = function () {
      laya.ui.Component.prototype.preinitialize.call(this), this.toggle = !0, this._autoSize = !1;
    }, s.initialize = function () {
      t.prototype.initialize.call(this), this.createText(), this._text.align = "left", this._text.valign = "top", this._text.width = 0;
    }, n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "boolean" == typeof t ? this.selected = t : "string" == typeof t ? this.selected = "true" === t : e.superSet(A, this, "dataSource", t);
    }), i;
  }(A),
      F = function (t) {
    function i() {
      this._space = 0, this._align = "none", this._itemChanged = !1, i.__super.call(this);
    }h(i, "laya.ui.LayoutBox", N);var e = i.prototype;return e.addChild = function (t) {
      return t.on("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.addChild.call(this, t);
    }, e.onResize = function (t) {
      this._setItemChanged();
    }, e.addChildAt = function (t, i) {
      return t.on("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.addChildAt.call(this, t, i);
    }, e.removeChild = function (t) {
      return t.off("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.removeChild.call(this, t);
    }, e.removeChildAt = function (t) {
      return this.getChildAt(t).off("resize", this, this.onResize), this._setItemChanged(), laya.display.Node.prototype.removeChildAt.call(this, t);
    }, e.refresh = function () {
      this._setItemChanged();
    }, e.changeItems = function () {
      this._itemChanged = !1;
    }, e.sortItem = function (t) {
      t && t.sort(function (t, i) {
        return t.y - i.y;
      });
    }, e._setItemChanged = function () {
      this._itemChanged || (this._itemChanged = !0, this.callLater(this.changeItems));
    }, n(0, e, "space", function () {
      return this._space;
    }, function (t) {
      this._space = t, this._setItemChanged();
    }), n(0, e, "align", function () {
      return this._align;
    }, function (t) {
      this._align = t, this._setItemChanged();
    }), i;
  }(),
      U = function (t) {
    function i(t, e) {
      this._valueArr = null, this._indexMap = null, this._sheet = null, this._direction = "horizontal", this._spaceX = 0, this._spaceY = 0, this._align = "left", this._wordsW = 0, this._wordsH = 0, i.__super.call(this), t && (this.skin = t), e && (this.sheet = e);
    }h(i, "laya.ui.FontClip", t);var s = i.prototype;return s.createChildren = function () {
      this._bitmap = new T(), this.on("loaded", this, this._onClipLoaded);
    }, s._onClipLoaded = function () {
      this.callLater(this.changeValue);
    }, s.changeValue = function () {
      if (this._sources && this._valueArr) {
        this.graphics.clear(!0);var t;if (t = this._sources[0]) {
          var i = "horizontal" === this._direction;i ? (this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX), this._wordsH = t.sourceHeight) : (this._wordsW = t.sourceWidth, this._wordsH = (t.sourceHeight + this.spaceY) * this._valueArr.length);var e = 0;if (this._width) switch (this._align) {case "center":
              e = .5 * (this._width - this._wordsW);break;case "right":
              e = this._width - this._wordsW;break;default:
              e = 0;}for (var s = 0, h = this._valueArr.length; s < h; s++) {
            var n = this._indexMap[this._valueArr.charAt(s)];this.sources[n] && (t = this.sources[n], i ? this.graphics.drawTexture(t, e + s * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight) : this.graphics.drawTexture(t, 0 + e, s * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight));
          }this._width || (this.resetLayoutX(), this.callLater(this.changeSize)), this._height || (this.resetLayoutY(), this.callLater(this.changeSize));
        }
      }
    }, s.destroy = function (i) {
      void 0 === i && (i = !0), this._valueArr = null, this._indexMap = null, this.graphics.clear(!0), this.removeSelf(), this.off("loaded", this, this._onClipLoaded), t.prototype.destroy.call(this, i);
    }, n(0, s, "sheet", function () {
      return this._sheet;
    }, function (t) {
      t += "", this._sheet = t;var i = t.split(" ");this._clipX = String(i[0]).length, this.clipY = i.length, this._indexMap = {};for (var e = 0; e < this._clipY; e++) {
        for (var s = i[e].split(""), h = 0, n = s.length; h < n; h++) {
          this._indexMap[s[h]] = e * this._clipX + h;
        }
      }
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(Y, this, "height", t), this.callLater(this.changeValue);
    }), n(0, s, "direction", function () {
      return this._direction;
    }, function (t) {
      this._direction = t, this.callLater(this.changeValue);
    }), n(0, s, "value", function () {
      return this._valueArr ? this._valueArr : "";
    }, function (t) {
      t += "", this._valueArr = t, this.callLater(this.changeValue);
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(Y, this, "width", t), this.callLater(this.changeValue);
    }), n(0, s, "spaceX", function () {
      return this._spaceX;
    }, function (t) {
      this._spaceX = t, "horizontal" === this._direction && this.callLater(this.changeValue);
    }), n(0, s, "spaceY", function () {
      return this._spaceY;
    }, function (t) {
      this._spaceY = t, "horizontal" !== this._direction && this.callLater(this.changeValue);
    }), n(0, s, "align", function () {
      return this._align;
    }, function (t) {
      this._align = t, this.callLater(this.changeValue);
    }), n(0, s, "measureWidth", function () {
      return this._wordsW;
    }), n(0, s, "measureHeight", function () {
      return this._wordsH;
    }), i;
  }(Y),
      j = function (t) {
    function i() {
      this.selectHandler = null, this.renderHandler = null, this.mouseHandler = null, this.selectEnable = !1, this.totalPage = 0, this._content = null, this._scrollBar = null, this._itemRender = null, this._repeatX = 0, this._repeatY = 0, this._repeatX2 = 0, this._repeatY2 = 0, this._spaceX = 0, this._spaceY = 0, this._array = null, this._startIndex = 0, this._selectedIndex = -1, this._page = 0, this._isVertical = !0, this._cellSize = 20, this._cellOffset = 0, this._isMoved = !1, this.cacheContent = !1, this._createdLine = 0, this._cellChanged = !1, i.__super.call(this), this._cells = [], this._offset = new y();
    }h(i, "laya.ui.List", t);var s = i.prototype;return e.imps(s, { "laya.ui.IRender": !0, "laya.ui.IItem": !0 }), s.destroy = function (t) {
      void 0 === t && (t = !0), this._content && this._content.destroy(t), this._scrollBar && this._scrollBar.destroy(t), laya.ui.Component.prototype.destroy.call(this, t), this._content = null, this._scrollBar = null, this._itemRender = null, this._cells = null, this._array = null, this.selectHandler = this.renderHandler = this.mouseHandler = null;
    }, s.createChildren = function () {
      this.addChild(this._content = new N());
    }, s.onScrollStart = function () {
      this._$P.cacheAs || (this._$P.cacheAs = e.superGet(N, this, "cacheAs")), e.superSet(N, this, "cacheAs", "none"), this._scrollBar.once("end", this, this.onScrollEnd);
    }, s.onScrollEnd = function () {
      e.superSet(N, this, "cacheAs", this._$P.cacheAs);
    }, s._removePreScrollBar = function () {
      var t = this.removeChildByName("scrollBar");t && t.destroy(!0);
    }, s.changeCells = function () {
      if (this._cellChanged = !1, this._itemRender) {
        this.scrollBar = this.getChildByName("scrollBar");var t = this._getOneCell(),
            i = t.width + this._spaceX || 1,
            e = t.height + this._spaceY || 1;this._width > 0 && (this._repeatX2 = this._isVertical ? Math.round(this._width / i) : Math.ceil(this._width / i)), this._height > 0 && (this._repeatY2 = this._isVertical ? Math.ceil(this._height / e) : Math.round(this._height / e));var s = this._width ? this._width : i * this.repeatX - this._spaceX,
            h = this._height ? this._height : e * this.repeatY - this._spaceY;this._cellSize = this._isVertical ? e : i, this._cellOffset = this._isVertical ? e * Math.max(this._repeatY2, this._repeatY) - h - this._spaceY : i * Math.max(this._repeatX2, this._repeatX) - s - this._spaceX, this._isVertical && this._scrollBar ? this._scrollBar.height = h : !this._isVertical && this._scrollBar && (this._scrollBar.width = s), this.setContentSize(s, h);var n = this._isVertical ? this.repeatX : this.repeatY,
            o = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);this._createItems(0, n, o), this._createdLine = o, this._array && (this.array = this._array, this.runCallLater(this.renderItems));
      }
    }, s._getOneCell = function () {
      if (0 === this._cells.length) {
        var t = this.createItem();if (this._offset.setTo(t.x, t.y), this.cacheContent) return t;this._cells.push(t);
      }return this._cells[0];
    }, s._createItems = function (t, i, e) {
      var s = this._content,
          h = this._getOneCell(),
          n = h.width + this._spaceX,
          o = h.height + this._spaceY;if (this.cacheContent) {
        var r = new N();r.cacheAsBitmap = !0, r.pos((this._isVertical ? 0 : t) * n, (this._isVertical ? t : 0) * o), this._content.addChild(r), this._content.optimizeScrollRect = !0, s = r;
      } else {
        for (var l = [], a = this._cells.length - 1; a > -1; a--) {
          var c = this._cells[a];c.removeSelf(), l.push(c);
        }this._cells.length = 0;
      }for (var u = t; u < e; u++) {
        for (var _ = 0; _ < i; _++) {
          (h = l && l.length ? l.pop() : this.createItem()).x = (this._isVertical ? _ : u) * n - s.x, h.y = (this._isVertical ? u : _) * o - s.y, h.name = "item" + (u * i + _), s.addChild(h), this.addCell(h);
        }
      }
    }, s.createItem = function () {
      var t = [];if ("function" == typeof this._itemRender) var i = new this._itemRender();else i = $.createComp(this._itemRender, null, null, t);if (0 == t.length && i._watchMap) {
        var e = i._watchMap;for (var s in e) {
          for (var h = e[s], n = 0; n < h.length; n++) {
            var o = h[n];t.push(o.comp, o.prop, o.value);
          }
        }
      }return t.length && (i._$bindData = t), i;
    }, s.addCell = function (t) {
      t.on("click", this, this.onCellMouse), t.on("rightclick", this, this.onCellMouse), t.on("mouseover", this, this.onCellMouse), t.on("mouseout", this, this.onCellMouse), t.on("mousedown", this, this.onCellMouse), t.on("mouseup", this, this.onCellMouse), this._cells.push(t);
    }, s.initItems = function () {
      if (!this._itemRender && null != this.getChildByName("item0")) {
        this.repeatX = 1;var t = 0;t = 0;for (var i = 0; i < 1e4; i++) {
          var e = this.getChildByName("item" + i);{
            if (!e) break;this.addCell(e), t++;
          }
        }this.repeatY = t;
      }
    }, s.setContentSize = function (t, i) {
      this._content.width = t, this._content.height = i, (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) && (this._content.scrollRect || (this._content.scrollRect = new v()), this._content.scrollRect.setTo(-this._offset.x, -this._offset.y, t, i), this._content.scrollRect = this._content.scrollRect), this.event("resize");
    }, s.onCellMouse = function (t) {
      "mousedown" === t.type && (this._isMoved = !1);var i = t.currentTarget,
          e = this._startIndex + this._cells.indexOf(i);e < 0 || ("click" === t.type || "rightclick" === t.type ? this.selectEnable && !this._isMoved ? this.selectedIndex = e : this.changeCellState(i, !0, 0) : "mouseover" !== t.type && "mouseout" !== t.type || this._selectedIndex === e || this.changeCellState(i, "mouseover" === t.type, 0), this.mouseHandler && this.mouseHandler.runWith([t, e]));
    }, s.changeCellState = function (t, i, e) {
      var s = t.getChildByName("selectBox");s && (this.selectEnable = !0, s.visible = i, s.index = e);
    }, s.changeSize = function () {
      laya.ui.Component.prototype.changeSize.call(this), this.setContentSize(this.width, this.height), this._scrollBar && this.callLater(this.onScrollBarChange);
    }, s.onScrollBarChange = function (t) {
      this.runCallLater(this.changeCells);var i = this._scrollBar.value,
          e = this._isVertical ? this.repeatX : this.repeatY,
          s = this._isVertical ? this.repeatY : this.repeatX,
          h = Math.floor(i / this._cellSize);if (this.cacheContent) o = s + 1, this._createdLine - h < o && (this._createItems(this._createdLine, e, this._createdLine + o), this.renderItems(this._createdLine * e, 0), this._createdLine += o);else {
        var n = h * e,
            o = 0;if (n > this._startIndex) {
          o = n - this._startIndex;var r = !0,
              l = this._startIndex + e * (s + 1);this._isMoved = !0;
        } else n < this._startIndex && (o = this._startIndex - n, r = !1, l = this._startIndex - 1, this._isMoved = !0);for (var a = 0; a < o; a++) {
          if (r) {
            var c = this._cells.shift();this._cells[this._cells.length] = c;var u = l + a;
          } else c = this._cells.pop(), this._cells.unshift(c), u = l - a;var _ = Math.floor(u / e) * this._cellSize;this._isVertical ? c.y = _ : c.x = _, this.renderItem(c, u);
        }this._startIndex = n, this.changeSelectStatus();
      }var d = this._content.scrollRect;this._isVertical ? (d.y = i - this._offset.y, d.x = -this._offset.x) : (d.y = -this._offset.y, d.x = i - this._offset.x), this._content.scrollRect = d;
    }, s.posCell = function (t, i) {
      if (this._scrollBar) {
        var e = this._isVertical ? this.repeatX : this.repeatY,
            s = (this._isVertical ? this.repeatY : this.repeatX, Math.floor(i / e) * this._cellSize);this._isVertical ? t.y = s : t.x = s;
      }
    }, s.changeSelectStatus = function () {
      for (var t = 0, i = this._cells.length; t < i; t++) {
        this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1);
      }
    }, s.renderItems = function (t, i) {
      void 0 === t && (t = 0), void 0 === i && (i = 0);for (var e = t, s = i || this._cells.length; e < s; e++) {
        this.renderItem(this._cells[e], this._startIndex + e);
      }this.changeSelectStatus();
    }, s.renderItem = function (t, i) {
      this._array && i >= 0 && i < this._array.length ? (t.visible = !0, t._$bindData ? (t._dataSource = this._array[i], this._bindData(t, this._array[i])) : t.dataSource = this._array[i], this.cacheContent || this.posCell(t, i), this.hasListener("render") && this.event("render", [t, i]), this.renderHandler && this.renderHandler.runWith([t, i])) : (t.visible = !1, t.dataSource = null);
    }, s._bindData = function (t, i) {
      for (var e = t._$bindData, s = 0, h = e.length; s < h; s++) {
        var n = e[s++],
            o = e[s++],
            r = e[s],
            l = L.getBindFun(r);n[o] = l.call(this, i);
      }
    }, s.refresh = function () {
      this.array = this._array;
    }, s.getItem = function (t) {
      return t > -1 && t < this._array.length ? this._array[t] : null;
    }, s.changeItem = function (t, i) {
      t > -1 && t < this._array.length && (this._array[t] = i, t >= this._startIndex && t < this._startIndex + this._cells.length && this.renderItem(this.getCell(t), t));
    }, s.setItem = function (t, i) {
      this.changeItem(t, i);
    }, s.addItem = function (t) {
      this._array.push(t), this.array = this._array;
    }, s.addItemAt = function (t, i) {
      this._array.splice(i, 0, t), this.array = this._array;
    }, s.deleteItem = function (t) {
      this._array.splice(t, 1), this.array = this._array;
    }, s.getCell = function (t) {
      return this.runCallLater(this.changeCells), t > -1 && this._cells ? this._cells[(t - this._startIndex) % this._cells.length] : null;
    }, s.scrollTo = function (t) {
      if (this._scrollBar) {
        var i = this._isVertical ? this.repeatX : this.repeatY;this._scrollBar.value = Math.floor(t / i) * this._cellSize;
      } else this.startIndex = t;
    }, s.tweenTo = function (t, i, e) {
      if (void 0 === i && (i = 200), this._scrollBar) {
        var s = this._isVertical ? this.repeatX : this.repeatY;x.to(this._scrollBar, { value: Math.floor(t / s) * this._cellSize }, i, null, e, 0, !0);
      } else this.startIndex = t, e && e.run();
    }, s._setCellChanged = function () {
      this._cellChanged || (this._cellChanged = !0, this.callLater(this.changeCells));
    }, s.commitMeasure = function () {
      this.runCallLater(this.changeCells);
    }, n(0, s, "cacheAs", t.prototype._$get_cacheAs, function (t) {
      e.superSet(N, this, "cacheAs", t), this._scrollBar && (this._$P.cacheAs = null, "none" !== t ? this._scrollBar.on("start", this, this.onScrollStart) : this._scrollBar.off("start", this, this.onScrollStart));
    }), n(0, s, "content", function () {
      return this._content;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      t != this._height && (e.superSet(N, this, "height", t), this._setCellChanged());
    }), n(0, s, "itemRender", function () {
      return this._itemRender;
    }, function (t) {
      if (this._itemRender != t) {
        this._itemRender = t;for (var i = this._cells.length - 1; i > -1; i--) {
          this._cells[i].destroy();
        }this._cells.length = 0, this._setCellChanged();
      }
    }), n(0, s, "vScrollBarSkin", function () {
      return this._scrollBar ? this._scrollBar.skin : null;
    }, function (t) {
      this._removePreScrollBar();var i = new et();i.name = "scrollBar", i.right = 0, t && " " != t && (i.skin = t), this.scrollBar = i, this.addChild(i), this._setCellChanged();
    }), n(0, s, "page", function () {
      return this._page;
    }, function (t) {
      this._page = t, this._array && (this._page = t > 0 ? t : 0, this._page = this._page < this.totalPage ? this._page : this.totalPage - 1, this.startIndex = this._page * this.repeatX * this.repeatY);
    }), n(0, s, "hScrollBarSkin", function () {
      return this._scrollBar ? this._scrollBar.skin : null;
    }, function (t) {
      this._removePreScrollBar();var i = new Z();i.name = "scrollBar", i.bottom = 0, t && " " != t && (i.skin = t), this.scrollBar = i, this.addChild(i), this._setCellChanged();
    }), n(0, s, "repeatX", function () {
      return this._repeatX > 0 ? this._repeatX : this._repeatX2 > 0 ? this._repeatX2 : 1;
    }, function (t) {
      this._repeatX = t, this._setCellChanged();
    }), n(0, s, "scrollBar", function () {
      return this._scrollBar;
    }, function (t) {
      this._scrollBar != t && (this._scrollBar = t, t && (this._isVertical = this._scrollBar.isVertical, this.addChild(this._scrollBar), this._scrollBar.on("change", this, this.onScrollBarChange)));
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      t != this._width && (e.superSet(N, this, "width", t), this._setCellChanged());
    }), n(0, s, "repeatY", function () {
      return this._repeatY > 0 ? this._repeatY : this._repeatY2 > 0 ? this._repeatY2 : 1;
    }, function (t) {
      this._repeatY = t, this._setCellChanged();
    }), n(0, s, "spaceX", function () {
      return this._spaceX;
    }, function (t) {
      this._spaceX = t, this._setCellChanged();
    }), n(0, s, "spaceY", function () {
      return this._spaceY;
    }, function (t) {
      this._spaceY = t, this._setCellChanged();
    }), n(0, s, "selectedIndex", function () {
      return this._selectedIndex;
    }, function (t) {
      this._selectedIndex != t && (this._selectedIndex = t, this.changeSelectStatus(), this.event("change"), this.selectHandler && this.selectHandler.runWith(t), this.startIndex = this._startIndex);
    }), n(0, s, "selectedItem", function () {
      return -1 != this._selectedIndex ? this._array[this._selectedIndex] : null;
    }, function (t) {
      this.selectedIndex = this._array.indexOf(t);
    }), n(0, s, "length", function () {
      return this._array ? this._array.length : 0;
    }), n(0, s, "selection", function () {
      return this.getCell(this._selectedIndex);
    }, function (t) {
      this.selectedIndex = this._startIndex + this._cells.indexOf(t);
    }), n(0, s, "startIndex", function () {
      return this._startIndex;
    }, function (t) {
      this._startIndex = t > 0 ? t : 0, this.callLater(this.renderItems);
    }), n(0, s, "array", function () {
      return this._array;
    }, function (t) {
      this.runCallLater(this.changeCells), this._array = t || [];var i = this._array.length;if (this.totalPage = Math.ceil(i / (this.repeatX * this.repeatY)), this._selectedIndex = this._selectedIndex < i ? this._selectedIndex : i - 1, this.startIndex = this._startIndex, this._scrollBar) {
        this._scrollBar.stopScroll();var e = this._isVertical ? this.repeatX : this.repeatY,
            s = this._isVertical ? this.repeatY : this.repeatX,
            h = Math.ceil(i / e);(this._cellOffset > 0 ? this.totalPage + 1 : this.totalPage) > 1 ? (this._scrollBar.scrollSize = this._cellSize, this._scrollBar.thumbPercent = s / h, this._scrollBar.setScroll(0, (h - s) * this._cellSize + this._cellOffset, this._scrollBar.value), this._scrollBar.target = this._content) : (this._scrollBar.setScroll(0, 0, 0), this._scrollBar.target = this._content);
      }
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.array = t : e.superSet(N, this, "dataSource", t);
    }), n(0, s, "cells", function () {
      return this.runCallLater(this.changeCells), this._cells;
    }), i;
  }(N),
      K = function (t) {
    function i() {
      this._content = null, this._vScrollBar = null, this._hScrollBar = null, this._scrollChanged = !1, i.__super.call(this), this.width = this.height = 100;
    }h(i, "laya.ui.Panel", t);var s = i.prototype;return s.destroy = function (t) {
      void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._content && this._content.destroy(t), this._vScrollBar && this._vScrollBar.destroy(t), this._hScrollBar && this._hScrollBar.destroy(t), this._vScrollBar = null, this._hScrollBar = null, this._content = null;
    }, s.destroyChildren = function () {
      this._content.destroyChildren();
    }, s.createChildren = function () {
      laya.display.Node.prototype.addChild.call(this, this._content = new N());
    }, s.addChild = function (t) {
      return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChild(t);
    }, s.onResize = function () {
      this._setScrollChanged();
    }, s.addChildAt = function (t, i) {
      return t.on("resize", this, this.onResize), this._setScrollChanged(), this._content.addChildAt(t, i);
    }, s.removeChild = function (t) {
      return t.off("resize", this, this.onResize), this._setScrollChanged(), this._content.removeChild(t);
    }, s.removeChildAt = function (t) {
      return this.getChildAt(t).off("resize", this, this.onResize), this._setScrollChanged(), this._content.removeChildAt(t);
    }, s.removeChildren = function (t, i) {
      void 0 === t && (t = 0), void 0 === i && (i = 2147483647);for (var e = this._content.numChildren - 1; e > -1; e--) {
        this._content.removeChildAt(e);
      }return this._setScrollChanged(), this;
    }, s.getChildAt = function (t) {
      return this._content.getChildAt(t);
    }, s.getChildByName = function (t) {
      return this._content.getChildByName(t);
    }, s.getChildIndex = function (t) {
      return this._content.getChildIndex(t);
    }, s.changeScroll = function () {
      this._scrollChanged = !1;var t = this.contentWidth || 1,
          i = this.contentHeight || 1,
          e = this._vScrollBar,
          s = this._hScrollBar,
          h = e && i > this._height,
          n = s && t > this._width,
          o = h ? this._width - e.width : this._width,
          r = n ? this._height - s.height : this._height;e && (e.x = this._width - e.width, e.y = 0, e.height = this._height - (n ? s.height : 0), e.scrollSize = Math.max(.033 * this._height, 1), e.thumbPercent = r / i, e.setScroll(0, i - r, e.value)), s && (s.x = 0, s.y = this._height - s.height, s.width = this._width - (h ? e.width : 0), s.scrollSize = Math.max(.033 * this._width, 1), s.thumbPercent = o / t, s.setScroll(0, t - o, s.value));
    }, s.changeSize = function () {
      laya.ui.Component.prototype.changeSize.call(this), this.setContentSize(this._width, this._height);
    }, s.setContentSize = function (t, i) {
      var e = this._content;e.width = t, e.height = i, e.scrollRect || (e.scrollRect = new v()), e.scrollRect.setTo(0, 0, t, i), e.scrollRect = e.scrollRect;
    }, s.onScrollBarChange = function (t) {
      var i = this._content.scrollRect;if (i) {
        var e = Math.round(t.value);t.isVertical ? i.y = e : i.x = e, this._content.scrollRect = i;
      }
    }, s.scrollTo = function (t, i) {
      void 0 === t && (t = 0), void 0 === i && (i = 0), this.vScrollBar && (this.vScrollBar.value = i), this.hScrollBar && (this.hScrollBar.value = t);
    }, s.refresh = function () {
      this.changeScroll();
    }, s.onScrollStart = function () {
      this._$P.cacheAs || (this._$P.cacheAs = e.superGet(N, this, "cacheAs")), e.superSet(N, this, "cacheAs", "none"), this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd), this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd);
    }, s.onScrollEnd = function () {
      e.superSet(N, this, "cacheAs", this._$P.cacheAs);
    }, s._setScrollChanged = function () {
      this._scrollChanged || (this._scrollChanged = !0, this.callLater(this.changeScroll));
    }, n(0, s, "numChildren", function () {
      return this._content.numChildren;
    }), n(0, s, "hScrollBarSkin", function () {
      return this._hScrollBar ? this._hScrollBar.skin : null;
    }, function (t) {
      null == this._hScrollBar && (laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new Z()), this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]), this._hScrollBar.target = this._content, this._setScrollChanged()), this._hScrollBar.skin = t;
    }), n(0, s, "contentWidth", function () {
      for (var t = 0, i = this._content.numChildren - 1; i > -1; i--) {
        var e = this._content.getChildAt(i);t = Math.max(e.x + e.width * e.scaleX, t);
      }return t;
    }), n(0, s, "contentHeight", function () {
      for (var t = 0, i = this._content.numChildren - 1; i > -1; i--) {
        var e = this._content.getChildAt(i);t = Math.max(e.y + e.height * e.scaleY, t);
      }return t;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(N, this, "width", t), this._setScrollChanged();
    }), n(0, s, "hScrollBar", function () {
      return this._hScrollBar;
    }), n(0, s, "content", function () {
      return this._content;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(N, this, "height", t), this._setScrollChanged();
    }), n(0, s, "vScrollBarSkin", function () {
      return this._vScrollBar ? this._vScrollBar.skin : null;
    }, function (t) {
      null == this._vScrollBar && (laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new et()), this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]), this._vScrollBar.target = this._content, this._setScrollChanged()), this._vScrollBar.skin = t;
    }), n(0, s, "vScrollBar", function () {
      return this._vScrollBar;
    }), n(0, s, "cacheAs", t.prototype._$get_cacheAs, function (t) {
      e.superSet(N, this, "cacheAs", t), this._$P.cacheAs = null, "none" !== t ? (this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)) : (this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart), this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart));
    }), i;
  }(N),
      Z = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.HScrollBar", t);return i.prototype.initialize = function () {
      t.prototype.initialize.call(this), this.slider.isVertical = !1;
    }, i;
  }(E),
      q = function (t) {
    function i(t) {
      i.__super.call(this, t), this.isVertical = !1;
    }return h(i, "laya.ui.HSlider", V), i;
  }(),
      J = function (t) {
    function i(t, e) {
      this.selectHandler = null, this._items = null, this._selectedIndex = -1, this._skin = null, this._direction = "horizontal", this._space = 0, this._labels = null, this._labelColors = null, this._labelFont = null, this._labelStrokeColor = null, this._strokeColors = null, this._labelStroke = NaN, this._labelSize = 0, this._labelBold = !1, this._labelPadding = null, this._labelAlign = null, this._stateNum = 0, this._labelChanged = !1, i.__super.call(this), this.skin = e, this.labels = t;
    }h(i, "laya.ui.UIGroup", t);var s = i.prototype;return e.imps(s, { "laya.ui.IItem": !0 }), s.preinitialize = function () {
      this.mouseEnabled = !0;
    }, s.destroy = function (t) {
      void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._items && (this._items.length = 0), this._items = null, this.selectHandler = null;
    }, s.addItem = function (t, i) {
      void 0 === i && (i = !0);var e = t,
          s = this._items.length;if (e.name = "item" + s, this.addChild(e), this.initItems(), i && s > 0) {
        var h = this._items[s - 1];"horizontal" == this._direction ? e.x = h.x + h.width + this._space : e.y = h.y + h.height + this._space;
      } else i && (e.x = 0, e.y = 0);return s;
    }, s.delItem = function (t, i) {
      void 0 === i && (i = !0);var e = this._items.indexOf(t);if (-1 != e) {
        var s = t;this.removeChild(s);for (var h = e + 1, n = this._items.length; h < n; h++) {
          var o = this._items[h];o.name = "item" + (h - 1), i && ("horizontal" == this._direction ? o.x -= s.width + this._space : o.y -= s.height + this._space);
        }if (this.initItems(), this._selectedIndex > -1) {
          var r = 0;r = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1, this._selectedIndex = -1, this.selectedIndex = r;
        }
      }
    }, s.initItems = function () {
      this._items || (this._items = []), this._items.length = 0;for (var t = 0; t < 1e4; t++) {
        var i = this.getChildByName("item" + t);if (null == i) break;this._items.push(i), i.selected = t === this._selectedIndex, i.clickHandler = p.create(this, this.itemClick, [t], !1);
      }
    }, s.itemClick = function (t) {
      this.selectedIndex = t;
    }, s.setSelect = function (t, i) {
      this._items && t > -1 && t < this._items.length && (this._items[t].selected = i);
    }, s.createItem = function (t, i) {
      return null;
    }, s.changeLabels = function () {
      if (this._labelChanged = !1, this._items) for (var t = 0, i = 0, e = this._items.length; i < e; i++) {
        var s = this._items[i];this._skin && (s.skin = this._skin), this._labelColors && (s.labelColors = this._labelColors), this._labelSize && (s.labelSize = this._labelSize), this._labelStroke && (s.labelStroke = this._labelStroke), this._labelStrokeColor && (s.labelStrokeColor = this._labelStrokeColor), this._strokeColors && (s.strokeColors = this._strokeColors), this._labelBold && (s.labelBold = this._labelBold), this._labelPadding && (s.labelPadding = this._labelPadding), this._labelAlign && (s.labelAlign = this._labelAlign), this._stateNum && (s.stateNum = this._stateNum), this._labelFont && (s.labelFont = this._labelFont), "horizontal" === this._direction ? (s.y = 0, s.x = t, t += s.width + this._space) : (s.x = 0, s.y = t, t += s.height + this._space);
      }this.changeSize();
    }, s.commitMeasure = function () {
      this.runCallLater(this.changeLabels);
    }, s._setLabelChanged = function () {
      this._labelChanged || (this._labelChanged = !0, this.callLater(this.changeLabels));
    }, n(0, s, "labelStrokeColor", function () {
      return this._labelStrokeColor;
    }, function (t) {
      this._labelStrokeColor != t && (this._labelStrokeColor = t, this._setLabelChanged());
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, this._setLabelChanged());
    }), n(0, s, "selectedIndex", function () {
      return this._selectedIndex;
    }, function (t) {
      this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(t, !0), this.event("change"), this.selectHandler && this.selectHandler.runWith(this._selectedIndex));
    }), n(0, s, "labels", function () {
      return this._labels;
    }, function (t) {
      if (this._labels != t) {
        if (this._labels = t, this.removeChildren(), this._setLabelChanged(), this._labels) for (var i = this._labels.split(","), e = 0, s = i.length; e < s; e++) {
          var h = this.createItem(this._skin, i[e]);h.name = "item" + e, this.addChild(h);
        }this.initItems();
      }
    }), n(0, s, "strokeColors", function () {
      return this._strokeColors;
    }, function (t) {
      this._strokeColors != t && (this._strokeColors = t, this._setLabelChanged());
    }), n(0, s, "labelColors", function () {
      return this._labelColors;
    }, function (t) {
      this._labelColors != t && (this._labelColors = t, this._setLabelChanged());
    }), n(0, s, "labelStroke", function () {
      return this._labelStroke;
    }, function (t) {
      this._labelStroke != t && (this._labelStroke = t, this._setLabelChanged());
    }), n(0, s, "labelSize", function () {
      return this._labelSize;
    }, function (t) {
      this._labelSize != t && (this._labelSize = t, this._setLabelChanged());
    }), n(0, s, "stateNum", function () {
      return this._stateNum;
    }, function (t) {
      this._stateNum != t && (this._stateNum = t, this._setLabelChanged());
    }), n(0, s, "labelBold", function () {
      return this._labelBold;
    }, function (t) {
      this._labelBold != t && (this._labelBold = t, this._setLabelChanged());
    }), n(0, s, "labelFont", function () {
      return this._labelFont;
    }, function (t) {
      this._labelFont != t && (this._labelFont = t, this._setLabelChanged());
    }), n(0, s, "labelPadding", function () {
      return this._labelPadding;
    }, function (t) {
      this._labelPadding != t && (this._labelPadding = t, this._setLabelChanged());
    }), n(0, s, "direction", function () {
      return this._direction;
    }, function (t) {
      this._direction = t, this._setLabelChanged();
    }), n(0, s, "space", function () {
      return this._space;
    }, function (t) {
      this._space = t, this._setLabelChanged();
    }), n(0, s, "items", function () {
      return this._items;
    }), n(0, s, "selection", function () {
      return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
    }, function (t) {
      this.selectedIndex = this._items.indexOf(t);
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : e.superSet(N, this, "dataSource", t);
    }), i;
  }(N),
      Q = function (t) {
    function i(t, e) {
      this._value = null, void 0 === e && (e = ""), i.__super.call(this, t, e);
    }h(i, "laya.ui.Radio", t);var e = i.prototype;return e.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._value = null;
    }, e.preinitialize = function () {
      laya.ui.Component.prototype.preinitialize.call(this), this.toggle = !1, this._autoSize = !1;
    }, e.initialize = function () {
      t.prototype.initialize.call(this), this.createText(), this._text.align = "left", this._text.valign = "top", this._text.width = 0, this.on("click", this, this.onClick);
    }, e.onClick = function (t) {
      this.selected = !0;
    }, n(0, e, "value", function () {
      return null != this._value ? this._value : this.label;
    }, function (t) {
      this._value = t;
    }), i;
  }(A),
      tt = function (t) {
    function i() {
      this._list = null, this._source = null, this._renderHandler = null, this._spaceLeft = 10, this._spaceBottom = 0, this._keepStatus = !0, i.__super.call(this), this.width = this.height = 200;
    }h(i, "laya.ui.Tree", t);var s = i.prototype;return e.imps(s, { "laya.ui.IRender": !0 }), s.destroy = function (t) {
      void 0 === t && (t = !0), laya.ui.Component.prototype.destroy.call(this, t), this._list && this._list.destroy(t), this._list = null, this._source = null, this._renderHandler = null;
    }, s.createChildren = function () {
      this.addChild(this._list = new j()), this._list.renderHandler = p.create(this, this.renderItem, null, !1), this._list.repeatX = 1, this._list.on("change", this, this.onListChange);
    }, s.onListChange = function (t) {
      this.event("change");
    }, s.getArray = function () {
      var t,
          i = [];for (var e in this._source) {
        t = this._source[e], this.getParentOpenStatus(t) && (t.x = this._spaceLeft * this.getDepth(t), i.push(t));
      }return i;
    }, s.getDepth = function (t, i) {
      return void 0 === i && (i = 0), null == t.nodeParent ? i : this.getDepth(t.nodeParent, i + 1);
    }, s.getParentOpenStatus = function (t) {
      var i = t.nodeParent;return null == i || !!i.isOpen && (null == i.nodeParent || this.getParentOpenStatus(i));
    }, s.renderItem = function (t, i) {
      var e = t.dataSource;if (e) {
        t.left = e.x;var s = t.getChildByName("arrow");s && (e.hasChild ? (s.visible = !0, s.index = e.isOpen ? 1 : 0, s.tag = i, s.off("click", this, this.onArrowClick), s.on("click", this, this.onArrowClick)) : s.visible = !1);var h = t.getChildByName("folder");h && (2 == h.clipY ? h.index = e.isDirectory ? 0 : 1 : h.index = e.isDirectory ? e.isOpen ? 1 : 0 : 2), this._renderHandler && this._renderHandler.runWith([t, i]);
      }
    }, s.onArrowClick = function (t) {
      var i = t.currentTarget.tag;this._list.array[i].isOpen = !this._list.array[i].isOpen, this.event("open"), this._list.array = this.getArray();
    }, s.setItemState = function (t, i) {
      this._list.array[t] && (this._list.array[t].isOpen = i, this._list.array = this.getArray());
    }, s.fresh = function () {
      this._list.array = this.getArray(), this.repaint();
    }, s.parseXml = function (t, i, e, s) {
      var h,
          n = t.childNodes,
          o = n.length;if (!s) {
        h = {};var r,
            l = t.attributes;for (var a in l) {
          var c = (r = l[a]).nodeName,
              u = r.nodeValue;h[c] = "true" == u || "false" != u && u;
        }h.nodeParent = e, o > 0 && (h.isDirectory = !0), h.hasChild = o > 0, i.push(h);
      }for (var _ = 0; _ < o; _++) {
        var d = n[_];this.parseXml(d, i, h, !1);
      }
    }, s.parseOpenStatus = function (t, i) {
      for (var e = 0, s = i.length; e < s; e++) {
        var h = i[e];if (h.isDirectory) for (var n = 0, o = t.length; n < o; n++) {
          var r = t[n];if (r.isDirectory && this.isSameParent(r, h) && h.label == r.label) {
            h.isOpen = r.isOpen;break;
          }
        }
      }
    }, s.isSameParent = function (t, i) {
      return null == t.nodeParent && null == i.nodeParent || null != t.nodeParent && null != i.nodeParent && t.nodeParent.label == i.nodeParent.label && this.isSameParent(t.nodeParent, i.nodeParent);
    }, s.filter = function (t) {
      if (Boolean(t)) {
        var i = [];this.getFilterSource(this._source, i, t), this._list.array = i;
      } else this._list.array = this.getArray();
    }, s.getFilterSource = function (t, i, e) {
      e = e.toLocaleLowerCase();var s;for (var h in t) {
        !(s = t[h]).isDirectory && String(s.label).toLowerCase().indexOf(e) > -1 && (s.x = 0, i.push(s)), s.child && s.child.length > 0 && this.getFilterSource(s.child, i, e);
      }
    }, n(0, s, "spaceBottom", function () {
      return this._list.spaceY;
    }, function (t) {
      this._list.spaceY = t;
    }), n(0, s, "keepStatus", function () {
      return this._keepStatus;
    }, function (t) {
      this._keepStatus = t;
    }), n(0, s, "itemRender", function () {
      return this._list.itemRender;
    }, function (t) {
      this._list.itemRender = t;
    }), n(0, s, "array", function () {
      return this._list.array;
    }, function (t) {
      this._keepStatus && this._list.array && t && this.parseOpenStatus(this._list.array, t), this._source = t, this._list.array = this.getArray();
    }), n(0, s, "mouseHandler", function () {
      return this._list.mouseHandler;
    }, function (t) {
      this._list.mouseHandler = t;
    }), n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      this._dataSource = t, e.superSet(N, this, "dataSource", t);
    }), n(0, s, "source", function () {
      return this._source;
    }), n(0, s, "scrollBar", function () {
      return this._list.scrollBar;
    }), n(0, s, "list", function () {
      return this._list;
    }), n(0, s, "scrollBarSkin", function () {
      return this._list.vScrollBarSkin;
    }, function (t) {
      this._list.vScrollBarSkin = t;
    }), n(0, s, "renderHandler", function () {
      return this._renderHandler;
    }, function (t) {
      this._renderHandler = t;
    }), n(0, s, "selectedIndex", function () {
      return this._list.selectedIndex;
    }, function (t) {
      this._list.selectedIndex = t;
    }), n(0, s, "spaceLeft", function () {
      return this._spaceLeft;
    }, function (t) {
      this._spaceLeft = t;
    }), n(0, s, "selectedItem", function () {
      return this._list.selectedItem;
    }, function (t) {
      this._list.selectedItem = t;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(N, this, "width", t), this._list.width = t;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(N, this, "height", t), this._list.height = t;
    }), n(0, s, "xml", null, function (t) {
      var i = [];this.parseXml(t.childNodes[0], i, null, !0), this.array = i;
    }), n(0, s, "selectedPath", function () {
      return this._list.selectedItem ? this._list.selectedItem.path : null;
    }), i;
  }(N),
      it = function (t) {
    function i() {
      this._items = null, this._selectedIndex = 0, i.__super.call(this), this._setIndexHandler = p.create(this, this.setIndex, null, !1);
    }h(i, "laya.ui.ViewStack", t);var s = i.prototype;return e.imps(s, { "laya.ui.IItem": !0 }), s.setItems = function (t) {
      this.removeChildren();for (var i = 0, e = 0, s = t.length; e < s; e++) {
        var h = t[e];h && (h.name = "item" + i, this.addChild(h), i++);
      }this.initItems();
    }, s.addItem = function (t) {
      t.name = "item" + this._items.length, this.addChild(t), this.initItems();
    }, s.initItems = function () {
      this._items = [];for (var t = 0; t < 1e4; t++) {
        var i = this.getChildByName("item" + t);if (null == i) break;this._items.push(i), i.visible = t == this._selectedIndex;
      }
    }, s.setSelect = function (t, i) {
      this._items && t > -1 && t < this._items.length && (this._items[t].visible = i);
    }, s.setIndex = function (t) {
      this.selectedIndex = t;
    }, n(0, s, "dataSource", t.prototype._$get_dataSource, function (t) {
      if (this._dataSource = t, "number" == typeof t && Math.floor(t) == t || "string" == typeof t) this.selectedIndex = parseInt(t);else for (var i in this._dataSource) {
        this.hasOwnProperty(i) && (this[i] = this._dataSource[i]);
      }
    }), n(0, s, "selectedIndex", function () {
      return this._selectedIndex;
    }, function (t) {
      this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1), this._selectedIndex = t, this.setSelect(this._selectedIndex, !0));
    }), n(0, s, "selection", function () {
      return this._selectedIndex > -1 && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
    }, function (t) {
      this.selectedIndex = this._items.indexOf(t);
    }), n(0, s, "items", function () {
      return this._items;
    }), n(0, s, "setIndexHandler", function () {
      return this._setIndexHandler;
    }, function (t) {
      this._setIndexHandler = t;
    }), i;
  }(N),
      et = function (t) {
    function i() {
      i.__super.call(this);
    }return h(i, "laya.ui.VScrollBar", E), i;
  }(),
      st = function (t) {
    function i(t) {
      this._bg = null, this._skin = null, i.__super.call(this), void 0 === t && (t = ""), this.text = t, this.skin = this.skin;
    }h(i, "laya.ui.TextInput", t);var s = i.prototype;return s.preinitialize = function () {
      this.mouseEnabled = !0;
    }, s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._bg && this._bg.destroy(), this._bg = null;
    }, s.createChildren = function () {
      this.addChild(this._tf = new g()), this._tf.padding = M.inputLabelPadding, this._tf.on("input", this, this._onInput), this._tf.on("enter", this, this._onEnter), this._tf.on("blur", this, this._onBlur), this._tf.on("focus", this, this._onFocus);
    }, s._onFocus = function () {
      this.event("focus", this);
    }, s._onBlur = function () {
      this.event("blur", this);
    }, s._onInput = function () {
      this.event("input", this);
    }, s._onEnter = function () {
      this.event("enter", this);
    }, s.initialize = function () {
      this.width = 128, this.height = 22;
    }, s.select = function () {
      this._tf.select();
    }, s.setSelection = function (t, i) {
      this._tf.setSelection(t, i);
    }, n(0, s, "text", t.prototype._$get_text, function (t) {
      this._tf.text != t && (t += "", this._tf.text = t, this.event("change"));
    }), n(0, s, "bg", function () {
      return this._bg;
    }, function (t) {
      this.graphics = this._bg = t;
    }), n(0, s, "inputElementYAdjuster", function () {
      return this._tf.inputElementYAdjuster;
    }, function (t) {
      this._tf.inputElementYAdjuster = t;
    }), n(0, s, "multiline", function () {
      return this._tf.multiline;
    }, function (t) {
      this._tf.multiline = t;
    }), n(0, s, "skin", function () {
      return this._skin;
    }, function (t) {
      this._skin != t && (this._skin = t, this._bg || (this.graphics = this._bg = new T()), this._bg.source = m.getRes(this._skin), this._width && (this._bg.width = this._width), this._height && (this._bg.height = this._height));
    }), n(0, s, "sizeGrid", function () {
      return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null;
    }, function (t) {
      this._bg || (this.graphics = this._bg = new T()), this._bg.sizeGrid = L.fillArray(M.defaultSizeGrid, t, Number);
    }), n(0, s, "inputElementXAdjuster", function () {
      return this._tf.inputElementXAdjuster;
    }, function (t) {
      this._tf.inputElementXAdjuster = t;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(G, this, "width", t), this._bg && (this._bg.width = t);
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(G, this, "height", t), this._bg && (this._bg.height = t);
    }), n(0, s, "editable", function () {
      return this._tf.editable;
    }, function (t) {
      this._tf.editable = t;
    }), n(0, s, "restrict", function () {
      return this._tf.restrict;
    }, function (t) {
      this._tf.restrict = t;
    }), n(0, s, "prompt", function () {
      return this._tf.prompt;
    }, function (t) {
      this._tf.prompt = t;
    }), n(0, s, "promptColor", function () {
      return this._tf.promptColor;
    }, function (t) {
      this._tf.promptColor = t;
    }), n(0, s, "maxChars", function () {
      return this._tf.maxChars;
    }, function (t) {
      this._tf.maxChars = t;
    }), n(0, s, "focus", function () {
      return this._tf.focus;
    }, function (t) {
      this._tf.focus = t;
    }), n(0, s, "type", function () {
      return this._tf.type;
    }, function (t) {
      this._tf.type = t;
    }), n(0, s, "asPassword", function () {
      return this._tf.asPassword;
    }, function (t) {
      this._tf.asPassword = t;
    }), i;
  }(G),
      ht = function (t) {
    function i() {
      i.__super.call(this);
    }return h(i, "laya.ui.VSlider", V), i;
  }(),
      nt = function (t) {
    function i() {
      this.popupCenter = !0, this.closeHandler = null, this.popupEffect = null, this.closeEffect = null, this.group = null, this.isModal = !1, this._dragArea = null, i.__super.call(this);
    }h(i, "laya.ui.Dialog", t);var s = i.prototype;return s.initialize = function () {
      this.popupEffect = i.manager.popupEffectHandler, this.closeEffect = i.manager.closeEffectHandler, this._dealDragArea(), this.on("click", this, this._onClick);
    }, s._dealDragArea = function () {
      var t = this.getChildByName("drag");t && (this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height, t.removeSelf());
    }, s._onClick = function (t) {
      var i = t.target;if (i) switch (i.name) {case "close":case "cancel":case "sure":case "no":case "ok":case "yes":
          this.close(i.name);}
    }, s.show = function (t, i) {
      void 0 === t && (t = !1), void 0 === i && (i = !0), this._open(!1, t, i);
    }, s.popup = function (t, i) {
      void 0 === t && (t = !1), void 0 === i && (i = !0), this._open(!0, t, i);
    }, s._open = function (t, e, s) {
      i.manager.lock(!1), this.isModal = t, i.manager.open(this, e, s);
    }, s.onOpened = function () {}, s.close = function (t, e) {
      void 0 === e && (e = !0), i.manager.close(this, t, e);
    }, s.onClosed = function (t) {}, s._onMouseDown = function (t) {
      var i = this.getMousePoint();this._dragArea.contains(i.x, i.y) ? this.startDrag() : this.stopDrag();
    }, n(0, s, "dragArea", function () {
      return this._dragArea ? this._dragArea.toString() : null;
    }, function (t) {
      if (t) {
        var i = L.fillArray([0, 0, 0, 0], t, Number);this._dragArea = new v(i[0], i[1], i[2], i[3]), this.on("mousedown", this, this._onMouseDown);
      } else this._dragArea = null, this.off("mousedown", this, this._onMouseDown);
    }), n(0, s, "isPopup", function () {
      return null != this.parent;
    }), n(0, s, "zOrder", t.prototype._$get_zOrder, function (t) {
      e.superSet($, this, "zOrder", t), i.manager._checkMask();
    }), n(1, i, "manager", function () {
      return i._manager = i._manager || new H();
    }, function (t) {
      i._manager = t;
    }), i.setLockView = function (t) {
      i.manager.setLockView(t);
    }, i.lock = function (t) {
      i.manager.lock(t);
    }, i.closeAll = function () {
      i.manager.closeAll();
    }, i.getDialogsByGroup = function (t) {
      return i.manager.getDialogsByGroup(t);
    }, i.closeByGroup = function (t) {
      return i.manager.closeByGroup(t);
    }, i.CLOSE = "close", i.CANCEL = "cancel", i.SURE = "sure", i.NO = "no", i.OK = "ok", i.YES = "yes", i._manager = null, i;
  }($),
      ot = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.HBox", t);var s = i.prototype;return s.sortItem = function (t) {
      t && t.sort(function (t, i) {
        return t.x - i.x;
      });
    }, s.changeItems = function () {
      this._itemChanged = !1;for (var t = [], i = 0, e = 0, s = this.numChildren; e < s; e++) {
        var h = this.getChildAt(e);h && h.layoutEnabled && (t.push(h), i = this._height ? this._height : Math.max(i, h.height * h.scaleY));
      }this.sortItem(t);var n = 0;for (e = 0, s = t.length; e < s; e++) {
        (h = t[e]).x = n, n += h.width * h.scaleX + this._space, "top" == this._align ? h.y = 0 : "middle" == this._align ? h.y = .5 * (i - h.height * h.scaleY) : "bottom" == this._align && (h.y = i - h.height * h.scaleY);
      }this.changeSize();
    }, n(0, s, "height", t.prototype._$get_height, function (t) {
      this._height != t && (e.superSet(F, this, "height", t), this.callLater(this.changeItems));
    }), i.NONE = "none", i.TOP = "top", i.MIDDLE = "middle", i.BOTTOM = "bottom", i;
  }(F),
      rt = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.VBox", t);var s = i.prototype;return s.changeItems = function () {
      this._itemChanged = !1;for (var t = [], i = 0, e = 0, s = this.numChildren; e < s; e++) {
        var h = this.getChildAt(e);h && h.layoutEnabled && (t.push(h), i = this._width ? this._width : Math.max(i, h.width * h.scaleX));
      }this.sortItem(t);var n = 0;for (e = 0, s = t.length; e < s; e++) {
        (h = t[e]).y = n, n += h.height * h.scaleY + this._space, "left" == this._align ? h.x = 0 : "center" == this._align ? h.x = .5 * (i - h.width * h.scaleX) : "right" == this._align && (h.x = i - h.width * h.scaleX);
      }this.changeSize();
    }, n(0, s, "width", t.prototype._$get_width, function (t) {
      this._width != t && (e.superSet(F, this, "width", t), this.callLater(this.changeItems));
    }), i.NONE = "none", i.LEFT = "left", i.CENTER = "center", i.RIGHT = "right", i;
  }(F),
      lt = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.RadioGroup", J);return i.prototype.createItem = function (t, i) {
      return new Q(t, i);
    }, i;
  }(),
      at = function (t) {
    function i() {
      i.__super.call(this);
    }h(i, "laya.ui.Tab", J);return i.prototype.createItem = function (t, i) {
      return new A(t, i);
    }, i;
  }(),
      ct = function (t) {
    function i(t) {
      this._vScrollBar = null, this._hScrollBar = null, void 0 === t && (t = ""), i.__super.call(this, t);
    }h(i, "laya.ui.TextArea", t);var s = i.prototype;return s.destroy = function (i) {
      void 0 === i && (i = !0), t.prototype.destroy.call(this, i), this._vScrollBar && this._vScrollBar.destroy(), this._hScrollBar && this._hScrollBar.destroy(), this._vScrollBar = null, this._hScrollBar = null;
    }, s.initialize = function () {
      this.width = 180, this.height = 150, this._tf.wordWrap = !0, this.multiline = !0;
    }, s.onVBarChanged = function (t) {
      this._tf.scrollY != this._vScrollBar.value && (this._tf.scrollY = this._vScrollBar.value);
    }, s.onHBarChanged = function (t) {
      this._tf.scrollX != this._hScrollBar.value && (this._tf.scrollX = this._hScrollBar.value);
    }, s.changeScroll = function () {
      var t = this._vScrollBar && this._tf.maxScrollY > 0,
          i = this._hScrollBar && this._tf.maxScrollX > 0,
          e = t ? this._width - this._vScrollBar.width : this._width,
          s = i ? this._height - this._hScrollBar.height : this._height,
          h = this._tf.padding || M.labelPadding;this._tf.width = e, this._tf.height = s, this._vScrollBar && (this._vScrollBar.x = this._width - this._vScrollBar.width - h[2], this._vScrollBar.y = h[1], this._vScrollBar.height = this._height - (i ? this._hScrollBar.height : 0) - h[1] - h[3], this._vScrollBar.scrollSize = 1, this._vScrollBar.thumbPercent = s / Math.max(this._tf.textHeight, s), this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY), this._vScrollBar.visible = t), this._hScrollBar && (this._hScrollBar.x = h[0], this._hScrollBar.y = this._height - this._hScrollBar.height - h[3], this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - h[0] - h[2], this._hScrollBar.scrollSize = Math.max(.033 * e, 1), this._hScrollBar.thumbPercent = e / Math.max(this._tf.textWidth, e), this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX), this._hScrollBar.visible = i);
    }, s.scrollTo = function (t) {
      this.commitMeasure(), this._tf.scrollY = t;
    }, n(0, s, "scrollY", function () {
      return this._tf.scrollY;
    }), n(0, s, "width", t.prototype._$get_width, function (t) {
      e.superSet(st, this, "width", t), this.callLater(this.changeScroll);
    }), n(0, s, "hScrollBar", function () {
      return this._hScrollBar;
    }), n(0, s, "height", t.prototype._$get_height, function (t) {
      e.superSet(st, this, "height", t), this.callLater(this.changeScroll);
    }), n(0, s, "maxScrollX", function () {
      return this._tf.maxScrollX;
    }), n(0, s, "vScrollBarSkin", function () {
      return this._vScrollBar ? this._vScrollBar.skin : null;
    }, function (t) {
      null == this._vScrollBar && (this.addChild(this._vScrollBar = new et()), this._vScrollBar.on("change", this, this.onVBarChanged), this._vScrollBar.target = this._tf, this.callLater(this.changeScroll)), this._vScrollBar.skin = t;
    }), n(0, s, "hScrollBarSkin", function () {
      return this._hScrollBar ? this._hScrollBar.skin : null;
    }, function (t) {
      null == this._hScrollBar && (this.addChild(this._hScrollBar = new Z()), this._hScrollBar.on("change", this, this.onHBarChanged), this._hScrollBar.mouseWheelEnable = !1, this._hScrollBar.target = this._tf, this.callLater(this.changeScroll)), this._hScrollBar.skin = t;
    }), n(0, s, "vScrollBar", function () {
      return this._vScrollBar;
    }), n(0, s, "maxScrollY", function () {
      return this._tf.maxScrollY;
    }), n(0, s, "scrollX", function () {
      return this._tf.scrollX;
    }), i;
  }(st);!function (t) {
    function i() {
      this._uiView = null, this.isCloseOther = !1, i.__super.call(this);
    }h(i, "laya.ui.AsynDialog", nt);var e = i.prototype;e.createView = function (t) {
      this._uiView = t;
    }, e._open = function (t, i, e) {
      this.isModal = t, this.isCloseOther = i, nt.manager.lock(!0), this._uiView ? this.onCreated() : this.onOpen();
    }, e.onCreated = function () {
      this.createUI(), this.onOpen();
    }, e.createUI = function () {
      laya.ui.View.prototype.createView.call(this, this._uiView), this._uiView = null, this._dealDragArea();
    }, e.onOpen = function () {
      nt.manager.open(this, this.isCloseOther), nt.manager.lock(!1);
    }, e.close = function (t, i) {
      void 0 === i && (i = !0), nt.manager.close(this), this.onClose();
    }, e.onClose = function () {}, e.destroy = function (t) {
      void 0 === t && (t = !0), laya.ui.View.prototype.destroy.call(this, t), this._uiView = null, this.onDestroy();
    }, e.onDestroy = function () {};
  }();e.__init([$]);
}(window, document, Laya), "function" == "function" && __webpack_require__(29) && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (t, i) {
  "use strict";
  Object.defineProperty(i, "__esModule", { value: !0 });for (var e in Laya) {
    var s = Laya[e];s && s.__isclass && (i[e] = s);
  }
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function (n, e, t) {
  t.un, t.uns;var i = t.static,
      o = t.class,
      a = t.getset,
      l = (t.__newvec, laya.utils.Browser),
      r = (laya.events.Event, laya.events.EventDispatcher),
      u = laya.resource.HTMLImage,
      s = laya.utils.Handler,
      d = laya.display.Input,
      c = laya.net.Loader,
      f = (laya.maths.Matrix, laya.renders.Render),
      p = laya.utils.RunDriver,
      h = laya.media.SoundChannel,
      v = laya.media.SoundManager,
      m = laya.display.Stage,
      g = laya.net.URL,
      _ = laya.utils.Utils,
      w = function () {
    function e() {}return o(e, "laya.wx.mini.MiniAdpter"), e.getJson = function (n) {
      return JSON.parse(n);
    }, e.init = function () {
      e._inited || (e._inited = !0, e.window = n, e.EnvConfig = {}, F.setNativeFileDir("/layaairGame"), F.existDir(F.fileNativeDir, null), m._wgColor = [0, 0, 0, 1], e.window.focus = function () {}, t.getUrlPath = function () {}, e.window.CanvasRenderingContext2D = function () {}, e.window.CanvasRenderingContext2D.prototype = e.window.wx.createCanvas().getContext("2d").__proto__, e.window.document.body.appendChild = function () {}, e.EnvConfig.pixelRatioInt = 0, p.getPixelRatio = e.pixelRatio, e._preCreateElement = l.createElement, l.createElement = e.createElement, p.createShaderCondition = e.createShaderCondition, _.parseXMLFromString = e.parseXMLFromString, d._createInputElement = x._createInputElement, e.EnvConfig.load = c.prototype.load, c.prototype.load = C.prototype.load, c.prototype._loadImage = y.prototype._loadImage);
    }, e.pixelRatio = function () {
      if (!e.EnvConfig.pixelRatioInt) try {
        var n = wx.getSystemInfoSync();return e.EnvConfig.pixelRatioInt = n.pixelRatio, (n = n).pixelRatio;
      } catch (n) {}return e.EnvConfig.pixelRatioInt;
    }, e.createElement = function (t) {
      if ("canvas" == t) {
        var i;return i = 1 == e.idx ? n.canvas : n.wx.createCanvas(), e.idx++, i;
      }if ("textarea" == t || "input" == t) return e.onCreateInput(t);if ("div" == t) {
        var o = e._preCreateElement(t);return o.contains = function (n) {
          return null;
        }, o.removeChild = function (n) {}, o;
      }return e._preCreateElement(t);
    }, e.onCreateInput = function (n) {
      var t = e._preCreateElement(n);return t.focus = x.wxinputFocus, t.blur = x.wxinputblur, t.style = {}, t.value = 0, t.parentElement = {}, t.placeholder = {}, t.type = {}, t.setColor = function (n) {}, t.setType = function (n) {}, t.setFontFace = function (n) {}, t.addEventListener = function (n) {}, t.contains = function (n) {
        return null;
      }, t.removeChild = function (n) {}, t;
    }, e.createShaderCondition = function (n) {
      var e = this;return function () {
        return e[n.replace("this.", "")];
      };
    }, e.EnvConfig = null, e.window = null, e._preCreateElement = null, e._inited = !1, e.wxRequest = null, e.systemInfo = null, e.parseXMLFromString = function (e) {
      var t;e = e.replace(/>\s+</g, "><");try {
        t = new n.Parser.DOMParser().parseFromString(e, "text/xml");
      } catch (n) {
        throw "需要引入xml解析库文件";
      }return t;
    }, e.idx = 1, e;
  }(),
      y = function () {
    function n() {}o(n, "laya.wx.mini.MiniImage");return n.prototype._loadImage = function (e) {
      F.getFileInfo(e) ? n.onCreateImage(e, this, !0) : -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? F.downImg(e, new s(n, n.onDownImgCallBack, [e, this]), e) : n.onCreateImage(e, this, !0);
    }, n.onDownImgCallBack = function (e, t, i) {
      i ? t.onError(null) : n.onCreateImage(e, t);
    }, n.onCreateImage = function (n, e, t) {
      function i() {
        r.onload = null, r.onerror = null, delete e.imgCache[n];
      }void 0 === t && (t = !1);var o;if (t) o = n;else {
        var a = F.getFileInfo(n).md5;o = F.getFileNativePath(a);
      }null == e.imgCache && (e.imgCache = {});var r,
          s = function s() {
        i(), e.onLoaded(r);
      },
          d = function d() {
        i(), e.event("error", "Load image failed");
      };"nativeimage" == e._type ? ((r = new l.window.Image()).crossOrigin = "", r.onload = s, r.onerror = d, r.src = o, e.imgCache[n] = r) : new u.create(o, { onload: s, onerror: d, onCreate: function onCreate(t) {
          r = t, e.imgCache[n] = t;
        } });
    }, n;
  }(),
      x = function () {
    function e() {}return o(e, "laya.wx.mini.MiniInput"), e._createInputElement = function () {
      d._initInput(d.area = l.createElement("textarea")), d._initInput(d.input = l.createElement("input")), d.inputContainer = l.createElement("div"), d.inputContainer.style.position = "absolute", d.inputContainer.style.zIndex = 1e5, l.container.appendChild(d.inputContainer), d.inputContainer.setPos = function (n, e) {
        d.inputContainer.style.left = n + "px", d.inputContainer.style.top = e + "px";
      }, t.stage.on("resize", null, e._onStageResize), wx.onWindowResize && wx.onWindowResize(function (e) {
        n.dispatchEvent && n.dispatchEvent("resize");
      });
    }, e._onStageResize = function () {
      t.stage._canvasTransform.identity().scale(l.width / f.canvas.width / p.getPixelRatio(), l.height / f.canvas.height / p.getPixelRatio());
    }, e.wxinputFocus = function (n) {
      var e = d.inputElement.target;e && !e.editable || (w.window.wx.offKeyboardConfirm(), w.window.wx.offKeyboardInput(), w.window.wx.showKeyboard({ defaultValue: e.text, maxLength: e.maxChars, multiple: e.multiline, confirmHold: !0, confirmType: "done", success: function success(n) {}, fail: function fail(n) {} }), w.window.wx.onKeyboardConfirm(function (n) {
        var t = n ? n.value : "";e.text = t, e.event("input"), laya.wx.mini.MiniInput.inputEnter();
      }), w.window.wx.onKeyboardInput(function (n) {
        var t = n ? n.value : "";e.multiline || -1 == t.indexOf("\n") ? (e.text = t, e.event("input")) : laya.wx.mini.MiniInput.inputEnter();
      }));
    }, e.inputEnter = function () {
      d.inputElement.target.focus = !1;
    }, e.wxinputblur = function () {
      e.hideKeyboard();
    }, e.hideKeyboard = function () {
      w.window.wx.offKeyboardConfirm(), w.window.wx.offKeyboardInput(), w.window.wx.hideKeyboard({ success: function success(n) {
          console.log("隐藏键盘");
        }, fail: function fail(n) {
          console.log("隐藏键盘出错:" + (n ? n.errMsg : ""));
        } });
    }, e;
  }(),
      C = function () {
    function n() {}o(n, "laya.wx.mini.MiniLoader");var e = n.prototype;return e.load = function (e, t, i, o, a) {
      void 0 === i && (i = !0), void 0 === a && (a = !1);this._url = e, 0 === e.indexOf("data:image") ? this._type = t = "image" : this._type = t || (t = this.getTypeFromUrl(e)), this._cache = i, this._data = null;var l = "ascii";-1 != e.indexOf(".fnt") || -1 != e.indexOf("fighter.json") ? l = "utf8" : "arraybuffer" == t && (l = "");var r = _.getFileExtension(e);if (-1 != n._fileTypeArr.indexOf(r)) w.EnvConfig.load.call(this, e, t, i, o, a);else if (F.getFileInfo(e)) w.EnvConfig.load.call(this, e, t, i, o, a);else {
        var u = e.split(g.basePath)[0];"" == g.basePath && (u = e), -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? w.EnvConfig.load.call(this, e, t, i, o, a) : F.readFile(u, l, new s(n, n.onReadNativeCallBack, [l, e, t, i, o, a, this]), e);
      }
    }, e.clearRes = function (n, e) {
      void 0 === e && (e = !1);this.clearRes(n, e);var t = F.getFileInfo(n);if (t && (-1 != n.indexOf("http://") || -1 != n.indexOf("https://"))) {
        var i = t.md5,
            o = F.getFileNativePath(i);F.remove(o);
      }
    }, n.onReadNativeCallBack = function (n, e, t, i, o, a, l, r, u) {
      void 0 === i && (i = !0), void 0 === a && (a = !1), void 0 === r && (r = 0), r ? 1 == r && w.EnvConfig.load.call(l, e, t, i, o, a) : "json" == t || "atlas" == t ? l.onLoaded(w.getJson(u.data)) : "xml" == t ? l.onLoaded(_.parseXMLFromString(u.data)) : l.onLoaded(u.data);
    }, i(n, ["_fileTypeArr", function () {
      return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"];
    }]), n;
  }(),
      F = function (n) {
    function e() {
      e.__super.call(this);
    }return o(e, "laya.wx.mini.MiniFileMgr", r), e.isLoadFile = function (n) {
      return -1 != e._fileTypeArr.indexOf(n);
    }, e.getFileInfo = function (n) {
      var t = n.split("?")[0],
          i = e._filesKey[t];return null == i ? null : i;
    }, e.onFileUpdate = function (n, t) {
      var i = n.split("/"),
          o = i[i.length - 1],
          a = e.getFileInfo(t);null == a ? e.onSaveFile(t, o) : a.readyUrl != t && e.remove(o, t);
    }, e.exits = function (n, t) {
      var i = e.getFileNativePath(n);e.fs.getFileInfo({ filePath: i, success: function success(n) {
          null != t && t.runWith([0, n]);
        }, fail: function fail(n) {
          null != t && t.runWith([1, n]);
        } });
    }, e.read = function (n, t, i, o) {
      void 0 === t && (t = "ascill"), void 0 === o && (o = "");var a = e.getFileNativePath(n);e.fs.readFile({ filePath: a, encoding: t, success: function success(n) {
          null != i && i.runWith([0, n]);
        }, fail: function fail(n) {
          n && e.down(o, t, i, o);
        } });
    }, e.readNativeFile = function (n, t) {
      e.fs.readFile({ filePath: n, encoding: "", success: function success(n) {
          null != t && t.runWith([0]);
        }, fail: function fail(n) {
          null != t && t.runWith([1]);
        } });
    }, e.down = function (n, t, i, o) {
      void 0 === t && (t = "ascill"), void 0 === o && (o = "");var a = e.getFileNativePath(o);e.wxdown({ url: n, filePath: a, success: function success(n) {
          200 === n.statusCode && e.readFile(n.filePath, t, i, o);
        }, fail: function fail(n) {
          null != i && i.runWith([1, n]);
        } }).onProgressUpdate(function (n) {
        null != i && i.runWith([2, n.progress]);
      });
    }, e.readFile = function (n, t, i, o) {
      void 0 === t && (t = "ascill"), void 0 === o && (o = ""), e.fs.readFile({ filePath: n, encoding: t, success: function success(t) {
          -1 == n.indexOf("http://") && -1 == n.indexOf("https://") || e.onFileUpdate(n, o), null != i && i.runWith([0, t]);
        }, fail: function fail(n) {
          n && null != i && i.runWith([1, n]);
        } });
    }, e.downImg = function (n, t, i) {
      void 0 === i && (i = "");e.wxdown({ url: n, success: function success(n) {
          200 === n.statusCode && e.copyFile(n.tempFilePath, i, t);
        }, fail: function fail(n) {
          null != t && t.runWith([1, n]);
        } });
    }, e.copyFile = function (n, t, i) {
      var o = n.split("/"),
          a = o[o.length - 1],
          l = (t.split("?")[0], e.getFileInfo(t)),
          r = e.getFileNativePath(a);e.fs.copyFile({ srcPath: n, destPath: r, success: function success(n) {
          l ? l.readyUrl != t && e.remove(a, t, i) : (e.onSaveFile(t, a), null != i && i.runWith([0]));
        }, fail: function fail(n) {
          null != i && i.runWith([1, n]);
        } });
    }, e.getFileNativePath = function (n) {
      return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + n;
    }, e.remove = function (n, i, o) {
      void 0 === i && (i = "");var a = e.getFileInfo(i),
          l = e.getFileNativePath(a.md5);t.loader.clearRes(a.readyUrl), e.fs.unlink({ filePath: l, success: function success(t) {
          "" != i && e.onSaveFile(i, n), null != o && o.runWith([0]);
        }, fail: function fail(n) {} });
    }, e.onSaveFile = function (n, t) {
      var i = n.split("?")[0];e._filesKey[i] = { md5: t, readyUrl: n };
    }, e.dir = function (n) {
      e.fs.getSavedFileList({ success: function success(e) {
          null != n && n.runWith([0, e]);
        }, fail: function fail(e) {
          null != n && n.runWith([1, e]);
        } });
    }, e.existDir = function (n, t) {
      e.fs.mkdir({ dirPath: n, success: function success(n) {
          null != t && t.runWith([0, n]);
        }, fail: function fail(n) {
          null != t && t.runWith([1, n]);
        } });
    }, e.setNativeFileDir = function (n) {
      e.fileNativeDir = wx.env.USER_DATA_PATH + n;
    }, e._filesKey = {}, e.fileNativeDir = null, i(e, ["_fileTypeArr", function () {
      return this._fileTypeArr = ["json", "ani", "xml", "sk", "txt", "atlas", "swf", "part", "fnt", "proto", "lh", "lav", "lani", "lmat", "lm", "ltc"];
    }, "fs", function () {
      return this.fs = wx.getFileSystemManager();
    }, "wxdown", function () {
      return this.wxdown = wx.downloadFile;
    }]), e;
  }(),
      E = (function (n) {
    function e() {
      this._sound = null, this.url = null, this.loaded = !1, e.__super.call(this), this._sound = e._createSound();
    }o(e, "laya.wx.mini.MiniSound", r);var t = e.prototype;t.load = function (n) {
      function t() {
        i._sound.onCanplay(null), i._sound.onError(null);
      }var i = this;if (n = g.formatURL(n), this.url = n, e._audioCache[n]) this.event("complete");else {
        this._sound.src = n, this._sound.onCanplay(function () {
          t(), o.loaded = !0, o.event("complete"), e._audioCache[o.url] = o;
        });var o = this;this._sound.onError(function () {
          t(), o.event("error");
        });
      }
    }, t.play = function (n, t) {
      void 0 === n && (n = 0), void 0 === t && (t = 0);var i;this.url == v._musicClass ? (e._musicAudio || (e._musicAudio = e._createSound()), i = e._musicAudio) : i = e._createSound(), i.src = this.url;var o = new E(i);return o.url = this.url, o.loops = t, o.startTime = n, o.play(), v.addChannel(o), o;
    }, t.dispose = function () {
      var n = e._audioCache[this.url];n && (n.src = "", delete e._audioCache[this.url]);
    }, a(0, t, "duration", function () {
      return this._sound.duration;
    }), e._createSound = function () {
      return e._id++, w.window.wx.createInnerAudioContext();
    }, e._musicAudio = null, e._id = 0, e._audioCache = {};
  }(), function (n) {
    function e(n) {
      this._audio = null, this._onEnd = null, e.__super.call(this), this._audio = n, this._onEnd = _.bind(this.__onEnd, this), n.onEnded(this._onEnd);
    }o(e, "laya.wx.mini.MiniSoundChannel", h);var i = e.prototype;return i.__onEnd = function () {
      if (1 == this.loops) return this.completeHandler && (t.timer.once(10, this, this.__runComplete, [this.completeHandler], !1), this.completeHandler = null), this.stop(), void this.event("complete");this.loops > 0 && this.loops--, this.startTime = 0, this.play();
    }, i.play = function () {
      this.isStopped = !1, v.addChannel(this), this._audio.play();
    }, i.stop = function () {
      this.isStopped = !0, v.removeChannel(this), this.completeHandler = null, this._audio && (this._audio.stop(), this._audio.onEnded(null), this._audio = null);
    }, i.pause = function () {
      this.isStopped = !0, this._audio.pause();
    }, i.resume = function () {
      this._audio && (this.isStopped = !1, v.addChannel(this), this._audio.play());
    }, a(0, i, "position", function () {
      return this._audio ? this._audio.currentTime : 0;
    }), a(0, i, "duration", function () {
      return this._audio ? this._audio.duration : 0;
    }), a(0, i, "volume", function () {
      return 1;
    }, function (n) {}), e;
  }());
}(window, document, Laya), "function" == "function" && __webpack_require__(29) && !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = function (n, e) {
  "use strict";
  Object.defineProperty(e, "__esModule", { value: !0 });for (var t in Laya) {
    var i = Laya[t];i && i.__isclass && (e[t] = i);
  }
}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

/***/ }),
/* 44 */
/***/ (function(module, exports) {

/**
 * 客户端的 requestAnimationFrame 回调顺序不一定有序，会导致整个画面抖动。
 * 客户端已经在修，先打一个补丁包确保有序，修复画面卡顿问题
 */
var oRequestAnimation = requestAnimationFrame;
var frameCallbacks = [];

var requestAnimationFrameHandler = function requestAnimationFrameHandler() {
  var _frameCallbacks = [];

  frameCallbacks.forEach(function (cb) {
    _frameCallbacks.push(cb);
  });

  frameCallbacks.length = 0;

  _frameCallbacks.forEach(function (cb) {
    typeof cb === 'function' && cb();
  });

  oRequestAnimation(requestAnimationFrameHandler);
};

var __global = function () {
  return this;
}();

__global.requestAnimationFrame = function (callback) {
  frameCallbacks.push(callback);
};

requestAnimationFrameHandler();

/***/ }),
/* 45 */
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/******/(function (modules) {
	// webpackBootstrap
	/******/ // The module cache
	/******/var installedModules = {};

	/******/ // The require function
	/******/function __webpack_require__(moduleId) {

		/******/ // Check if module is in cache
		/******/if (installedModules[moduleId])
			/******/return installedModules[moduleId].exports;

		/******/ // Create a new module (and put it into the cache)
		/******/var module = installedModules[moduleId] = {
			/******/exports: {},
			/******/id: moduleId,
			/******/loaded: false
			/******/ };

		/******/ // Execute the module function
		/******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

		/******/ // Flag the module as loaded
		/******/module.loaded = true;

		/******/ // Return the exports of the module
		/******/return module.exports;
		/******/
	}

	/******/ // expose the modules object (__webpack_modules__)
	/******/__webpack_require__.m = modules;

	/******/ // expose the module cache
	/******/__webpack_require__.c = installedModules;

	/******/ // __webpack_public_path__
	/******/__webpack_require__.p = "";

	/******/ // Load entry module and return exports
	/******/return __webpack_require__(0);
	/******/
})(
/************************************************************************/
/******/[
/* 0 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	var _window2 = __webpack_require__(1);

	var _window = _interopRequireWildcard(_window2);

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj;
		} else {
			var newObj = {};if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
				}
			}newObj.default = obj;return newObj;
		}
	}

	var global = GameGlobal;

	function inject() {
		_window.addEventListener = _window.canvas.addEventListener = function (type, listener) {
			_window.document.addEventListener(type, listener);
		};
		_window.removeEventListener = _window.canvas.removeEventListener = function (type, listener) {
			_window.document.removeEventListener(type, listener);
		};

		var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
		    platform = _wx$getSystemInfoSync.platform;

		// 开发者工具无法重定义 window


		if (typeof __devtoolssubcontext === 'undefined' && platform === 'devtools') {
			for (var key in _window) {
				var descriptor = Object.getOwnPropertyDescriptor(global, key);

				if (!descriptor || descriptor.configurable === true) {
					Object.defineProperty(window, key, {
						value: _window[key]
					});
				}
			}

			for (var _key in _window.document) {
				var _descriptor = Object.getOwnPropertyDescriptor(global.document, _key);

				if (!_descriptor || _descriptor.configurable === true) {
					Object.defineProperty(global.document, _key, {
						value: _window.document[_key]
					});
				}
			}
			window.parent = window;
		} else {
			for (var _key2 in _window) {
				global[_key2] = _window[_key2];
			}
			global.window = _window;
			window = global;
			window.top = window.parent = window;
		}
	}

	if (!GameGlobal.__isAdapterInjected) {
		GameGlobal.__isAdapterInjected = true;
		inject();
	}

	/***/
},
/* 1 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.cancelAnimationFrame = exports.requestAnimationFrame = exports.clearInterval = exports.clearTimeout = exports.setInterval = exports.setTimeout = exports.canvas = exports.location = exports.localStorage = exports.HTMLElement = exports.FileReader = exports.Audio = exports.Image = exports.WebSocket = exports.XMLHttpRequest = exports.navigator = exports.document = undefined;

	var _WindowProperties = __webpack_require__(2);

	Object.keys(_WindowProperties).forEach(function (key) {
		if (key === "default" || key === "__esModule") return;
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return _WindowProperties[key];
			}
		});
	});

	var _constructor = __webpack_require__(3);

	Object.keys(_constructor).forEach(function (key) {
		if (key === "default" || key === "__esModule") return;
		Object.defineProperty(exports, key, {
			enumerable: true,
			get: function get() {
				return _constructor[key];
			}
		});
	});

	var _Canvas = __webpack_require__(9);

	var _Canvas2 = _interopRequireDefault(_Canvas);

	var _document2 = __webpack_require__(10);

	var _document3 = _interopRequireDefault(_document2);

	var _navigator2 = __webpack_require__(17);

	var _navigator3 = _interopRequireDefault(_navigator2);

	var _XMLHttpRequest2 = __webpack_require__(18);

	var _XMLHttpRequest3 = _interopRequireDefault(_XMLHttpRequest2);

	var _WebSocket2 = __webpack_require__(19);

	var _WebSocket3 = _interopRequireDefault(_WebSocket2);

	var _Image2 = __webpack_require__(11);

	var _Image3 = _interopRequireDefault(_Image2);

	var _Audio2 = __webpack_require__(12);

	var _Audio3 = _interopRequireDefault(_Audio2);

	var _FileReader2 = __webpack_require__(20);

	var _FileReader3 = _interopRequireDefault(_FileReader2);

	var _HTMLElement2 = __webpack_require__(4);

	var _HTMLElement3 = _interopRequireDefault(_HTMLElement2);

	var _localStorage2 = __webpack_require__(21);

	var _localStorage3 = _interopRequireDefault(_localStorage2);

	var _location2 = __webpack_require__(22);

	var _location3 = _interopRequireDefault(_location2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	exports.document = _document3.default;
	exports.navigator = _navigator3.default;
	exports.XMLHttpRequest = _XMLHttpRequest3.default;
	exports.WebSocket = _WebSocket3.default;
	exports.Image = _Image3.default;
	exports.Audio = _Audio3.default;
	exports.FileReader = _FileReader3.default;
	exports.HTMLElement = _HTMLElement3.default;
	exports.localStorage = _localStorage3.default;
	exports.location = _location3.default;

	// 暴露全局的 canvas
	var canvas = new _Canvas2.default();

	exports.canvas = canvas;
	exports.setTimeout = setTimeout;
	exports.setInterval = setInterval;
	exports.clearTimeout = clearTimeout;
	exports.clearInterval = clearInterval;
	exports.requestAnimationFrame = requestAnimationFrame;
	exports.cancelAnimationFrame = cancelAnimationFrame;

	/***/
},
/* 2 */
/***/function (module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
	    screenWidth = _wx$getSystemInfoSync.screenWidth,
	    screenHeight = _wx$getSystemInfoSync.screenHeight,
	    devicePixelRatio = _wx$getSystemInfoSync.devicePixelRatio;

	var innerWidth = exports.innerWidth = screenWidth;
	var innerHeight = exports.innerHeight = screenHeight;
	exports.devicePixelRatio = devicePixelRatio;
	var screen = exports.screen = {
		availWidth: innerWidth,
		availHeight: innerHeight
	};
	var performance = exports.performance = {
		now: function now() {
			return Date.now() / 1000;
		}
	};
	var ontouchstart = exports.ontouchstart = null;
	var ontouchmove = exports.ontouchmove = null;
	var ontouchend = exports.ontouchend = null;

	/***/
},
/* 3 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.HTMLCanvasElement = exports.HTMLImageElement = undefined;

	var _HTMLElement3 = __webpack_require__(4);

	var _HTMLElement4 = _interopRequireDefault(_HTMLElement3);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var HTMLImageElement = exports.HTMLImageElement = function (_HTMLElement) {
		_inherits(HTMLImageElement, _HTMLElement);

		function HTMLImageElement() {
			_classCallCheck(this, HTMLImageElement);

			return _possibleConstructorReturn(this, (HTMLImageElement.__proto__ || Object.getPrototypeOf(HTMLImageElement)).call(this, 'img'));
		}

		return HTMLImageElement;
	}(_HTMLElement4.default);

	var HTMLCanvasElement = exports.HTMLCanvasElement = function (_HTMLElement2) {
		_inherits(HTMLCanvasElement, _HTMLElement2);

		function HTMLCanvasElement() {
			_classCallCheck(this, HTMLCanvasElement);

			return _possibleConstructorReturn(this, (HTMLCanvasElement.__proto__ || Object.getPrototypeOf(HTMLCanvasElement)).call(this, 'canvas'));
		}

		return HTMLCanvasElement;
	}(_HTMLElement4.default);

	/***/
},
/* 4 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _Element2 = __webpack_require__(5);

	var _Element3 = _interopRequireDefault(_Element2);

	var _util = __webpack_require__(8);

	var _WindowProperties = __webpack_require__(2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var HTMLElement = function (_Element) {
		_inherits(HTMLElement, _Element);

		function HTMLElement() {
			var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

			_classCallCheck(this, HTMLElement);

			var _this = _possibleConstructorReturn(this, (HTMLElement.__proto__ || Object.getPrototypeOf(HTMLElement)).call(this));

			_this.className = '';
			_this.childern = [];
			_this.style = {
				width: _WindowProperties.innerWidth + 'px',
				height: _WindowProperties.innerHeight + 'px'
			};
			_this.insertBefore = _util.noop;
			_this.innerHTML = '';

			_this.tagName = tagName.toUpperCase();
			return _this;
		}

		_createClass(HTMLElement, [{
			key: 'setAttribute',
			value: function setAttribute(name, value) {
				this[name] = value;
			}
		}, {
			key: 'getAttribute',
			value: function getAttribute(name) {
				return this[name];
			}
		}, {
			key: 'getBoundingClientRect',
			value: function getBoundingClientRect() {
				return {
					top: 0,
					left: 0,
					width: _WindowProperties.innerWidth,
					height: _WindowProperties.innerHeight
				};
			}
		}, {
			key: 'focus',
			value: function focus() {}
		}, {
			key: 'clientWidth',
			get: function get() {
				var ret = parseInt(this.style.fontSize, 10) * this.innerHTML.length;

				return Number.isNaN(ret) ? 0 : ret;
			}
		}, {
			key: 'clientHeight',
			get: function get() {
				var ret = parseInt(this.style.fontSize, 10);

				return Number.isNaN(ret) ? 0 : ret;
			}
		}]);

		return HTMLElement;
	}(_Element3.default);

	exports.default = HTMLElement;

	/***/
},
/* 5 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _Node2 = __webpack_require__(6);

	var _Node3 = _interopRequireDefault(_Node2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var ELement = function (_Node) {
		_inherits(ELement, _Node);

		function ELement() {
			_classCallCheck(this, ELement);

			var _this = _possibleConstructorReturn(this, (ELement.__proto__ || Object.getPrototypeOf(ELement)).call(this));

			_this.className = '';
			_this.children = [];
			return _this;
		}

		return ELement;
	}(_Node3.default);

	exports.default = ELement;

	/***/
},
/* 6 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _EventTarget2 = __webpack_require__(7);

	var _EventTarget3 = _interopRequireDefault(_EventTarget2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var Node = function (_EventTarget) {
		_inherits(Node, _EventTarget);

		function Node() {
			_classCallCheck(this, Node);

			var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));

			_this.childNodes = [];
			return _this;
		}

		_createClass(Node, [{
			key: 'appendChild',
			value: function appendChild(node) {
				if (node instanceof Node) {
					this.childNodes.push(node);
				} else {
					throw new TypeError('Failed to executed \'appendChild\' on \'Node\': parameter 1 is not of type \'Node\'.');
				}
			}
		}, {
			key: 'cloneNode',
			value: function cloneNode() {
				var copyNode = Object.create(this);

				Object.assign(copyNode, this);
				return copyNode;
			}
		}, {
			key: 'removeChild',
			value: function removeChild(node) {
				var index = this.childNodes.findIndex(function (child) {
					return child === node;
				});

				if (index > -1) {
					return this.childNodes.splice(index, 1);
				}
				return null;
			}
		}]);

		return Node;
	}(_EventTarget3.default);

	exports.default = Node;

	/***/
},
/* 7 */
/***/function (module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _events = new WeakMap();

	var EventTarget = function () {
		function EventTarget() {
			_classCallCheck(this, EventTarget);

			_events.set(this, {});
		}

		_createClass(EventTarget, [{
			key: 'addEventListener',
			value: function addEventListener(type, listener) {
				var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

				var events = _events.get(this);

				if (!events) {
					events = {};
					_events.set(this, events);
				}
				if (!events[type]) {
					events[type] = [];
				}
				events[type].push(listener);

				if (options.capture) {
					console.warn('EventTarget.addEventListener: options.capture is not implemented.');
				}
				if (options.once) {
					console.warn('EventTarget.addEventListener: options.once is not implemented.');
				}
				if (options.passive) {
					console.warn('EventTarget.addEventListener: options.passive is not implemented.');
				}
			}
		}, {
			key: 'removeEventListener',
			value: function removeEventListener(type, listener) {
				var listeners = _events.get(this)[type];

				if (listeners && listeners.length > 0) {
					for (var i = listeners.length; i--; i > 0) {
						if (listeners[i] === listener) {
							listeners.splice(i, 1);
							break;
						}
					}
				}
			}
		}, {
			key: 'dispatchEvent',
			value: function dispatchEvent() {
				var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

				var listeners = _events.get(this)[event.type];

				if (listeners) {
					for (var i = 0; i < listeners.length; i++) {
						listeners[i](event);
					}
				}
			}
		}]);

		return EventTarget;
	}();

	exports.default = EventTarget;

	/***/
},
/* 8 */
/***/function (module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.noop = noop;
	function noop() {}

	/***/
},
/* 9 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Canvas;

	var _constructor = __webpack_require__(3);

	var _HTMLElement = __webpack_require__(4);

	var _HTMLElement2 = _interopRequireDefault(_HTMLElement);

	var _document = __webpack_require__(10);

	var _document2 = _interopRequireDefault(_document);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	var hasModifiedCanvasPrototype = false;
	var hasInit2DContextConstructor = false;
	var hasInitWebGLContextConstructor = false;

	function Canvas() {
		var canvas = wx.createCanvas();

		canvas.type = 'canvas';

		canvas.__proto__.__proto__ = new _HTMLElement2.default('canvas');

		var _getContext = canvas.getContext;

		canvas.getBoundingClientRect = function () {
			var ret = {
				top: 0,
				left: 0,
				width: window.innerWidth,
				height: window.innerHeight
			};
			return ret;
		};

		return canvas;
	}

	/***/
},
/* 10 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _window = __webpack_require__(1);

	var window = _interopRequireWildcard(_window);

	var _HTMLElement = __webpack_require__(4);

	var _HTMLElement2 = _interopRequireDefault(_HTMLElement);

	var _Image = __webpack_require__(11);

	var _Image2 = _interopRequireDefault(_Image);

	var _Audio = __webpack_require__(12);

	var _Audio2 = _interopRequireDefault(_Audio);

	var _Canvas = __webpack_require__(9);

	var _Canvas2 = _interopRequireDefault(_Canvas);

	__webpack_require__(15);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj;
		} else {
			var newObj = {};if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
				}
			}newObj.default = obj;return newObj;
		}
	}

	var events = {};

	var document = {
		readyState: 'complete',
		visibilityState: 'visible',
		documentElement: window,
		hidden: false,
		style: {},
		location: window.location,
		ontouchstart: null,
		ontouchmove: null,
		ontouchend: null,

		head: new _HTMLElement2.default('head'),
		body: new _HTMLElement2.default('body'),

		createElement: function createElement(tagName) {
			if (tagName === 'canvas') {
				return new _Canvas2.default();
			} else if (tagName === 'audio') {
				return new _Audio2.default();
			} else if (tagName === 'img') {
				return new _Image2.default();
			}

			return new _HTMLElement2.default(tagName);
		},
		getElementById: function getElementById(id) {
			if (id === window.canvas.id) {
				return window.canvas;
			}
			return null;
		},
		getElementsByTagName: function getElementsByTagName(tagName) {
			if (tagName === 'head') {
				return [document.head];
			} else if (tagName === 'body') {
				return [document.body];
			} else if (tagName === 'canvas') {
				return [window.canvas];
			}
			return [];
		},
		querySelector: function querySelector(query) {
			if (query === 'head') {
				return document.head;
			} else if (query === 'body') {
				return document.body;
			} else if (query === 'canvas') {
				return window.canvas;
			} else if (query === '#' + window.canvas.id) {
				return window.canvas;
			}
			return null;
		},
		querySelectorAll: function querySelectorAll(query) {
			if (query === 'head') {
				return [document.head];
			} else if (query === 'body') {
				return [document.body];
			} else if (query === 'canvas') {
				return [window.canvas];
			}
			return [];
		},
		addEventListener: function addEventListener(type, listener) {
			if (!events[type]) {
				events[type] = [];
			}
			events[type].push(listener);
		},
		removeEventListener: function removeEventListener(type, listener) {
			var listeners = events[type];

			if (listeners && listeners.length > 0) {
				for (var i = listeners.length; i--; i > 0) {
					if (listeners[i] === listener) {
						listeners.splice(i, 1);
						break;
					}
				}
			}
		},
		dispatchEvent: function dispatchEvent(event) {
			var listeners = events[event.type];

			if (listeners) {
				for (var i = 0; i < listeners.length; i++) {
					listeners[i](event);
				}
			}
		}
	};

	exports.default = document;

	/***/
},
/* 11 */
/***/function (module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	exports.default = Image;
	function Image() {
		var image = wx.createImage();

		return image;
	}

	/***/
},
/* 12 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _HTMLAudioElement2 = __webpack_require__(13);

	var _HTMLAudioElement3 = _interopRequireDefault(_HTMLAudioElement2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var HAVE_NOTHING = 0;
	var HAVE_METADATA = 1;
	var HAVE_CURRENT_DATA = 2;
	var HAVE_FUTURE_DATA = 3;
	var HAVE_ENOUGH_DATA = 4;

	var _innerAudioContext = new WeakMap();
	var _src = new WeakMap();
	var _loop = new WeakMap();
	var _autoplay = new WeakMap();

	var Audio = function (_HTMLAudioElement) {
		_inherits(Audio, _HTMLAudioElement);

		function Audio(url) {
			_classCallCheck(this, Audio);

			var _this = _possibleConstructorReturn(this, (Audio.__proto__ || Object.getPrototypeOf(Audio)).call(this));

			_this.HAVE_NOTHING = HAVE_NOTHING;
			_this.HAVE_METADATA = HAVE_METADATA;
			_this.HAVE_CURRENT_DATA = HAVE_CURRENT_DATA;
			_this.HAVE_FUTURE_DATA = HAVE_FUTURE_DATA;
			_this.HAVE_ENOUGH_DATA = HAVE_ENOUGH_DATA;
			_this.readyState = HAVE_NOTHING;

			_src.set(_this, '');

			var innerAudioContext = wx.createInnerAudioContext();

			_innerAudioContext.set(_this, innerAudioContext);

			innerAudioContext.onCanplay(function () {
				_this.dispatchEvent({ type: 'load' });
				_this.dispatchEvent({ type: 'loadend' });
				_this.dispatchEvent({ type: 'canplay' });
				_this.dispatchEvent({ type: 'canplaythrough' });
				_this.dispatchEvent({ type: 'loadedmetadata' });
				_this.readyState = HAVE_CURRENT_DATA;
			});
			innerAudioContext.onPlay(function () {
				_this.dispatchEvent({ type: 'play' });
			});
			innerAudioContext.onPause(function () {
				_this.dispatchEvent({ type: 'pause' });
			});
			innerAudioContext.onEnded(function () {
				_this.dispatchEvent({ type: 'ended' });
				_this.readyState = HAVE_ENOUGH_DATA;
			});
			innerAudioContext.onError(function () {
				_this.dispatchEvent({ type: 'error' });
			});

			if (url) {
				_innerAudioContext.get(_this).src = url;
			}
			return _this;
		}

		_createClass(Audio, [{
			key: 'load',
			value: function load() {
				console.warn('HTMLAudioElement.load() is not implemented.');
			}
		}, {
			key: 'play',
			value: function play() {
				_innerAudioContext.get(this).play();
			}
		}, {
			key: 'pause',
			value: function pause() {
				_innerAudioContext.get(this).pause();
			}
		}, {
			key: 'canPlayType',
			value: function canPlayType() {
				var mediaType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

				if (typeof mediaType !== 'string') {
					return '';
				}

				if (mediaType.indexOf('audio/mpeg') > -1 || mediaType.indexOf('audio/mp4')) {
					return 'probably';
				}
				return '';
			}
		}, {
			key: 'cloneNode',
			value: function cloneNode() {
				var newAudio = new Audio();
				newAudio.loop = _innerAudioContext.get(this).loop;
				newAudio.autoplay = _innerAudioContext.get(this).loop;
				newAudio.src = this.src;
				return newAudio;
			}
		}, {
			key: 'currentTime',
			get: function get() {
				return _innerAudioContext.get(this).currentTime;
			},
			set: function set(value) {
				_innerAudioContext.get(this).seek(value);
			}
		}, {
			key: 'src',
			get: function get() {
				return _src.get(this);
			},
			set: function set(value) {
				_src.set(this, value);
				_innerAudioContext.get(this).src = value;
			}
		}, {
			key: 'loop',
			get: function get() {
				return _innerAudioContext.get(this).loop;
			},
			set: function set(value) {
				_innerAudioContext.get(this).loop = value;
			}
		}, {
			key: 'autoplay',
			get: function get() {
				return _innerAudioContext.get(this).autoplay;
			},
			set: function set(value) {
				_innerAudioContext.get(this).autoplay = value;
			}
		}, {
			key: 'paused',
			get: function get() {
				return _innerAudioContext.get(this).paused;
			}
		}]);

		return Audio;
	}(_HTMLAudioElement3.default);

	exports.default = Audio;

	/***/
},
/* 13 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _HTMLMediaElement2 = __webpack_require__(14);

	var _HTMLMediaElement3 = _interopRequireDefault(_HTMLMediaElement2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var HTMLAudioElement = function (_HTMLMediaElement) {
		_inherits(HTMLAudioElement, _HTMLMediaElement);

		function HTMLAudioElement() {
			_classCallCheck(this, HTMLAudioElement);

			return _possibleConstructorReturn(this, (HTMLAudioElement.__proto__ || Object.getPrototypeOf(HTMLAudioElement)).call(this, 'audio'));
		}

		return HTMLAudioElement;
	}(_HTMLMediaElement3.default);

	exports.default = HTMLAudioElement;

	/***/
},
/* 14 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	var _HTMLElement2 = __webpack_require__(4);

	var _HTMLElement3 = _interopRequireDefault(_HTMLElement2);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));
		}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	var HTMLMediaElement = function (_HTMLElement) {
		_inherits(HTMLMediaElement, _HTMLElement);

		function HTMLMediaElement(type) {
			_classCallCheck(this, HTMLMediaElement);

			return _possibleConstructorReturn(this, (HTMLMediaElement.__proto__ || Object.getPrototypeOf(HTMLMediaElement)).call(this, type));
		}

		_createClass(HTMLMediaElement, [{
			key: 'addTextTrack',
			value: function addTextTrack() {}
		}, {
			key: 'captureStream',
			value: function captureStream() {}
		}, {
			key: 'fastSeek',
			value: function fastSeek() {}
		}, {
			key: 'load',
			value: function load() {}
		}, {
			key: 'pause',
			value: function pause() {}
		}, {
			key: 'play',
			value: function play() {}
		}]);

		return HTMLMediaElement;
	}(_HTMLElement3.default);

	exports.default = HTMLMediaElement;

	/***/
},
/* 15 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	__webpack_require__(16);

	/***/
},
/* 16 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	var _window = __webpack_require__(1);

	var window = _interopRequireWildcard(_window);

	var _document = __webpack_require__(10);

	var _document2 = _interopRequireDefault(_document);

	var _util = __webpack_require__(8);

	function _interopRequireDefault(obj) {
		return obj && obj.__esModule ? obj : { default: obj };
	}

	function _interopRequireWildcard(obj) {
		if (obj && obj.__esModule) {
			return obj;
		} else {
			var newObj = {};if (obj != null) {
				for (var key in obj) {
					if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
				}
			}newObj.default = obj;return newObj;
		}
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var TouchEvent = function TouchEvent(type) {
		_classCallCheck(this, TouchEvent);

		this.target = window.canvas;
		this.currentTarget = window.canvas;
		this.touches = [];
		this.targetTouches = [];
		this.changedTouches = [];
		this.preventDefault = _util.noop;
		this.stopPropagation = _util.noop;

		this.type = type;
	};

	function touchEventHandlerFactory(type) {
		return function (event) {
			var touchEvent = new TouchEvent(type);

			touchEvent.touches = event.touches;
			touchEvent.targetTouches = Array.prototype.slice.call(event.touches);
			touchEvent.changedTouches = event.changedTouches;
			touchEvent.timeStamp = event.timeStamp;
			_document2.default.dispatchEvent(touchEvent);
		};
	}

	wx.onTouchStart(touchEventHandlerFactory('touchstart'));
	wx.onTouchMove(touchEventHandlerFactory('touchmove'));
	wx.onTouchEnd(touchEventHandlerFactory('touchend'));
	wx.onTouchCancel(touchEventHandlerFactory('touchcancel'));

	/***/
},
/* 17 */
/***/function (module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _util = __webpack_require__(8);

	// TODO 需要 wx.getSystemInfo 获取更详细信息
	var _wx$getSystemInfoSync = wx.getSystemInfoSync(),
	    platform = _wx$getSystemInfoSync.platform;

	var navigator = {
		platform: platform,
		language: 'zh-cn',
		appVersion: '5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1',
		userAgent: 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_1 like Mac OS X) AppleWebKit/603.1.30 (KHTML, like Gecko) Mobile/14E8301 MicroMessenger/6.6.0 MiniGame NetType/WIFI Language/zh_CN',
		onLine: true, // TODO 用 wx.getNetworkStateChange 和 wx.onNetworkStateChange 来返回真实的状态

		// TODO 用 wx.getLocation 来封装 geolocation
		geolocation: {
			getCurrentPosition: _util.noop,
			watchPosition: _util.noop,
			clearWatch: _util.noop
		}
	};

	exports.default = navigator;

	/***/
},
/* 18 */
/***/function (module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _url = new WeakMap();
	var _method = new WeakMap();
	var _requestHeader = new WeakMap();
	var _responseHeader = new WeakMap();
	var _requestTask = new WeakMap();

	function _triggerEvent(type) {
		if (typeof this['on' + type] === 'function') {
			for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
				args[_key - 1] = arguments[_key];
			}

			this['on' + type].apply(this, args);
		}
	}

	function _changeReadyState(readyState) {
		this.readyState = readyState;
		_triggerEvent.call(this, 'readystatechange');
	}

	var XMLHttpRequest = function () {
		// TODO 没法模拟 HEADERS_RECEIVED 和 LOADING 两个状态
		function XMLHttpRequest() {
			_classCallCheck(this, XMLHttpRequest);

			this.onabort = null;
			this.onerror = null;
			this.onload = null;
			this.onloadstart = null;
			this.onprogress = null;
			this.ontimeout = null;
			this.onloadend = null;
			this.onreadystatechange = null;
			this.readyState = 0;
			this.response = null;
			this.responseText = null;
			this.responseType = '';
			this.responseXML = null;
			this.status = 0;
			this.statusText = '';
			this.upload = {};
			this.withCredentials = false;

			_requestHeader.set(this, {
				'content-type': 'application/x-www-form-urlencoded'
			});
			_responseHeader.set(this, {});
		}

		/*
   * TODO 这一批事件应该是在 XMLHttpRequestEventTarget.prototype 上面的
   */

		_createClass(XMLHttpRequest, [{
			key: 'abort',
			value: function abort() {
				var myRequestTask = _requestTask.get(this);

				if (myRequestTask) {
					myRequestTask.abort();
				}
			}
		}, {
			key: 'getAllResponseHeaders',
			value: function getAllResponseHeaders() {
				var responseHeader = _responseHeader.get(this);

				return Object.keys(responseHeader).map(function (header) {
					return header + ': ' + responseHeader[header];
				}).join('\n');
			}
		}, {
			key: 'getResponseHeader',
			value: function getResponseHeader(header) {
				return _responseHeader.get(this)[header];
			}
		}, {
			key: 'open',
			value: function open(method, url /* async, user, password 这几个参数在小程序内不支持*/) {
				_method.set(this, method);
				_url.set(this, url);
				_changeReadyState.call(this, XMLHttpRequest.OPENED);
			}
		}, {
			key: 'overrideMimeType',
			value: function overrideMimeType() {}
		}, {
			key: 'send',
			value: function send() {
				var _this = this;

				var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

				if (this.readyState !== XMLHttpRequest.OPENED) {
					throw new Error("Failed to execute 'send' on 'XMLHttpRequest': The object's state must be OPENED.");
				} else {
					wx.request({
						data: data,
						url: _url.get(this),
						method: _method.get(this),
						header: _requestHeader.get(this),
						responseType: this.responseType,
						success: function success(_ref) {
							var data = _ref.data,
							    statusCode = _ref.statusCode,
							    header = _ref.header;

							if (typeof data !== 'string' && !(data instanceof ArrayBuffer)) {
								try {
									data = JSON.stringify(data);
								} catch (e) {
									data = data;
								}
							}

							_this.status = statusCode;
							_responseHeader.set(_this, header);
							_triggerEvent.call(_this, 'loadstart');
							_changeReadyState.call(_this, XMLHttpRequest.HEADERS_RECEIVED);
							_changeReadyState.call(_this, XMLHttpRequest.LOADING);

							_this.response = data;

							if (data instanceof ArrayBuffer) {
								_this.responseText = '';
								var bytes = new Uint8Array(data);
								var len = bytes.byteLength;

								for (var i = 0; i < len; i++) {
									_this.responseText += String.fromCharCode(bytes[i]);
								}
							} else {
								_this.responseText = data;
							}
							_changeReadyState.call(_this, XMLHttpRequest.DONE);
							_triggerEvent.call(_this, 'load');
							_triggerEvent.call(_this, 'loadend');
						},
						fail: function fail(_ref2) {
							var errMsg = _ref2.errMsg;

							// TODO 规范错误
							if (errMsg.indexOf('abort') !== -1) {
								_triggerEvent.call(_this, 'abort');
							} else {
								_triggerEvent.call(_this, 'error', errMsg);
							}
							_triggerEvent.call(_this, 'loadend');
						}
					});
				}
			}
		}, {
			key: 'setRequestHeader',
			value: function setRequestHeader(header, value) {
				var myHeader = _requestHeader.get(this);

				myHeader[header] = value;
				_requestHeader.set(this, myHeader);
			}
		}]);

		return XMLHttpRequest;
	}();

	XMLHttpRequest.UNSEND = 0;
	XMLHttpRequest.OPENED = 1;
	XMLHttpRequest.HEADERS_RECEIVED = 2;
	XMLHttpRequest.LOADING = 3;
	XMLHttpRequest.DONE = 4;
	exports.default = XMLHttpRequest;

	/***/
},
/* 19 */
/***/function (module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = function () {
		function defineProperties(target, props) {
			for (var i = 0; i < props.length; i++) {
				var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
			}
		}return function (Constructor, protoProps, staticProps) {
			if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
		};
	}();

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	var _socketTask = new WeakMap();

	var WebSocket = function () {
		// TODO 更新 binaryType
		// The connection is in the process of closing.
		// The connection is not yet open.
		function WebSocket(url) {
			var _this = this;

			var protocols = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

			_classCallCheck(this, WebSocket);

			this.binaryType = '';
			this.bufferedAmount = 0;
			this.extensions = '';
			this.onclose = null;
			this.onerror = null;
			this.onmessage = null;
			this.onopen = null;
			this.protocol = '';
			this.readyState = 3;

			if (typeof url !== 'string' || !/(^ws:\/\/)|(^wss:\/\/)/.test(url)) {
				throw new TypeError('Failed to construct \'WebSocket\': The URL \'' + url + '\' is invalid');
			}

			this.url = url;
			this.readyState = WebSocket.CONNECTING;

			var socketTask = wx.connectSocket({
				url: url,
				protocols: Array.isArray(protocols) ? protocols : [protocols]
			});

			_socketTask.set(this, socketTask);

			socketTask.onClose(function (res) {
				_this.readyState = WebSocket.CLOSED;
				if (typeof _this.onclose === 'function') {
					_this.onclose(res);
				}
			});

			socketTask.onMessage(function (res) {
				if (typeof _this.onmessage === 'function') {
					_this.onmessage(res);
				}
			});

			socketTask.onOpen(function () {
				_this.readyState = WebSocket.OPEN;
				if (typeof _this.onopen === 'function') {
					_this.onopen();
				}
			});

			socketTask.onError(function (res) {
				if (typeof _this.onerror === 'function') {
					_this.onerror(new Error(res.errMsg));
				}
			});

			return this;
		} // TODO 小程序内目前获取不到，实际上需要根据服务器选择的 sub-protocol 返回
		// TODO 更新 bufferedAmount
		// The connection is closed or couldn't be opened.

		// The connection is open and ready to communicate.


		_createClass(WebSocket, [{
			key: 'close',
			value: function close(code, reason) {
				this.readyState = WebSocket.CLOSING;
				var socketTask = _socketTask.get(this);

				socketTask.close({
					code: code,
					reason: reason
				});
			}
		}, {
			key: 'send',
			value: function send(data) {
				if (typeof data !== 'string' && !(data instanceof ArrayBuffer)) {
					throw new TypeError('Failed to send message: The data ' + data + ' is invalid');
				}

				var socketTask = _socketTask.get(this);

				socketTask.send({
					data: data
				});
			}
		}]);

		return WebSocket;
	}();

	WebSocket.CONNECTING = 0;
	WebSocket.OPEN = 1;
	WebSocket.CLOSING = 2;
	WebSocket.CLOSED = 3;
	exports.default = WebSocket;

	/***/
},
/* 20 */
/***/function (module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	/*
  * TODO 使用 wx.readFile 来封装 FileReader
  */
	var FileReader = function FileReader() {
		_classCallCheck(this, FileReader);
	};

	exports.default = FileReader;

	/***/
},
/* 21 */
/***/function (module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var localStorage = {
		get length() {
			var _wx$getStorageInfoSyn = wx.getStorageInfoSync(),
			    keys = _wx$getStorageInfoSyn.keys;

			return keys.length;
		},

		key: function key(n) {
			var _wx$getStorageInfoSyn2 = wx.getStorageInfoSync(),
			    keys = _wx$getStorageInfoSyn2.keys;

			return keys[n];
		},
		getItem: function getItem(key) {
			return wx.getStorageSync(key);
		},
		setItem: function setItem(key, value) {
			return wx.setStorageSync(key, value);
		},
		removeItem: function removeItem(key) {
			wx.removeStorageSync(key);
		},
		clear: function clear() {
			wx.clearStorageSync();
		}
	};

	exports.default = localStorage;

	/***/
},
/* 22 */
/***/function (module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
		value: true
	});
	var location = {
		href: 'game.js',
		reload: function reload() {}
	};

	exports.default = location;

	/***/
}]
/******/);

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*!
 * EventEmitter2
 * https://github.com/hij1nx/EventEmitter2
 *
 * Copyright (c) 2013 hij1nx
 * Licensed under the MIT license.
 */
;!function (undefined) {

  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {
    return Object.prototype.toString.call(obj) === "[object Array]";
  };
  var defaultMaxListeners = 10;

  function init() {
    this._events = {};
    if (this._conf) {
      configure.call(this, this._conf);
    }
  }

  function configure(conf) {
    if (conf) {
      this._conf = conf;

      conf.delimiter && (this.delimiter = conf.delimiter);
      this._maxListeners = conf.maxListeners !== undefined ? conf.maxListeners : defaultMaxListeners;

      conf.wildcard && (this.wildcard = conf.wildcard);
      conf.newListener && (this.newListener = conf.newListener);
      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);

      if (this.wildcard) {
        this.listenerTree = {};
      }
    } else {
      this._maxListeners = defaultMaxListeners;
    }
  }

  function logPossibleMemoryLeak(count, eventName) {
    var errorMsg = '(node) warning: possible EventEmitter memory ' + 'leak detected. ' + count + ' listeners added. ' + 'Use emitter.setMaxListeners() to increase limit.';

    if (this.verboseMemoryLeak) {
      errorMsg += ' Event name: ' + eventName + '.';
    }

    if (typeof process !== 'undefined' && process.emitWarning) {
      var e = new Error(errorMsg);
      e.name = 'MaxListenersExceededWarning';
      e.emitter = this;
      e.count = count;
      process.emitWarning(e);
    } else {
      console.error(errorMsg);

      if (console.trace) {
        console.trace();
      }
    }
  }

  function EventEmitter(conf) {
    this._events = {};
    this.newListener = false;
    this.verboseMemoryLeak = false;
    configure.call(this, conf);
  }
  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property

  //
  // Attention, function return type now is array, always !
  // It has zero elements if no any matches found and one or more
  // elements (leafs) if there are matches
  //
  function searchListenerTree(handlers, type, tree, i) {
    if (!tree) {
      return [];
    }
    var listeners = [],
        leaf,
        len,
        branch,
        xTree,
        xxTree,
        isolatedBranch,
        endReached,
        typeLength = type.length,
        currentType = type[i],
        nextType = type[i + 1];
    if (i === typeLength && tree._listeners) {
      //
      // If at the end of the event(s) list and the tree has listeners
      // invoke those listeners.
      //
      if (typeof tree._listeners === 'function') {
        handlers && handlers.push(tree._listeners);
        return [tree];
      } else {
        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {
          handlers && handlers.push(tree._listeners[leaf]);
        }
        return [tree];
      }
    }

    if (currentType === '*' || currentType === '**' || tree[currentType]) {
      //
      // If the event emitted is '*' at this part
      // or there is a concrete match at this patch
      //
      if (currentType === '*') {
        for (branch in tree) {
          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {
            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));
          }
        }
        return listeners;
      } else if (currentType === '**') {
        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === '*';
        if (endReached && tree._listeners) {
          // The next element has a _listeners, add it to the handlers.
          listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));
        }

        for (branch in tree) {
          if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {
            if (branch === '*' || branch === '**') {
              if (tree[branch]._listeners && !endReached) {
                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));
              }
              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));
            } else if (branch === nextType) {
              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));
            } else {
              // No match on this one, shift into the tree but not in the type array.
              listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));
            }
          }
        }
        return listeners;
      }

      listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));
    }

    xTree = tree['*'];
    if (xTree) {
      //
      // If the listener tree will allow any match for this part,
      // then recursively explore all branches of the tree
      //
      searchListenerTree(handlers, type, xTree, i + 1);
    }

    xxTree = tree['**'];
    if (xxTree) {
      if (i < typeLength) {
        if (xxTree._listeners) {
          // If we have a listener on a '**', it will catch all, so add its handler.
          searchListenerTree(handlers, type, xxTree, typeLength);
        }

        // Build arrays of matching next branches and others.
        for (branch in xxTree) {
          if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {
            if (branch === nextType) {
              // We know the next element will match, so jump twice.
              searchListenerTree(handlers, type, xxTree[branch], i + 2);
            } else if (branch === currentType) {
              // Current node matches, move into the tree.
              searchListenerTree(handlers, type, xxTree[branch], i + 1);
            } else {
              isolatedBranch = {};
              isolatedBranch[branch] = xxTree[branch];
              searchListenerTree(handlers, type, { '**': isolatedBranch }, i + 1);
            }
          }
        }
      } else if (xxTree._listeners) {
        // We have reached the end and still on a '**'
        searchListenerTree(handlers, type, xxTree, typeLength);
      } else if (xxTree['*'] && xxTree['*']._listeners) {
        searchListenerTree(handlers, type, xxTree['*'], typeLength);
      }
    }

    return listeners;
  }

  function growListenerTree(type, listener) {

    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();

    //
    // Looks for two consecutive '**', if so, don't add the event at all.
    //
    for (var i = 0, len = type.length; i + 1 < len; i++) {
      if (type[i] === '**' && type[i + 1] === '**') {
        return;
      }
    }

    var tree = this.listenerTree;
    var name = type.shift();

    while (name !== undefined) {

      if (!tree[name]) {
        tree[name] = {};
      }

      tree = tree[name];

      if (type.length === 0) {

        if (!tree._listeners) {
          tree._listeners = listener;
        } else {
          if (typeof tree._listeners === 'function') {
            tree._listeners = [tree._listeners];
          }

          tree._listeners.push(listener);

          if (!tree._listeners.warned && this._maxListeners > 0 && tree._listeners.length > this._maxListeners) {
            tree._listeners.warned = true;
            logPossibleMemoryLeak.call(this, tree._listeners.length, name);
          }
        }
        return true;
      }
      name = type.shift();
    }
    return true;
  }

  // By default EventEmitters will print a warning if more than
  // 10 listeners are added to it. This is a useful default which
  // helps finding memory leaks.
  //
  // Obviously not all Emitters should be limited to 10. This function allows
  // that to be increased. Set to zero for unlimited.

  EventEmitter.prototype.delimiter = '.';

  EventEmitter.prototype.setMaxListeners = function (n) {
    if (n !== undefined) {
      this._maxListeners = n;
      if (!this._conf) this._conf = {};
      this._conf.maxListeners = n;
    }
  };

  EventEmitter.prototype.event = '';

  EventEmitter.prototype.once = function (event, fn) {
    return this._once(event, fn, false);
  };

  EventEmitter.prototype.prependOnceListener = function (event, fn) {
    return this._once(event, fn, true);
  };

  EventEmitter.prototype._once = function (event, fn, prepend) {
    this._many(event, 1, fn, prepend);
    return this;
  };

  EventEmitter.prototype.many = function (event, ttl, fn) {
    return this._many(event, ttl, fn, false);
  };

  EventEmitter.prototype.prependMany = function (event, ttl, fn) {
    return this._many(event, ttl, fn, true);
  };

  EventEmitter.prototype._many = function (event, ttl, fn, prepend) {
    var self = this;

    if (typeof fn !== 'function') {
      throw new Error('many only accepts instances of Function');
    }

    function listener() {
      if (--ttl === 0) {
        self.off(event, listener);
      }
      return fn.apply(this, arguments);
    }

    listener._origin = fn;

    this._on(event, listener, prepend);

    return self;
  };

  EventEmitter.prototype.emit = function () {

    this._events || init.call(this);

    var type = arguments[0];

    if (type === 'newListener' && !this.newListener) {
      if (!this._events.newListener) {
        return false;
      }
    }

    var al = arguments.length;
    var args, l, i, j;
    var handler;

    if (this._all && this._all.length) {
      handler = this._all.slice();
      if (al > 3) {
        args = new Array(al);
        for (j = 0; j < al; j++) {
          args[j] = arguments[j];
        }
      }

      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
          case 1:
            handler[i].call(this, type);
            break;
          case 2:
            handler[i].call(this, type, arguments[1]);
            break;
          case 3:
            handler[i].call(this, type, arguments[1], arguments[2]);
            break;
          default:
            handler[i].apply(this, args);
        }
      }
    }

    if (this.wildcard) {
      handler = [];
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);
    } else {
      handler = this._events[type];
      if (typeof handler === 'function') {
        this.event = type;
        switch (al) {
          case 1:
            handler.call(this);
            break;
          case 2:
            handler.call(this, arguments[1]);
            break;
          case 3:
            handler.call(this, arguments[1], arguments[2]);
            break;
          default:
            args = new Array(al - 1);
            for (j = 1; j < al; j++) {
              args[j - 1] = arguments[j];
            }handler.apply(this, args);
        }
        return true;
      } else if (handler) {
        // need to make copy of handlers because list can change in the middle
        // of emit call
        handler = handler.slice();
      }
    }

    if (handler && handler.length) {
      if (al > 3) {
        args = new Array(al - 1);
        for (j = 1; j < al; j++) {
          args[j - 1] = arguments[j];
        }
      }
      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
          case 1:
            handler[i].call(this);
            break;
          case 2:
            handler[i].call(this, arguments[1]);
            break;
          case 3:
            handler[i].call(this, arguments[1], arguments[2]);
            break;
          default:
            handler[i].apply(this, args);
        }
      }
      return true;
    } else if (!this._all && type === 'error') {
      if (arguments[1] instanceof Error) {
        throw arguments[1]; // Unhandled 'error' event
      } else {
        throw new Error("Uncaught, unspecified 'error' event.");
      }
      return false;
    }

    return !!this._all;
  };

  EventEmitter.prototype.emitAsync = function () {

    this._events || init.call(this);

    var type = arguments[0];

    if (type === 'newListener' && !this.newListener) {
      if (!this._events.newListener) {
        return Promise.resolve([false]);
      }
    }

    var promises = [];

    var al = arguments.length;
    var args, l, i, j;
    var handler;

    if (this._all) {
      if (al > 3) {
        args = new Array(al);
        for (j = 1; j < al; j++) {
          args[j] = arguments[j];
        }
      }
      for (i = 0, l = this._all.length; i < l; i++) {
        this.event = type;
        switch (al) {
          case 1:
            promises.push(this._all[i].call(this, type));
            break;
          case 2:
            promises.push(this._all[i].call(this, type, arguments[1]));
            break;
          case 3:
            promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));
            break;
          default:
            promises.push(this._all[i].apply(this, args));
        }
      }
    }

    if (this.wildcard) {
      handler = [];
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);
    } else {
      handler = this._events[type];
    }

    if (typeof handler === 'function') {
      this.event = type;
      switch (al) {
        case 1:
          promises.push(handler.call(this));
          break;
        case 2:
          promises.push(handler.call(this, arguments[1]));
          break;
        case 3:
          promises.push(handler.call(this, arguments[1], arguments[2]));
          break;
        default:
          args = new Array(al - 1);
          for (j = 1; j < al; j++) {
            args[j - 1] = arguments[j];
          }promises.push(handler.apply(this, args));
      }
    } else if (handler && handler.length) {
      handler = handler.slice();
      if (al > 3) {
        args = new Array(al - 1);
        for (j = 1; j < al; j++) {
          args[j - 1] = arguments[j];
        }
      }
      for (i = 0, l = handler.length; i < l; i++) {
        this.event = type;
        switch (al) {
          case 1:
            promises.push(handler[i].call(this));
            break;
          case 2:
            promises.push(handler[i].call(this, arguments[1]));
            break;
          case 3:
            promises.push(handler[i].call(this, arguments[1], arguments[2]));
            break;
          default:
            promises.push(handler[i].apply(this, args));
        }
      }
    } else if (!this._all && type === 'error') {
      if (arguments[1] instanceof Error) {
        return Promise.reject(arguments[1]); // Unhandled 'error' event
      } else {
        return Promise.reject("Uncaught, unspecified 'error' event.");
      }
    }

    return Promise.all(promises);
  };

  EventEmitter.prototype.on = function (type, listener) {
    return this._on(type, listener, false);
  };

  EventEmitter.prototype.prependListener = function (type, listener) {
    return this._on(type, listener, true);
  };

  EventEmitter.prototype.onAny = function (fn) {
    return this._onAny(fn, false);
  };

  EventEmitter.prototype.prependAny = function (fn) {
    return this._onAny(fn, true);
  };

  EventEmitter.prototype.addListener = EventEmitter.prototype.on;

  EventEmitter.prototype._onAny = function (fn, prepend) {
    if (typeof fn !== 'function') {
      throw new Error('onAny only accepts instances of Function');
    }

    if (!this._all) {
      this._all = [];
    }

    // Add the function to the event listener collection.
    if (prepend) {
      this._all.unshift(fn);
    } else {
      this._all.push(fn);
    }

    return this;
  };

  EventEmitter.prototype._on = function (type, listener, prepend) {
    if (typeof type === 'function') {
      this._onAny(type, listener);
      return this;
    }

    if (typeof listener !== 'function') {
      throw new Error('on only accepts instances of Function');
    }
    this._events || init.call(this);

    // To avoid recursion in the case that type == "newListeners"! Before
    // adding it to the listeners, first emit "newListeners".
    this.emit('newListener', type, listener);

    if (this.wildcard) {
      growListenerTree.call(this, type, listener);
      return this;
    }

    if (!this._events[type]) {
      // Optimize the case of one listener. Don't need the extra array object.
      this._events[type] = listener;
    } else {
      if (typeof this._events[type] === 'function') {
        // Change to array.
        this._events[type] = [this._events[type]];
      }

      // If we've already got an array, just add
      if (prepend) {
        this._events[type].unshift(listener);
      } else {
        this._events[type].push(listener);
      }

      // Check for listener leak
      if (!this._events[type].warned && this._maxListeners > 0 && this._events[type].length > this._maxListeners) {
        this._events[type].warned = true;
        logPossibleMemoryLeak.call(this, this._events[type].length, type);
      }
    }

    return this;
  };

  EventEmitter.prototype.off = function (type, listener) {
    if (typeof listener !== 'function') {
      throw new Error('removeListener only takes instances of Function');
    }

    var handlers,
        leafs = [];

    if (this.wildcard) {
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);
    } else {
      // does not use listeners(), so no side effect of creating _events[type]
      if (!this._events[type]) return this;
      handlers = this._events[type];
      leafs.push({ _listeners: handlers });
    }

    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
      var leaf = leafs[iLeaf];
      handlers = leaf._listeners;
      if (isArray(handlers)) {

        var position = -1;

        for (var i = 0, length = handlers.length; i < length; i++) {
          if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {
            position = i;
            break;
          }
        }

        if (position < 0) {
          continue;
        }

        if (this.wildcard) {
          leaf._listeners.splice(position, 1);
        } else {
          this._events[type].splice(position, 1);
        }

        if (handlers.length === 0) {
          if (this.wildcard) {
            delete leaf._listeners;
          } else {
            delete this._events[type];
          }
        }

        this.emit("removeListener", type, listener);

        return this;
      } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {
        if (this.wildcard) {
          delete leaf._listeners;
        } else {
          delete this._events[type];
        }

        this.emit("removeListener", type, listener);
      }
    }

    function recursivelyGarbageCollect(root) {
      if (root === undefined) {
        return;
      }
      var keys = Object.keys(root);
      for (var i in keys) {
        var key = keys[i];
        var obj = root[key];
        if (obj instanceof Function || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== "object" || obj === null) continue;
        if (Object.keys(obj).length > 0) {
          recursivelyGarbageCollect(root[key]);
        }
        if (Object.keys(obj).length === 0) {
          delete root[key];
        }
      }
    }
    recursivelyGarbageCollect(this.listenerTree);

    return this;
  };

  EventEmitter.prototype.offAny = function (fn) {
    var i = 0,
        l = 0,
        fns;
    if (fn && this._all && this._all.length > 0) {
      fns = this._all;
      for (i = 0, l = fns.length; i < l; i++) {
        if (fn === fns[i]) {
          fns.splice(i, 1);
          this.emit("removeListenerAny", fn);
          return this;
        }
      }
    } else {
      fns = this._all;
      for (i = 0, l = fns.length; i < l; i++) {
        this.emit("removeListenerAny", fns[i]);
      }this._all = [];
    }
    return this;
  };

  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;

  EventEmitter.prototype.removeAllListeners = function (type) {
    if (arguments.length === 0) {
      !this._events || init.call(this);
      return this;
    }

    if (this.wildcard) {
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);

      for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {
        var leaf = leafs[iLeaf];
        leaf._listeners = null;
      }
    } else if (this._events) {
      this._events[type] = null;
    }
    return this;
  };

  EventEmitter.prototype.listeners = function (type) {
    if (this.wildcard) {
      var handlers = [];
      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();
      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);
      return handlers;
    }

    this._events || init.call(this);

    if (!this._events[type]) this._events[type] = [];
    if (!isArray(this._events[type])) {
      this._events[type] = [this._events[type]];
    }
    return this._events[type];
  };

  EventEmitter.prototype.eventNames = function () {
    return Object.keys(this._events);
  };

  EventEmitter.prototype.listenerCount = function (type) {
    return this.listeners(type).length;
  };

  EventEmitter.prototype.listenersAny = function () {

    if (this._all) {
      return this._all;
    } else {
      return [];
    }
  };

  if (true) {
    // AMD. Register as an anonymous module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
      return EventEmitter;
    }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object') {
    // CommonJS
    module.exports = EventEmitter;
  } else {
    // Browser global.
    window.EventEmitter2 = EventEmitter;
  }
}();
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)))

/***/ }),
/* 47 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
})();
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }
}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
    return [];
};

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () {
    return '/';
};
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function () {
    return 0;
};

/***/ }),
/* 48 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BackgroundSystem = function () {
  function BackgroundSystem() {
    _classCallCheck(this, BackgroundSystem);
  }

  _createClass(BackgroundSystem, null, [{
    key: 'addWorld',
    value: function addWorld(world) {
      this._world = world;
    }
  }, {
    key: 'init',
    value: function init() {}
  }, {
    key: 'start',
    value: function start() {
      console.error('backgroundSystem.start must be overwrited');
    }
  }, {
    key: 'stop',
    value: function stop() {
      console.error('backgroundSystem.stop must be overwrited');
    }
  }, {
    key: '_getEntities',
    value: function _getEntities() {
      return this._world.getEntities.apply(this._world, arguments);
    }
  }]);

  return BackgroundSystem;
}();

exports.default = BackgroundSystem;

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(31);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var entityId = 0;

var Entity = function () {
  function Entity() {
    _classCallCheck(this, Entity);

    this._id = entityId++;

    this._world = undefined;

    this._entityAddToWorldCb = [];

    this._entityRemoveFromWorldCb = [];
  }

  _createClass(Entity, [{
    key: 'addToWorld',
    value: function addToWorld(world) {
      this._world = world;
      this._entityAddToWorldCb.forEach(function (cb) {
        cb();
      });
    }
  }, {
    key: 'removeFromWorld',
    value: function removeFromWorld() {
      this._entityRemoveFromWorldCb.forEach(function (cb) {
        cb();
      });
      this._world = undefined;
    }
  }, {
    key: 'insertAddToWorldCb',
    value: function insertAddToWorldCb(cb) {
      this._entityAddToWorldCb.push(cb);
      return this;
    }
  }, {
    key: 'insertRemoveFromWorldCb',
    value: function insertRemoveFromWorldCb(cb) {
      this._entityRemoveFromWorldCb.push(cb);
      return this;
    }
  }, {
    key: 'deleteRemoveFromWorldCb',
    value: function deleteRemoveFromWorldCb(cb) {
      for (var i = this._entityRemoveFromWorldCb.length - 1; i >= 0; i--) {
        if (cb === this._entityRemoveFromWorldCb[i]) {
          this._entityRemoveFromWorldCb.splice(i, 1);
          return this;
        }
      }
      return this;
    }
  }, {
    key: 'deleteAddToWorldCb',
    value: function deleteAddToWorldCb(cb) {
      for (var i = this._entityAddToWorldCb.length - 1; i >= 0; i--) {
        if (cb === this._entityAddToWorldCb[i]) {
          this._entityAddToWorldCb.splice(i, 1);
          return this;
        }
      }
      return this;
    }
  }, {
    key: '_addComponentLifeCycle',
    value: function _addComponentLifeCycle(component) {
      if (component.addToEntityCb) {
        component.addToEntityCb(this);
      }
      if (component.entityAddToWorldCb) {
        this.insertAddToWorldCb(component.entityAddToWorldCb.bind(component));
      }
      if (component.entityRemoveFromWorldCb) {
        this.insertRemoveFromWorldCb(component.entityRemoveFromWorldCb.bind(component));
      }
      return this;
    }
  }, {
    key: '_removeComponentLifeCycle',
    value: function _removeComponentLifeCycle(component) {
      if (component.entityAddToWorldCb) {
        this.deleteAddToWorldCb(component.entityAddToWorldCb.bind(component));
      }
      if (component.entityRemoveFromWorldCb) {
        this.deleteRemoveFromWorldCb(component.entityRemoveFromWorldCb.bind(component));
      }
      if (component.removeFromEntityCb) {
        component.removeFromEntityCb(this);
      }
      return this;
    }
  }, {
    key: 'has',
    value: function has() {
      for (var i in arguments) {
        if (!this.hasOwnProperty((0, _utils.capitalize)(arguments[i]))) {
          return false;
        }
      }
      return true;
    }

    /**
     * component
     * tag
     * key, value
     */

  }, {
    key: 'addComponent',
    value: function addComponent(component, value) {
      var isComponent = typeof component !== 'string';
      var name = (0, _utils.capitalize)(isComponent ? (0, _utils.getName)(component) : component);
      var hasComponent = this.hasOwnProperty(name);
      if (hasComponent && isComponent) {
        this._removeComponentLifeCycle(this[name]);
      }
      this[name] = isComponent ? component : value !== undefined ? value : true;
      this._addComponentLifeCycle(this[name]);

      if (!hasComponent && this._world) {
        this._world.addEntityToTuples(this);
      }
      return this;
    }
  }, {
    key: 'removeComponent',
    value: function removeComponent(name) {
      name = (0, _utils.capitalize)(name);
      if (this.hasOwnProperty(name)) {
        this._removeComponentLifeCycle(this[name]);
        delete this[name];
        if (this._world) {
          this._world.removeEntityFromTuples(this);
        }
      }
      return this;
    }
  }, {
    key: 'world',
    get: function get() {
      return this._world;
    }
  }, {
    key: 'id',
    get: function get() {
      return this._id;
    }
  }]);

  return Entity;
}();

exports.default = Entity;

/***/ }),
/* 50 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var System = function () {
  function System() {
    _classCallCheck(this, System);
  }

  _createClass(System, null, [{
    key: 'addWorld',
    value: function addWorld(world) {
      this._world = world;
    }
  }, {
    key: 'init',
    value: function init() {}
  }, {
    key: 'update',
    value: function update() {
      console.error('system.update must overwrite');
    }
  }, {
    key: 'destroy',
    value: function destroy() {}
  }, {
    key: 'stop',
    value: function stop() {}
  }, {
    key: '_getEntities',
    value: function _getEntities() {
      return this._world.getEntities.apply(this._world, arguments);
    }
  }]);

  return System;
}();

exports.default = System;

/***/ }),
/* 51 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tuple = function () {
  function Tuple(componentNames) {
    _classCallCheck(this, Tuple);

    this._componentNames = componentNames;

    this._entities = {};
  }

  _createClass(Tuple, [{
    key: "addEntityIfMatch",
    value: function addEntityIfMatch(entity) {
      if (!this._entities.hasOwnProperty(entity.id) && this.matchEntity(entity)) {
        this._entities[entity.id] = entity;
      }
      return this;
    }
  }, {
    key: "removeEntity",
    value: function removeEntity(entity) {
      if (this._entities.hasOwnProperty(entity.id)) {
        delete this._entities[entity.id];
      }
      return this;
    }
  }, {
    key: "removeEntityIfNotMatch",
    value: function removeEntityIfNotMatch(entity) {
      if (this._entities.hasOwnProperty(entity.id) && !this.matchEntity(entity)) {
        delete this._entities[entity.id];
      }
    }
  }, {
    key: "matchEntity",
    value: function matchEntity(entity) {
      return entity.has.apply(entity, _toConsumableArray(this._componentNames));
    }
  }, {
    key: "entities",
    get: function get() {
      return this._entities;
    }
  }]);

  return Tuple;
}();

exports.default = Tuple;

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _tuple = __webpack_require__(51);

var _tuple2 = _interopRequireDefault(_tuple);

var _utils = __webpack_require__(31);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var timer = false;
var id = 0;

var World = function () {
  function World() {
    _classCallCheck(this, World);

    this._tuples = {
      '': new _tuple2.default([])
    };

    this._systems = [];

    this._backgroundSystems = [];

    this._runStatus = false;

    if (timer) {
      this.times = {};
    }
  }

  _createClass(World, [{
    key: 'start',
    value: function start() {
      var _this = this;

      if (!this._runStatus) {
        //console.log('start')
        console.log(this._backgroundSystems);
        this._backgroundSystems.forEach(function (system) {
          console.log('system start');
          system.start();
        });
      }
      this._runStatus = true;

      if (timer) {
        setInterval(function () {
          console.log('-------------------');
          console.log(id++);
          var total = 0;
          for (var name in _this.times) {
            console.log(name, _this.times[name]);
            total += _this.times[name];
          }
          console.log('total', total);
        }, 5000);
      }
    }
  }, {
    key: 'update',
    value: function update() {
      var _this2 = this,
          _arguments = arguments;

      this._systems.forEach(function (system) {
        if (!_this2._runStatus) {
          return;
        }
        if (timer) {
          if (!_this2.times.hasOwnProperty(system.name)) {
            _this2.times[system.name] = 0;
          }
          var s = Date.now();
          system.update.apply(system, _arguments);
          _this2.times[system.name] += Date.now() - s;
        } else {
          system.update.apply(system, _arguments);
        }
      });
    }
  }, {
    key: 'gameStop',
    value: function gameStop() {
      this._systems = [];
    }
  }, {
    key: 'pause',
    value: function pause() {
      this._runStatus = false;
      this._backgroundSystems.forEach(function (system) {
        system.stop();
      });
    }
  }, {
    key: 'stop',
    value: function stop() {
      this._runStatus = false;
      this._backgroundSystems.forEach(function (system) {
        system.stop();
      });

      this._systems.forEach(function (system) {
        system.stop();
      });
    }
  }, {
    key: 'clear',
    value: function clear() {
      this._tuples = {
        '': new _tuple2.default([])
      };
      this._systems.forEach(function (system) {
        return system.destroy();
      });
      this._systems = [];
      this._backgroundSystems = [];
    }

    // components

  }, {
    key: 'addComponent',
    value: function addComponent(component, value) {
      var isComponent = typeof component !== 'string';
      var name = (0, _utils.capitalize)(isComponent ? (0, _utils.getName)(component) : component);
      this[name] = isComponent ? component : value !== undefined ? value : true;
      return this;
    }
  }, {
    key: 'removeComponent',
    value: function removeComponent(name) {
      delete this[(0, _utils.capitalize)(name)];
      return this;
    }

    // system

  }, {
    key: 'addSystem',
    value: function addSystem(system) {
      this._systems.push(system);
      system.addWorld(this);
      system.init();
      return this;
    }
  }, {
    key: 'removeSystem',
    value: function removeSystem(system) {
      for (var i = 0; i < this._systems.length; ++i) {
        if (this._systems[i] === system) {
          this._systems.splice(i, 1);
          return this;
        }
      }
      return this;
    }

    // backgroundSystem

  }, {
    key: 'addBackgroundSystem',
    value: function addBackgroundSystem(system) {
      this._backgroundSystems.push(system);
      system.addWorld(this);
      system.init();
      return this;
    }
  }, {
    key: 'removeBackgroundSystem',
    value: function removeBackgroundSystem(system) {
      for (var i = 0; i < this._backgroundSystems.length; ++i) {
        if (this._backgroundSystems[i] === system) {
          this._backgroundSystems.splice(i, 1);
          return this;
        }
      }
      return this;
    }

    // entity

  }, {
    key: 'addEntity',
    value: function addEntity(entity) {
      entity.addToWorld(this);
      for (var name in this._tuples) {
        this._tuples[name].addEntityIfMatch(entity);
      }
      return this;
    }
  }, {
    key: 'removeEntity',
    value: function removeEntity(entity) {
      entity.removeFromWorld();
      for (var name in this._tuples) {
        this._tuples[name].removeEntity(entity);
      }
      return this;
    }
  }, {
    key: 'getEntities',
    value: function getEntities() {
      var tuple = this._ensureTupleExists(arguments);

      return tuple.entities;
    }
  }, {
    key: 'getEntity',
    value: function getEntity(id) {
      return this._tuples[''].entities[id];
    }

    // invoked by entity when component adding to entity

  }, {
    key: 'addEntityToTuples',
    value: function addEntityToTuples(entity) {
      for (var name in this._tuples) {
        this._tuples[name].addEntityIfMatch(entity);
      }
    }

    // invoked by entity when component removing from entity

  }, {
    key: 'removeEntityFromTuples',
    value: function removeEntityFromTuples(entity) {
      for (var name in this._tuples) {
        this._tuples[name].removeEntityIfNotMatch(entity);
      }
    }
  }, {
    key: '_ensureTupleExists',
    value: function _ensureTupleExists(componentNames) {
      var name = Array.prototype.join.call(componentNames, ',');

      if (!this._tuples.hasOwnProperty(name)) {
        this._tuples[name] = new _tuple2.default(Array.prototype.slice.call(componentNames));

        var allEntities = this._tuples[''].entities;
        for (var i in allEntities) {
          this._tuples[name].addEntityIfMatch(allEntities[i]);
        }
      }

      return this._tuples[name];
    }

    // set cmd(c) {
    //   console.log('cmd', c)
    //   this._cmd = c
    // }

    // get cmd() {
    //   return this._cmd
    // }

  }]);

  return World;
}();

exports.default = World;

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(19);

var _config2 = _interopRequireDefault(_config);

var _config3 = __webpack_require__(0);

var _config4 = _interopRequireDefault(_config3);

var _utils = __webpack_require__(1);

var _game = __webpack_require__(13);

var _game2 = _interopRequireDefault(_game);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PATH_LIMIT = 80;

var DeadAnimation = function () {
  function DeadAnimation() {
    _classCallCheck(this, DeadAnimation);
  }

  _createClass(DeadAnimation, null, [{
    key: 'init',
    value: function init(world) {
      this._running = false;

      this._world = world;
      this._onAnimationFinished = function () {};

      this._deg90 = Math.PI / 2;
      this._degNeg90 = -this._deg90;
    }
  }, {
    key: 'generateAnimation',
    value: function generateAnimation() {
      var c = _config4.default.DEAD_ANIMATION;

      var ballRange = c.RANGE.RADIUS,
          minVec = c.MIN_VEC,
          maxVec = c.MAX_VEC;
      var particles = [];

      this._ballPositionOnScreen = this._world.ball.position.SUB(this._world.camera.leftTopPoint);
      for (var i = c.PARTICLE_NUMBER; i > 0; i--) {
        var position = new _utils.Point((0, _utils.random)(-ballRange, ballRange), (0, _utils.random)(-ballRange, ballRange));
        var vec = position.clone.normalize().SELF_MUL(2);
        var duration = c.DURATION_BASE + (0, _utils.random)(-c.DURATION_DELTA, c.DURATION_DELTA);
        var radius = c.RADIUS_BASE + (0, _utils.random)(-c.RADIUS_DELTA, c.RADIUS_DELTA);
        var sp = new Laya.Sprite();
        Laya.stage.addChild(sp);

        particles.push({
          vec: vec,
          duration: duration,
          radius: radius,
          sp: sp,
          id: i,
          position: position.SELF_ADD(this._ballPositionOnScreen),
          path: [position]
        });
      }

      this._particles = particles;
    }
  }, {
    key: 'start',
    value: function start() {
      this.generateAnimation();
      this._running = true;
      this.update();
    }
  }, {
    key: 'stop',
    value: function stop() {
      this._running = false;
      this._particles.length = 0;
    }
  }, {
    key: 'update',
    value: function update() {
      if (this._running && this._particles.length) {
        for (var i = this._particles.length - 1; i >= 0; i--) {
          var particle = this._particles[i];

          particle.path.push(particle.position.clone);
          // if (particle.id === 20) {
          //   console.log('particle 0 current position', particle.position)
          //   console.log(particle.path)
          // }
          if (particle.path.length > PATH_LIMIT) {
            particle.path.splice(0, particle.path.length - PATH_LIMIT);
          }

          particle.duration--;
          if (!particle.duration) {
            var toRemove = this._particles.splice(i, 1);
            toRemove[0].sp.destroy();

            console.log('this._particles.length', this._particles.length);
            continue;
          }

          particle.position.SELF_ADD(particle.vec);

          var path = this.generateTailPath(particle);

          particle.sp.graphics.clear();
          particle.sp.pos(particle.position.x, particle.position.y);
          particle.sp.graphics.drawCircle(0, 0, particle.radius, '#FFFFFF');

          particle.sp.graphics.drawPath(0, 0, [['moveTo', 0, 0]].concat(_toConsumableArray(path), [['closePath']]), { fillStyle: '#FFFFFF' });
        }

        requestAnimationFrame(this.update.bind(this));
      } else {
        this.stop();
        this._onAnimationFinished();
        return;
      }
    }
  }, {
    key: 'generateTailPath',
    value: function generateTailPath(_ref) {
      var path = _ref.path,
          radius = _ref.radius,
          position = _ref.position;

      var sideA = [],
          sideB = [];

      for (var i = path.length - 1; i > 0; i--) {
        var direction = path[i].SUB(path[i - 1]).normalize().MUL(radius * i / path.length);

        sideA.push(path[i].ADD(direction.ROTATE(this._deg90)).SELF_SUB(position));
        sideB.push(path[i].ADD(direction.ROTATE(this._degNeg90)).SELF_SUB(position));
      }

      sideA.push.apply(sideA, [path[0].SUB(position)].concat(sideB));

      return sideA.map(function (point) {
        return ['lineTo', point.x, point.y];
      });
    }
  }, {
    key: 'running',
    get: function get() {
      return this._running;
    },
    set: function set(state) {
      if (state === this._running) {
        console.log('DeadAnimation already', state ? 'played' : 'stopped');
        return;
      }

      if (state) {
        this.start();
      } else {
        this.stop();
      }
      // this._running = state
    }
  }]);

  return DeadAnimation;
}();

exports.default = DeadAnimation;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CmdSystem = function (_BackgroundSystem) {
  _inherits(CmdSystem, _BackgroundSystem);

  function CmdSystem() {
    _classCallCheck(this, CmdSystem);

    return _possibleConstructorReturn(this, (CmdSystem.__proto__ || Object.getPrototypeOf(CmdSystem)).apply(this, arguments));
  }

  _createClass(CmdSystem, null, [{
    key: 'start',
    value: function start() {}
  }, {
    key: 'stop',
    value: function stop() {}
  }]);

  return CmdSystem;
}(_ECS.BackgroundSystem);

exports.default = CmdSystem;

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameLoopSystem = function (_BackgroundSystem) {
  _inherits(GameLoopSystem, _BackgroundSystem);

  function GameLoopSystem() {
    _classCallCheck(this, GameLoopSystem);

    return _possibleConstructorReturn(this, (GameLoopSystem.__proto__ || Object.getPrototypeOf(GameLoopSystem)).apply(this, arguments));
  }

  _createClass(GameLoopSystem, null, [{
    key: 'start',
    value: function start() {
      console.log('game loop start');
      this._lastTime = Date.now();
      this._loop = this._loop.bind(this);
      this._handler = setInterval(this._loop, 16);
      //this._loop()
    }
  }, {
    key: 'stop',
    value: function stop() {
      clearInterval(this._handler);
    }
  }, {
    key: '_loop',
    value: function _loop() {
      var now = Date.now();
      var dt = now - this._lastTime;
      this._lastTime = now;
      this._world.update(dt, now);
      _utils.emitter.emit('game-loop', 16);
    }
  }]);

  return GameLoopSystem;
}(_ECS.BackgroundSystem);

exports.default = GameLoopSystem;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _ECS = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var widthRatio = _config2.default.SCREEN_WIDTH / window.innerWidth;
var heightRatio = _config2.default.SCREEN_HEIGHT / window.innerHeight;

var getStagePoint = function getStagePoint(touch) {
  return {
    point: new _utils.Point(touch.pageX, touch.pageY).MUL(widthRatio, heightRatio),
    id: touch.identifier
  };
};

// background system

var InputSystem = function (_BackgroundSystem) {
  _inherits(InputSystem, _BackgroundSystem);

  function InputSystem() {
    _classCallCheck(this, InputSystem);

    return _possibleConstructorReturn(this, (InputSystem.__proto__ || Object.getPrototypeOf(InputSystem)).apply(this, arguments));
  }

  _createClass(InputSystem, null, [{
    key: 'init',
    value: function init() {
      this._touchId2Entities = {};
      this._bindedTouchStart = this._onTouchStart.bind(this);
      this._bindedTouchMove = this._onTouchMove.bind(this);
      this._bindedTouchEnd = this._onTouchEnd.bind(this);
    }
  }, {
    key: 'start',
    value: function start() {
      document.addEventListener('touchstart', this._bindedTouchStart, false);
      document.addEventListener('touchmove', this._bindedTouchMove, false);
      document.addEventListener('touchend', this._bindedTouchEnd, false);
    }
  }, {
    key: 'stop',
    value: function stop() {
      document.removeEventListener('touchstart', this._bindedTouchStart, false);
      document.removeEventListener('touchmove', this._bindedTouchMove, false);
      document.removeEventListener('touchend', this._bindedTouchEnd, false);
    }
  }, {
    key: '_onTouchStart',
    value: function _onTouchStart(e) {
      if (e.changedTouches == undefined) {
        return;
      }

      var entities = this._getEntities('TouchRangeRect');

      for (var i = 0; i < e.changedTouches.length; ++i) {
        var _getStagePoint = getStagePoint(e.changedTouches[i]),
            point = _getStagePoint.point,
            id = _getStagePoint.id;

        for (var key in entities) {
          var entity = entities[key];

          // 圆形的touchRange
          if (entity.touchRange) {
            var position = entity.position;
            var touchRange = entity.touchRange;

            // 另外写个方法好像也没什么意思……
            if (point.distance(position) <= touchRange.range) {
              entity.touchStart && entity.touchStart(point);
              this._touchId2Entities[id] = this._touchId2Entities[id] || [];
              this._touchId2Entities[id].push(entity);
            }
          } else if (entity.touchRangeRect) {
            // 方形的
            var touchRangeRect = entities[key].touchRangeRect;

            if (touchRangeRect.contain(point)) {
              entity.touchStart && entity.touchStart(point);
              this._touchId2Entities[id] = this._touchId2Entities[id] || [];
              this._touchId2Entities[id].push(entity);
            }
          }
        }
      }
    }
  }, {
    key: '_onTouchMove',
    value: function _onTouchMove(e) {
      var _this2 = this;

      if (e.changedTouches == undefined) {
        return;
      }

      var _loop = function _loop(i) {
        var _getStagePoint2 = getStagePoint(e.changedTouches[i]),
            point = _getStagePoint2.point,
            id = _getStagePoint2.id;

        if (_this2._touchId2Entities[id]) {
          _this2._touchId2Entities[id].forEach(function (entity) {
            entity.touchMove && entity.touchMove(point);
          });
        }
      };

      for (var i = 0; i < e.changedTouches.length; ++i) {
        _loop(i);
      }
    }
  }, {
    key: '_onTouchEnd',
    value: function _onTouchEnd(e) {
      var _this3 = this;

      if (e.changedTouches == undefined) {
        return;
      }

      var _loop2 = function _loop2(i) {
        var _getStagePoint3 = getStagePoint(e.changedTouches[i]),
            point = _getStagePoint3.point,
            id = _getStagePoint3.id;

        if (_this3._touchId2Entities[id]) {
          _this3._touchId2Entities[id].forEach(function (entity) {
            entity.touchEnd && entity.touchEnd(point);
          });
          _this3._touchId2Entities[id] = [];
        }
      };

      for (var i = 0; i < e.changedTouches.length; ++i) {
        _loop2(i);
      }
    }
  }]);

  return InputSystem;
}(_ECS.BackgroundSystem);

exports.default = InputSystem;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _ECS = __webpack_require__(2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// background system
var TouchEffectSystem = function (_BackgroundSystem) {
  _inherits(TouchEffectSystem, _BackgroundSystem);

  function TouchEffectSystem() {
    _classCallCheck(this, TouchEffectSystem);

    return _possibleConstructorReturn(this, (TouchEffectSystem.__proto__ || Object.getPrototypeOf(TouchEffectSystem)).apply(this, arguments));
  }

  _createClass(TouchEffectSystem, null, [{
    key: 'init',
    value: function init() {
      var _this2 = this;

      this._bindedTouchStart = this._onTouchStart.bind(this);

      this._widthRatio = _config2.default.SCREEN_WIDTH / window.innerWidth;
      this._heightRatio = _config2.default.SCREEN_HEIGHT / window.innerHeight;

      this._world.touchEffectList = [];

      var peripheral = _config2.default.TOUCH_EFFECT.CROSS.PERIPHERAL,
          internal = _config2.default.TOUCH_EFFECT.CROSS.INTERNAL;

      // x0, y0, x1, y1 ... x7, y7. Satrt from toppest point, clockwisely.
      this._crossStarPoly = [0, peripheral, internal, internal, peripheral, 0, internal, -internal, 0, -peripheral, -internal, -internal, -peripheral, 0, -internal, internal];

      // this._soundEffect = config.SOUND_EFFECT.map((src) => {
      //   if (src) {
      //     const ctx = wx.createInnerAudioContext()
      //     ctx.src = src
      //     return ctx
      //   } else {
      //     return null
      //   }
      // })

      this._soundEffect = [];
      this._tune = [1, 1, 5, 5, 6, 6, 5, 4, 4, 3, 3, 2, 2, 1];
      //for (let i = 0; i < this._tune.length; i++) {
      for (var i = 0; i < 6; i++) {
        var ctx = wx.createInnerAudioContext();
        this._soundEffect.push(ctx);
      }

      this._soundEffect.forEach(function (ctx, index) {
        ctx.src = _config2.default.SOUND_EFFECT[_this2._tune[index]];
      });

      this._currentNote = 0;
    }
  }, {
    key: 'getStagePoint',
    value: function getStagePoint(touch) {
      return new _utils.Point(touch.pageX, touch.pageY).MUL(this._widthRatio, this._heightRatio);
    }
  }, {
    key: 'start',
    value: function start() {
      document.addEventListener('touchstart', this._bindedTouchStart, false);
    }
  }, {
    key: 'stop',
    value: function stop() {
      document.removeEventListener('touchstart', this._bindedTouchStart, false);
    }
  }, {
    key: '_onTouchStart',
    value: function _onTouchStart(e) {
      var _this3 = this;

      if (e.changedTouches == undefined) {
        return;
      }

      if (this._world.mode !== _config2.default.GAME_MODE.REAL && this._world.mode !== _config2.default.GAME_MODE.LIVE) {
        var ctx = this._soundEffect[0];

        // 取值范围[0, this._tune.length]
        var nextNote = (this._currentNote + this._soundEffect.length) % this._tune.length;
        this._currentNote = (this._currentNote + 1) % this._tune.length;
        this._soundEffect.splice(0, 1);
        this._soundEffect.push(ctx);

        ctx.play();
        ctx.onEnded(this.createClosure(ctx, this._tune, nextNote));
      }

      var c = _config2.default.TOUCH_EFFECT;
      for (var i = 0; i < e.changedTouches.length; ++i) {
        var position = this.getStagePoint(e.changedTouches[i]);

        var crossStars = [],
            circleStars = [];

        var _loop = function _loop(_i) {
          var position = new _utils.Point((0, _utils.random)(-c.RANGE, c.RANGE), (0, _utils.random)(-c.RANGE, c.RANGE));
          // x = random(-c.RANGE, c.RANGE),
          // y = random(-c.RANGE, c.RANGE))

          var ratio = (0, _utils.random)(6, 10) / 10;
          var poly = _this3._crossStarPoly.map(function (item) {
            return item * ratio;
          });
          var vec = position.clone.normalize().SELF_MUL(2);

          crossStars.push({
            ratio: ratio,
            poly: poly,
            position: position,
            vec: vec,
            alpha: (0, _utils.random)(6, 9) / 10
          });
        };

        for (var _i = 0; _i < c.CROSS_NUMBER; _i++) {
          _loop(_i);
        }

        for (var _i2 = 0; _i2 < c.CIRCLE_NUMBER; _i2++) {
          var _position = new _utils.Point((0, _utils.random)(-c.RANGE, c.RANGE), (0, _utils.random)(-c.RANGE, c.RANGE));
          // x = random(-c.RANGE, c.RANGE),
          // y = random(-c.RANGE, c.RANGE))

          var _ratio = (0, _utils.random)(6, 10) / 10;
          var radius = c.CIRCLE * _ratio;
          var vec = _position.clone.normalize();

          circleStars.push({
            ratio: _ratio,
            radius: radius,
            position: _position,
            vec: vec,
            alpha: (0, _utils.random)(6, 9) / 10
          });
        }

        this._world.touchEffectList.push({
          position: position,
          crossStars: crossStars,
          circleStars: circleStars,
          circleBorder: {
            innerRadius: c.CIRCLE_BORDER,
            outerRadius: c.CIRCLE_BORDER + 10,
            alpha: 0.6
          },
          duration: c.DURATION,
          alpha: (0, _utils.random)(6, 9) / 10,
          startTime: Date.now()
        });
      }
    }
  }, {
    key: 'createClosure',
    value: function createClosure(ctx, tune, noteIndex) {
      return function () {
        var src = _config2.default.SOUND_EFFECT[tune[noteIndex]];
        //console.log('this._currentNote', noteIndex)
        //console.log('ctx src', src)
        ctx.src = src;
      };
    }
  }]);

  return TouchEffectSystem;
}(_ECS.BackgroundSystem);

exports.default = TouchEffectSystem;

/***/ }),
/* 58 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  MAGNET: 0, // 磁铁
  X2: 1, // 双倍得分
  SHIELD: 2 // 护盾
};

/***/ }),
/* 59 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  "version": 'local',
  "music": [{
    "title": "李白",
    "singer_name": "李荣浩",
    "difficulty": 4,
    "music_id": "Tzbpa2G6RS7CmXq4e-nWOw"
  }, {
    "title": "海阔天空",
    "singer_name": "黄家驹",
    "difficulty": 2,
    "music_id": "k8wTqrgErK1NuUWXYl44NQ"
  }, {
    "title": "成都",
    "singer_name": "赵雷",
    "difficulty": 2,
    "music_id": "V5g9UQ5_FMkeyoEtuPuqdA"
  }, {
    "title": "朋友",
    "singer_name": "刘志宏",
    "difficulty": 3,
    "music_id": "7TInI26P0jaUBjah1n-CSQ"
  }, {
    "title": "权利的游戏片头曲",
    "singer_name": "Ramin Djawadi",
    "difficulty": 4,
    "music_id": "NbIuow3EkFaqZ0XQh5y4EA"
  }, {
    "title": "超级玛丽",
    "singer_name": "近藤浩治",
    "difficulty": 5,
    "music_id": "rC_DufOl04NqwooVZDPzkg"
  }, {
    "title": "青鸟",
    "singer_name": "水野良树",
    "difficulty": 5,
    "music_id": "MOkkAwNqgqk_tEXVwpzieQ"
  }, {
    "title": "好汉歌",
    "singer_name": "赵季平",
    "difficulty": 5,
    "music_id": "hpFkpjFnNyrbfHPIbv7waA"
  }, {
    "title": "龙卷风",
    "singer_name": "周杰伦",
    "difficulty": 5,
    "music_id": "YQ9KXeY03zNRyk7MeKe2Dw"
  }, {
    "title": "当我们再相见",
    "singer_name": "Charlie Puth",
    "difficulty": 5,
    "music_id": "QbqqNKw2UPenAYWXNWOaPQ"
  }, {
    "title": "唯有沉默",
    "singer_name": "Charlie Puth",
    "difficulty": 5,
    "music_id": "zNcciDGSRySq_GFCQLX_XQ"
  }, {
    "title": "西游记片头曲",
    "singer_name": "许镜清",
    "difficulty": 5,
    "music_id": "VK1tDgT2_9V_AgLqnAPJTg"
  }, {
    "title": "一千个伤心的理由",
    "singer_name": "李偲菘",
    "difficulty": 4,
    "music_id": "ijcSjoYScdxEUHESegZZuA"
  }, {
    "title": "青花瓷",
    "singer_name": "周杰伦",
    "difficulty": 4,
    "music_id": "kssL0N7KxHV898u5LUnurQ"
  }, {
    "title": "当年情",
    "singer_name": "顾嘉辉",
    "difficulty": 4,
    "music_id": "s7XyOhgucta9eRzcsz2aFg"
  }, {
    "title": "致爱丽丝",
    "singer_name": "贝多芬",
    "difficulty": 4,
    "music_id": "MCTF7K5ApuX4bn-MSyFaGQ"
  }, {
    "title": "I Believe",
    "singer_name": "Kim Hyun Sek",
    "difficulty": 4,
    "music_id": "UMruws2X4jiN_UUbJtlKfg"
  }, {
    "title": "我的歌声里",
    "singer_name": "曲婉婷",
    "difficulty": 3,
    "music_id": "e9VeLCY5zNjaMB6rYw0BEA"
  }, {
    "title": "我的一切",
    "singer_name": "John Legend",
    "difficulty": 3,
    "music_id": "ZiijFMZtRFU63eguYwsmjQ"
  }, {
    "title": "吻别",
    "singer_name": "殷文琦",
    "difficulty": 3,
    "music_id": "8nCnspzTWJlOuuliIVMOZA"
  }, {
    "title": "南山南",
    "singer_name": "马頔",
    "difficulty": 3,
    "music_id": "BT1JB_JCcR6oTo8eo28dqA"
  }, {
    "title": "K歌之王",
    "singer_name": "陈辉阳",
    "difficulty": 3,
    "music_id": "Bh5RQficgEYpGMakRToo3g"
  }, {
    "title": "上海滩",
    "singer_name": "顾嘉辉",
    "difficulty": 3,
    "music_id": "7eHUJwC9gmf9TJSxaaEoRw"
  }, {
    "title": "我心永恒",
    "singer_name": "James Roy Horner",
    "difficulty": 2,
    "music_id": "bQr8PoiaRWkXsVmDuF2WAw"
  }, {
    "title": "童话",
    "singer_name": "光良",
    "difficulty": 2,
    "music_id": "w4I-NOBlLfTIshvSOLv9xQ"
  }, {
    "title": "周杰伦婚礼背景音乐",
    "singer_name": "周杰伦",
    "difficulty": 2,
    "music_id": "1XeeqvKEtPZ4bpv2ZXWTyA"
  }, {
    "title": "龙的传人",
    "singer_name": "侯德健",
    "difficulty": 2,
    "music_id": "ygb1H2nNYEa1jMI1DSdMZg"
  }, {
    "title": "同桌的你",
    "singer_name": "高晓松",
    "difficulty": 2,
    "music_id": "9n3WC78VIjbsh4k4SVymqA"
  }, {
    "title": "斑马斑马",
    "singer_name": "宋冬野",
    "difficulty": 2,
    "music_id": "ZJ_yXOI8RvlOuOsIqyV4PQ"
  }, {
    "title": "我愿意",
    "singer_name": "黄国伦",
    "difficulty": 2,
    "music_id": "DZzGR5R-HHAEUq-TH69z2Q"
  }, {
    "title": "千年等一回",
    "singer_name": "左宏元",
    "difficulty": 1,
    "music_id": "VC1eKoJhDvKB-QfGQ9a4vw"
  }, {
    "title": "生日快乐",
    "singer_name": "H.W.",
    "difficulty": 1,
    "music_id": "DuZ-iKY6n6azRbAIH_IBow"
  }, {
    "title": "告白气球",
    "singer_name": "周杰伦",
    "difficulty": 2,
    "music_id": "pA8ttdZk7V4WgQw0w4pZQg"
  }, {
    "title": "后会无期",
    "singer_name": "Anthun Kent & Dee Syluia",
    "difficulty": 2,
    "music_id": "YDKlCcGeoqUerc2vZOJkUg"
  }, {
    "title": "千千阙歌",
    "singer_name": "Kohji Makaino",
    "difficulty": 2,
    "music_id": "sxUzD6FsKe546VITWE641A"
  }, {
    "title": "月亮代表我的心",
    "singer_name": "翁清溪",
    "difficulty": 1,
    "music_id": "uW-0YPO_bq7fOWJGF1i9Aw"
  }, {
    "title": "卡农",
    "singer_name": "Johann Pachelbel",
    "difficulty": 3,
    "music_id": "j3iUS5f6q_EZLjCx0fCitg"
  }, {
    "title": "克罗地亚狂想曲",
    "singer_name": "Tonci Huljic",
    "difficulty": 5,
    "music_id": "PxH15sE3UEIOQE_T7JXE3A"
  }, {
    "title": "秋日私语",
    "singer_name": "Paul De Senneville & Olivier Toussaint",
    "difficulty": 4,
    "music_id": "tZ9vhpojjoEe8gdXtAzjdQ"
  }, {
    "title": "天空之城",
    "singer_name": "久石让",
    "difficulty": 1,
    "music_id": "pUl_oAMET4YZAox6eQ_nRw"
  }, {
    "title": "童话镇",
    "singer_name": "暗杠",
    "difficulty": 3,
    "music_id": "bJZ5GvCIuc4yalD31FXvbA"
  }, {
    "title": "梦中的婚礼",
    "singer_name": "Paul De Senneville & Olivier Toussaint",
    "difficulty": 4,
    "music_id": "LMihxEhpUsdKbGF9p6QJTw"
  }, {
    "title": "蓝莲花",
    "singer_name": "许巍",
    "difficulty": 1,
    "music_id": "E8IKU4BXjo_2-1TZus0SbQ"
  }, {
    "title": "亡灵序曲",
    "singer_name": "Harry Gregson Williams",
    "difficulty": 2,
    "music_id": "sZDV5aSWZMM8EdfFnxDC1g"
  }, {
    "title": "菊次郎的夏天",
    "singer_name": "久石让",
    "difficulty": 2,
    "music_id": "4jfKXLUwkVQtEOMbr3dSxw"
  }]
};

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (world) {
  var initialDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var presetNotes = arguments[2];

  var notes = presetNotes || world.song.notes;

  var index = 0;
  var accumulatedLength = 0;
  var prevStartTime = 0;
  var up = true;

  var fakeNoteInterval = _config2.default.FAKE_NOTE.PREV_NOTE_TIME + _config2.default.FAKE_NOTE.REACTION_TIME + _config2.default.FAKE_NOTE.PREV_NOTE_TIME + _config2.default.FAKE_NOTE.OBSTACLE_INTERVAL * (_config2.default.FAKE_NOTE.OBSTACLE_NUMBERS - 1);

  var fakeNoteDistance = _config2.default.FAKE_NOTE.PREV_NOTE_TIME * _config2.default.RUN_VEC * 1000;

  var leftTopVector = new _utils2.Point(-_config2.default.COIN.SIZE / 2, -_config2.default.COIN.SIZE / 2);

  var randomNotes = world.assets.randomNotes;
  var randomRange = randomNotes.length;

  var getCoin = function getCoin(world, distance, y) {
    while (distance > accumulatedLength && index < world.pathes.length) {
      accumulatedLength += world.pathes[index].length;
      index++;
    }
    if (index >= world.pathes.length) {
      return null;
    }

    var x = world.pathes[index - 1].length + distance - accumulatedLength;

    // const centroid = translateCoordinate(world, index - 1, x, y)

    var p1 = (0, _utils.translateCoordinate)(world, index - 1, x, y - _config2.default.COIN.SIZE);
    var p3 = (0, _utils.translateCoordinate)(world, index - 1, x, y + _config2.default.COIN.SIZE);

    var centroidVector = p3.SUB(p1).SELF_MUL(0.5);
    var centroid = p1.ADD(centroidVector);

    var position = centroid.ADD(leftTopVector);

    var p2 = centroid.clone;
    p2.x -= centroidVector.y;
    p2.y += centroidVector.x;

    var p4 = centroid.clone;
    p4.x += centroidVector.y;
    p4.y -= centroidVector.x;

    var points = [p1, p2, p3, p4];

    // points.push(translateCoordinate(world, index - 1, x, y - config.COIN.SIZE))
    // points.push(translateCoordinate(world, index - 1, x - config.COIN.SIZE, y))
    // points.push(translateCoordinate(world, index - 1, x, y + config.COIN.SIZE))
    // points.push(translateCoordinate(world, index - 1, x + config.COIN.SIZE, y))

    // const prev = translateCoordinate(world, index - 1, x - 1, y - config.COIN.SIZE)
    // const direction = p1.SUB(prev)
    // const rotation = Math.atan2(direction.y, direction.x) / Math.PI * 180

    var poly = [];
    for (var i = 0; i < 4; i++) {
      poly.push(points[i].x - points[0].x);
      poly.push(points[i].y - points[0].y);
    }
    // const position = points[0]
    return {
      position: position,
      distance: distance,
      sprite: null,
      poly: poly,
      // rotation,
      centroid: centroid,
      color: _config2.default.COIN_COLOR[(0, _utils2.srandom)(_config2.default.COIN_COLOR.length)],
      asset: randomNotes[(0, _utils2.srandom)(randomRange)]
    };
  };

  var getFakeCoin = function getFakeCoin(world, distance, y) {
    var coin = getCoin(world, distance, y);
    coin.fake = true;
    coin.fakeCoinObstacles = [];

    return coin;
  };

  var genTime = world.genTime || _config2.default.GEN_TIME;
  var level = world.level || 1;
  var res = [];
  var trueCoins = [];
  var sign = world.ball.y > 0 ? 1 : -1;
  var prevNote = 0;
  notes.forEach(function (note, index) {
    sign = -sign;
    // 两个真音符间隔大于阈值，可以生成假音符
    // if (level > 1 && note - prevNote > fakeNoteInterval) {
    //   let fakeCoin = getFakeCoin(world, res[index - 1].distance + fakeNoteDistance, config.BALL.HEIGHT * sign)

    //   res.push(fakeCoin)
    // }
    // prevNote = note

    // let trueDistance = note / world.duration * world.totalDistance + initialDistance
    // let trueCoin = getCoin(world, trueDistance, config.BALL.HEIGHT * sign)
    // if (trueCoin) {
    //   trueCoins.push(trueCoin)
    // }

    var distance = (note + genTime / 1000) / world.duration * world.totalDistance + initialDistance;
    var coin = getCoin(world, distance, _config2.default.BALL.HEIGHT * sign);
    coin.rateDistance = (note + genTime / 1000) / world.duration;
    if (coin) {
      res.push(coin);
    }
  });
  for (var i = res.length - 1; i >= 0; i--) {
    if (!res[i]) {
      res.splice(i, 1);
    }
  }

  if (world.mode !== _config2.default.GAME_MODE.ADJUST) {
    var diff = world.songConfig.difficulty;
    var lastType = 0;
    for (var _i = 0; _i < res.length; _i++) {
      res[_i].idx = _i;
      res[_i].type = 'COIN';
      if (_i > res.length * 0.2 && _i > lastType + _config2.default.TREASURE_DISTANCE[diff - 1]) {
        if ((0, _utils2.srandom)() < _config2.default.TREASURE_RATE[diff - 1]) {
          res[_i].type = 'SHIELD';
          lastType = _i;
        }
      }
    }
  } else {
    for (var _i2 = 0; _i2 < res.length; _i2++) {
      res[_i2].idx = _i2;
      res[_i2].type = 'COIN';
    }
  }

  return { coins: res, trueCoins: trueCoins };
};

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(8);

var _utils2 = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (world, args_startPoint, args_rotation) {
  var lines = [];

  var accumulatedLength = 0;
  var startPoint = args_startPoint || new _utils.Point(0, 0);
  var rotation = args_rotation || 0;

  // const basement = parseInt(totalLength / lineNumber)
  var basement = _config2.default.MIN_LINE_DURATION * 1000 * _config2.default.RUN_VEC;
  var wave = 0.3;

  var totalLength = world.totalDistance + basement;
  // lines.push({
  //   type: 'line',
  //   startPoint: new Point(0, startLength),
  //   endPoint: startPoint,
  //   length: startLength
  // })

  var reachMax = false;
  var first = true;
  var negative = false;
  for (var i = 0; accumulatedLength < totalLength; i++) {
    negative = !negative;
    // for (let i = 0; i < 3; i++) {
    var length = (0, _random.random)(basement * 0.1, basement * 0.5);
    if (first) {
      first = false;
      length = basement;
    }
    var radius = length / ratio;

    var straight = new _utils.Point(0, -length);
    var center = new _utils.Point(radius, 0);

    // 表示线段终点的向量
    straight.SELF_ROTATE(rotation);

    // 向量加法求直线终点
    straight.SELF_ADD(startPoint);

    lines.push({
      type: 'line',
      rotation: rotation,
      startPoint: startPoint,
      endPoint: straight,
      length: startPoint.SUB(straight).length
    });

    accumulatedLength += lines[lines.length - 1].length;

    // 线段的终点，是圆弧的起点
    var circleStartPoint = straight;

    // 生成随机的转弯角度
    var arcRadian = getRandomRadian(0, 60) * (negative ? -1 : 1);

    // let arcRadian
    // // 生成随机的转弯角度
    // if (reachMax) {
    //   arcRadian = getRandomRadian(0, 60) * (negative ? -1 : 1)
    //   reachMax = false
    // } else {
    //   arcRadian = getRandomRadian(0, 45) * (negative ? -1 : 1)
    // }

    if (rotation + arcRadian > HALF_PI) {
      arcRadian = HALF_PI - rotation;
      reachMax = true;
    } else if (rotation + arcRadian < NEG_HALF_PI) {
      arcRadian = NEG_HALF_PI - rotation;
      reachMax = true;
    }

    // 线段两侧轮流转弯
    if (arcRadian < 0) {
      center.SELF_NEG();
    }
    // 表示圆心顶点的向量（也可以表示圆的半径）
    center.SELF_ROTATE(rotation);

    // 圆心
    var circleCenter = center.ADD(circleStartPoint);

    // 旋转，求出弧的终点所在向量
    var arcRadianRadius = center.NEG().ROTATE(arcRadian);

    // 向量加法求弧的终点
    var arcEndPoint = arcRadianRadius.ADD(circleStartPoint).ADD(center);

    var absRadian = Math.abs(arcRadian);
    // 求前一根直线和后一根直线的交点，用于arcTo接口
    var crossLength = radius * Math.tan(absRadian / 2);

    // 交点
    var drawEndPoint = circleStartPoint.SUB(startPoint).ADD_LENGTH(crossLength);

    drawEndPoint.SELF_ADD(startPoint);

    lines.push({
      type: 'arc',
      center: center.ADD(circleStartPoint),
      startPoint: circleStartPoint,
      endPoint: arcEndPoint,
      radius: radius,
      drawEndPoint: drawEndPoint,
      length: radius * absRadian,
      radian: absRadian,
      tangent: circleStartPoint.SUB(startPoint),
      rotation: rotation + arcRadian
    });

    // 圆弧的终点是下一根直线的起点
    startPoint = arcEndPoint;
    // 下一根直线需要旋转的角度
    rotation += arcRadian;

    // if (rotation > POSITIVE_MAX_RADIAN) {
    //   rotation -= POSITIVE_MAX_RADIAN
    // } else if (rotation < NEGATIVE_MAX_RADIAN) {
    //   rotation += POSITIVE_MAX_RADIAN
    // }

    accumulatedLength += lines[lines.length - 1].length;
  }

  return lines;
};

var _random = __webpack_require__(38);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ratio = 1;

var POSITIVE_MAX_RADIAN = Math.PI * 2 * 0.99;
var NEGATIVE_MAX_RADIAN = -POSITIVE_MAX_RADIAN;

var HALF_PI = Math.PI / 2;
var NEG_HALF_PI = -HALF_PI;

var radians = [Math.PI / 4, Math.PI * 3 / 4];
function getRandomRadian() {
  var startAngle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
  var endAngle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 180;

  // return radians[random(0, 2)]
  return (0, _random.random)(startAngle, endAngle) / 180 * Math.PI * 2;
}

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (world) {
  var initialDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  return;
  var friendsScore = _storage2.default.fetchFriendsScore(world.songConfig.id);
  if (friendsScore === undefined) {
    return [];
  }

  var index = 0;
  var accumulatedLength = 0;
  var getMileStone = function getMileStone(world, distance) {
    while (distance > accumulatedLength && index < world.pathes.length) {
      accumulatedLength += world.pathes[index].length;
      ++index;
    }

    if (index >= world.pathes.length) {
      return null;
    }

    var x = world.pathes[index - 1].length + distance - accumulatedLength;

    return {
      x: x,
      index: index - 1,
      position: (0, _utils2.translateCoordinate)(world, index - 1, x, 0),
      line: {}
    };
  };

  var mileStones = [];

  for (var i = 0; i < friendsScore.user_info.length; ++i) {
    var mileStone = friendsScore.user_info[i];
    mileStone.render = getMileStone(world, mileStone.distance_score + initialDistance);
    if (mileStone.render) {
      mileStones.push(mileStone);
    }
  }

  return mileStones;
};

var _storage = __webpack_require__(18);

var _storage2 = _interopRequireDefault(_storage);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (world) {
  var initialDistance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  // const notes = world.song.notes
  var coins = world.coins;

  var index = 0;
  var accumulatedLength = 0;

  var obstacles = [];

  var reactionDistance = _config2.default.RUN_VEC * 1000 * _config2.default.FAKE_NOTE.REACTION_TIME;
  var fakeCoinObstacleDistance = _config2.default.RUN_VEC * 1000 * _config2.default.FAKE_NOTE.OBSTACLE_INTERVAL;

  var getObstacle = function getObstacle(world, distance, sign) {
    var position = null;

    while (distance > accumulatedLength && index < world.pathes.length) {
      accumulatedLength += world.pathes[index].length;
      ++index;
    }

    if (index >= world.pathes.length) {
      return null;
    }

    var x = world.pathes[index - 1].length + distance - accumulatedLength;

    var _generateShape = generateShape(world, index - 1, x, sign),
        polygon = _generateShape.polygon,
        pathes = _generateShape.pathes,
        growthVector = _generateShape.growthVector;

    return {
      position: polygon.points[0],
      distance: distance,
      sprite: null,
      shape: polygon,
      pathes: pathes,
      growthVector: growthVector,
      frames: 1
    };
  };

  var sign = world.ball.y > 0 ? -1 : 1;
  var cnt = 0;
  var idx = 0;
  var minGenRate = _config2.default.OBS_MIN_GEN_RATE + _config2.default.OBS_GEN_LEVEL_INC * (world.songConfig.difficulty - 1);
  var maxGenRate = _config2.default.OBS_MAX_GEN_RATE + _config2.default.OBS_GEN_LEVEL_INC * (world.songConfig.difficulty - 1);
  // notes.forEach(note => {
  coins.forEach(function (coin) {
    // let distance = (note + config.GEN_TIME / 1000) / world.duration * world.totalDistance + initialDistance
    var distance = coin.distance;

    if (coin.fake) {
      var firstObstacleDistance = distance + reactionDistance;
      for (var i = 0; i < _config2.default.FAKE_NOTE.OBSTACLE_NUMBERS; i++) {
        var fakeCoinObstacle = getObstacle(world, firstObstacleDistance + i * fakeCoinObstacleDistance, sign * (i % 2 ? sign : -sign));
        fakeCoinObstacle.isGear = true;
        fakeCoinObstacle.triggered = false;
        fakeCoinObstacle.hidden = true;
        coin.fakeCoinObstacles.push(fakeCoinObstacle);
        obstacles.push(fakeCoinObstacle);
      }

      return;
    }

    sign = -sign;

    if (!_config2.default.GO_DIE && (0, _utils.srandom)() > minGenRate + (maxGenRate - minGenRate) * coin.rateDistance) {
      return;
    }

    var obstacle = getObstacle(world, distance, sign);
    if (obstacle) {
      obstacle.idx = idx++;
      obstacles.push(obstacle);
    }
  });

  return obstacles;
};

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function generateShape(world, index, x, sign) {
  var path = world.pathes[index];
  var res = generateRect(x, sign);

  var polygon = res.polygon;
  var pathes = res.pathes;

  var points = polygon.points.map(function (point) {
    return (0, _utils2.translateCoordinate)(world, index, point.x, point.y);
  });
  pathes = pathes.map(function (point) {
    return (0, _utils2.translateCoordinate)(world, index, point.x, point.y);
  });

  var newPathes = [];
  for (var i = 0; i < pathes.length; i++) {
    newPathes.push(pathes[i].x - pathes[0].x);
    newPathes.push(pathes[i].y - pathes[0].y);
  }

  polygon = new _utils.Polygon(points);
  return { polygon: polygon, pathes: newPathes };
}

function generateTriangle(x, sign) {
  var HALF_TRIANGE_EDGE_LENGTH = 20 * sign;

  pointList = [];

  pointList.push(new _utils.Point(x - HALF_TRIANGE_EDGE_LENGTH, 0));
  pointList.push(new _utils.Point(x + HALF_TRIANGE_EDGE_LENGTH, 0));
  pointList.push(new _utils.Point(x, 1.732 * HALF_TRIANGE_EDGE_LENGTH));

  return new _utils.Polygon(pointList);
}

function generateRect(x, sign) {
  var HALF_WIDTH = _config2.default.OBS.WIDTH / 2;
  var HEIGHT = _config2.default.OBS.HEIGHT * sign;

  pointList = [];

  pointList.push(new _utils.Point(x - HALF_WIDTH, HEIGHT));
  pointList.push(new _utils.Point(x + HALF_WIDTH, HEIGHT));
  pointList.push(new _utils.Point(x + HALF_WIDTH, 0));
  pointList.push(new _utils.Point(x - HALF_WIDTH, 0));

  var pathes = [];
  pathes.push(new _utils.Point(x - HALF_WIDTH, 0));
  pathes.push(new _utils.Point(x + HALF_WIDTH, HEIGHT * 1 / 8));
  pathes.push(new _utils.Point(x - HALF_WIDTH, HEIGHT * 2 / 8));
  pathes.push(new _utils.Point(x + HALF_WIDTH, HEIGHT * 3 / 8));
  pathes.push(new _utils.Point(x - HALF_WIDTH, HEIGHT * 4 / 8));
  pathes.push(new _utils.Point(x + HALF_WIDTH, HEIGHT * 5 / 8));
  pathes.push(new _utils.Point(x - HALF_WIDTH, HEIGHT * 6 / 8));
  pathes.push(new _utils.Point(x + HALF_WIDTH, HEIGHT * 7 / 8));
  pathes.push(new _utils.Point(x - HALF_WIDTH, HEIGHT));

  return {
    polygon: new _utils.Polygon(pointList),
    pathes: pathes
  };
}

function generateFlyRect(x, sign) {
  var HALF_WIDTH = 40;
  var HEIGHT = 10 * sign;

  var FLY_HEIGHT = 150 * sign;

  pointList = [];

  pointList.push(new _utils.Point(x - HALF_WIDTH, HEIGHT + FLY_HEIGHT));
  pointList.push(new _utils.Point(x + HALF_WIDTH, HEIGHT + FLY_HEIGHT));
  pointList.push(new _utils.Point(x + HALF_WIDTH, FLY_HEIGHT));
  pointList.push(new _utils.Point(x - HALF_WIDTH, FLY_HEIGHT));

  return new _utils.Polygon(pointList);
}

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reset = function reset(world) {

  world.ball = {
    distance: 0,
    index: 0,
    x: 0,
    y: _config2.default.BALL.HEIGHT,
    size: _config2.default.BALL.SIZE,
    color: _config2.default.BALL.COLOR,
    yJumpDirection: 0, //0 默认方向，无意义 1 向上 2 向下
    // yInitV: config.INIT_Y_V, //y轴初始速度
    SWITCH_DISTANCE: 0 //切换操作x轴上已经走出去的距离
    // position: calculated by translateCoordinateSystem

    // world.score = 0
    // world.totalDistance = 0
  };world.currentSongLength = 0;
  world.cmd = _config2.default.CMD.NONE;
  world.pathes.start = 0;
  world.pathes.end = 0;
  world.coins.start = 0;
  world.coins.end = 0;
  world.obstacles.start = 0;
  world.obstacles.end = 0;
  world.runVec = _config2.default.RUN_VEC;
  world.particles = [];
  world.mileStones.start = 0;
  world.mileStones.end = 0;
};

exports.default = reset;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _utils = __webpack_require__(1);

var _mask = __webpack_require__(27);

var _mask2 = _interopRequireDefault(_mask);

var _leaderBoard = __webpack_require__(21);

var _leaderBoard2 = _interopRequireDefault(_leaderBoard);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _loadingPanel = __webpack_require__(23);

var _loadingPanel2 = _interopRequireDefault(_loadingPanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var textConfig = {
  font: 'Helvetica',
  // width: config.SCREEN_WIDTH,
  align: 'center',
  valign: 'middle',
  color: '#FFFFFF',
  fontSize: 48,
  zOrder: 100
};

var EndPanel = function (_Panel) {
  _inherits(EndPanel, _Panel);

  function EndPanel() {
    _classCallCheck(this, EndPanel);

    return _possibleConstructorReturn(this, (EndPanel.__proto__ || Object.getPrototypeOf(EndPanel)).apply(this, arguments));
  }

  _createClass(EndPanel, null, [{
    key: 'onHide',
    value: function onHide() {
      this._panel.visible = false;
    }
  }, {
    key: 'onShow',
    value: function onShow() {
      this._panel.visible = true;
    }
  }, {
    key: 'onLoad',
    value: function onLoad(obj) {
      var _this2 = this;

      _utils.Network.quitGame();
      wx.triggerGC();

      var c = _config2.default.END_PANEL;

      var songTitleArgs = (0, _utils.getScaleArgs)(c.SONG_TITLE);
      this._buttonArgs = c.BUTTONS.map(function (button) {
        return (0, _utils.getScaleArgs)(button);
      });
      this._starX = c.STARS_X.map(function (X) {
        return (0, _utils.getScaleArgs)({ X: X }).X;
      });
      this._starArgs = (0, _utils.getScaleArgs)(c.STARS);
      this._buttonTextArgs = (0, _utils.getScaleArgs)(c.BUTTON_TEXT);
      this._scoreBoardArgs = (0, _utils.getScaleArgs)(c.SCOREBOARD);
      this._scoreBoardScoreArgs = (0, _utils.getScaleArgs)(c.SCORE);
      this._scoreBoardBestScoreArgs = (0, _utils.getScaleArgs)(c.BEST_SCORE);
      this._gapArgs = (0, _utils.getScaleArgs)(c.BOARD_GAP);
      this._bgArgs = (0, _utils.getScaleArgs)(c.BG);
      this._expandButtonArgs = (0, _utils.getScaleArgs)(c.EXPAND_BUTTON);
      this._upIconArgs = (0, _utils.getScaleArgs)(c.UP_ICON);
      this._leaderBoardArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD);
      this._leaderBoardItemArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD_ITEM);
      this._leaderBoardRankArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD_RANK);
      this._leaderBoardAvatarArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD_AVATAR);
      this._leaderBoardNicknameArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD_NICKNAME);
      this._leaderBoardScoreArgs = (0, _utils.getScaleArgs)(c.LEADERBOARD_SCORE);
      this._scoreItemArgs = (0, _utils.getScaleArgs)(c.SCORE_ITEM);
      this._scoreItemMarginArgs = (0, _utils.getScaleArgs)(c.SCORE_ITEM_MARGIN);
      this._scoreItemDescArgs = (0, _utils.getScaleArgs)(c.SCORE_ITEM_DESC);

      this._songTitleText = new Laya.Text();
      Object.assign(this._songTitleText, textConfig);
      this._panel.addChild(this._songTitleText);
      this._songTitleText.text = this._world.songConfig.title;
      this._songTitleText.fontSize = c.SONG_TITLE_SIZE;
      this._songTitleText.width = _config2.default.SCREEN_WIDTH;
      this._songTitleText.pos(0, songTitleArgs.Y);

      this._avatarMask = (0, _mask2.default)(this._leaderBoardAvatarArgs.RADIUS);

      // this._progressText = new Laya.Text()
      // Object.assign(this._progressText, textConfig)
      // this._panel.addChild(this._progressText)

      // const distance = this._world.ball.distance > this._world.totalDistance ? this._world.totalDistance : this._world.ball.distance
      // this._progressText.text = `进度: ${Math.floor(distance / this._world.totalDistance * 100)}%`
      // this._progressText.color = config.END_PANEL.COLOR
      // this._progressText.fontSize = config.END_PANEL.SONG_TITLE_SIZE
      // this._progressText.width = config.SCREEN_WIDTH
      // this._progressText.pos(0, config.END_PANEL.PROGRESS_Y)

      // this._friendScores = Storage.fetchFriendsScore(this._world.songConfig.music_id)
      this._friendScores = _utils.Score.getFriendsScore(this._world.songConfig.music_id);

      // const coinLength = this._world.coins.length
      // this._comboStar = this._world.maxContinuousCombo > coinLength * 0.3

      // const comboLimit = parseInt(coinLength / 5 / 10)
      // const scoreLimit = (1 + comboLimit) * comboLimit * 10
      // this._scoreStar = this._world.score > scoreLimit

      // this._distanceStar = distance > this._world.totalDistance * 0.8

      // let starNumber = Math.floor(this._world.score / this._world.scoreLimit * 3)
      // this._stars = [starNumber > 0, starNumber > 1, starNumber > 2]

      var starRate = this._world.score / this._world.scoreLimit;
      this._stars = _config2.default.STAR_RATE.map(function (rate) {
        return starRate > rate;
      });

      this._starScore = this._stars.reduce(function (result, current, index) {
        return result + (current ? 1 << index : 0);
      }, 0);

      this._drawStars();

      var myScoreInfo = _utils.Score.getMyScore(this._world.songConfig.id);
      var myBestScore = myScoreInfo[0].score;

      this._friendScores = [{
        nickname: _utils.Network._userInfo.nickName,
        headimg: _utils.Network._userInfo.avatarUrl,
        score_info: myScoreInfo
      }].concat(this._friendScores);
      // if (this._friendScores) {
      //   myBestScore = this._friendScores.my_user_info.score_info[0].score
      // } else {
      //   myBestScore = 0
      // }

      _utils.Network.endCmd({
        maxContinuousCombo: this._world.maxContinuousCombo,
        missedCoin: this._world.missedCoin,
        touchedObstacle: this._world.touchedObstacle,
        myBestScore: myBestScore,
        score: this._world.score,
        nickName: _utils.Network._userInfo.nickName,
        avatarUrl: _utils.Network._userInfo.avatarUrl,
        complete: obj.complete
      });

      this._buttons = c.BUTTONS.map(function (buttonConfig, index) {
        var buttonArgs = _this2._buttonArgs[index];

        var sp = new Laya.Sprite();
        _this2._panel.addChild(sp);
        if (buttonConfig.ASSET === 'home' || buttonConfig.ASSET === 'restart') {
          sp.graphics.drawTexture(_this2._world.assets[buttonConfig.ASSET], 0, 0, buttonArgs.WIDTH, buttonArgs.WIDTH);
        } else {
          sp.graphics.drawTexture(_this2._world.assets[buttonConfig.ASSET][_this2._world.level], 0, 0, buttonArgs.WIDTH, buttonArgs.WIDTH);
        }
        sp.pos(buttonArgs.X, buttonArgs.Y);
        sp.size(buttonArgs.WIDTH, buttonArgs.WIDTH);

        var shareScore = _this2._world.score;
        // const shareScore = myBestScore > this._world.score ? myBestScore : this._world.score
        var cb = function cb(e) {
          e.stopPropagation();
          if (buttonConfig.ASSET === 'home') {
            _this2._world.mode = _config2.default.GAME_MODE.BACKGROUND;
            _this2._pm.redirectTo(_selectPanel2.default);
            _this2._world.reset(function () {
              _this2._world.start();
            });
          } else if (buttonConfig.ASSET === 'restart') {
            _this2._pm.destroy();
            _this2._world.reset(function () {
              console.log('seeked');
              _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PRELOAD, 'end panel restart');
              _this2._world.start();
            });
          } else if (buttonConfig.ASSET === 'share') {
            (0, _utils.getResultShareImage)(_this2._world.songConfig.title, shareScore, function (img) {
              wx.shareAppMessage({
                title: '\u6211\u5728\u3010' + _this2._world.songConfig.title + '\u3011\u6253\u4E86' + shareScore + '\u5206\uFF0C\u6C42\u8D85\u8D8A',
                query: 'id=' + _this2._world.songConfig.id,
                imageUrl: img
              });
            });
          } else {
            var song = _song2.default.getNextSong(_this2._world.songConfig.id);
            var level = song.difficulty - 1;

            _this2._world.level = level;
            _this2._world.mainColor = _config2.default.LEVEL_COLOR[level];
            _this2._world.circleColor = _config2.default.LEVEL_CIRCLE_COLOR[level];
            _this2._world.textColor = _config2.default.LEVEL_TEXT_COLOR[level];
            _this2._world.starColor = _config2.default.LEVEL_STAR_COLOR[level];

            _panelManager2.default.redirectTo(_loadingPanel2.default, { id: song.music_id });
          }
        };
        sp.on(Laya.Event.MOUSE_UP, _this2, cb);

        return { sp: sp };
      });

      this._drawScoreBoard(myBestScore);

      if (this._friendScores) {
        this._drawLeaderBoard();
      }

      // FireWork.init(this)
      // FireWork.play()

      obj && obj.cb && obj.cb();
    }
  }, {
    key: '_drawStars',
    value: function _drawStars() {
      // if (!this._starSprite) {
      // }

      // when endPanel was destory, this._starSprite would be removed from its parent
      // so must addChild to this_panel again
      this._starSprite = new Laya.Sprite();
      this._starSprite.pos(0, 0);
      this._panel.addChild(this._starSprite);

      this._frames = _config2.default.END_PANEL.STAR_FRAMES;
      this._currentStar = 0;
      // this._stars = [true, true, true]
      this._runStarAnimationBinded = this.runStarAnimation.bind(this);
      _utils.emitter.on('game-loop', this._runStarAnimationBinded);

      console.log('stars state', this._stars);
    }
  }, {
    key: 'runStarAnimation',
    value: function runStarAnimation() {
      var _this3 = this;

      var c = _config2.default.END_PANEL;
      var starArgs = this._starArgs;
      var starSprite = this._starSprite;
      var offset = this._frames * c.STAR_DELTA / 2;
      var radius = starArgs.RADIUS;
      var actualSize = radius + offset * 2;

      starSprite.graphics.clear();
      this._starX.forEach(function (X, index) {
        // star.pos(X, starArgs.Y)
        if (_this3._stars[index]) {
          if (index < _this3._currentStar) {
            starSprite.graphics.drawTexture(_this3._world.assets.starKindled[_this3._world.level], X, starArgs.Y, radius, radius);
          } else if (index === _this3._currentStar) {
            starSprite.graphics.drawTexture(_this3._world.assets.starKindled[_this3._world.level], X - offset, starArgs.Y - offset, actualSize, actualSize);
          } else {
            starSprite.graphics.drawTexture(_this3._world.assets.starUnkindled, X, starArgs.Y, radius, radius);
          }
        } else {
          starSprite.graphics.drawTexture(_this3._world.assets.starUnkindled, X, starArgs.Y, radius, radius);
        }
      });

      if (this._frames) {
        this._frames--;
      } else {
        this._currentStar++;
        if (this._stars[this._currentStar]) {
          this._frames = c.STAR_FRAMES;
        } else {
          _utils.emitter.removeListener('game-loop', this._runStarAnimationBinded);

          if (this._stars[this._stars.length - 1]) {
            FireWork.init(this);
            FireWork.play();
          }
        }
      }
    }
  }, {
    key: '_drawScoreBoard',
    value: function _drawScoreBoard(myBestScore) {
      var c = _config2.default.END_PANEL;
      var scoreBoardArgs = this._scoreBoardArgs;
      var gapArgs = this._gapArgs;

      this._scoreBoard = new Laya.Sprite();
      this._scoreBoard.size(scoreBoardArgs.WIDTH, scoreBoardArgs.HEIGHT);
      this._panel.addChild(this._scoreBoard);
      this._scoreBoard.pos((_config2.default.SCREEN_WIDTH - scoreBoardArgs.WIDTH) / 2, scoreBoardArgs.Y);

      (0, _utils.drawRoundedRect)(this._scoreBoard, 0, 0, scoreBoardArgs.WIDTH, scoreBoardArgs.HEIGHT, scoreBoardArgs.RADIUS, { fillStyle: c.BOARD_COLOR });

      this._scoreBoard.graphics.drawRect(gapArgs.X, scoreBoardArgs.HEIGHT - 1, gapArgs.WIDTH, gapArgs.HEIGHT, c.BOARD_COLOR);
      this._scoreBoard.graphics.drawRect(scoreBoardArgs.WIDTH - gapArgs.X - gapArgs.WIDTH, scoreBoardArgs.HEIGHT - 1, gapArgs.WIDTH, gapArgs.HEIGHT, c.BOARD_COLOR);

      var scoreText = (0, _utils.createTextSprite)(this._panel, this._scoreBoardScoreArgs);
      scoreText.fontSize = this._scoreBoardScoreArgs.RADIUS;
      scoreText.text = this._world.score;

      //this._scoreText.pos((scoreBoardArgs.WIDTH - bounds.width) / 2, scoreBoardArgs.Y)

      var bestText = (0, _utils.createTextSprite)(this._panel, this._scoreBoardBestScoreArgs);
      bestText.text = '最佳成绩: ' + (myBestScore > this._world.score ? myBestScore : this._world.score);
      bestText.fontSize = this._scoreBoardBestScoreArgs.RADIUS;
      bestText.color = this._world.mainColor;

      var isBest = this._world.score > myBestScore;

      // 成绩有更新，画一个new角标
      if (isBest) {
        scoreText.color = c.NEW.COLOR;
        var newIconArgs = (0, _utils.getScaleArgs)(c.NEW);

        var _new = new Laya.Sprite();
        _new.pos(_config2.default.SCREEN_WIDTH / 2 + scoreText.textWidth / 2 + newIconArgs.X, newIconArgs.Y);
        _new.graphics.drawTexture(this._world.assets.new, 0, 0, newIconArgs.WIDTH, newIconArgs.HEIGHT);
        // console.log(config.SCREEN_WIDTH / 2 + scoreText.textWidth / 2 + newIconArgs.X, newIconArgs.Y)
        // console.log(this._world.assets.new, 0, 0, newIconArgs.WIDTH, newIconArgs.HEIGHT)
        this._panel.addChild(_new);
      }

      this.drawTemp(isBest);
    }
  }, {
    key: 'drawTemp',
    value: function drawTemp(isBest) {
      var _this4 = this;

      var c = _config2.default.END_PANEL,
          scoreBoardArgs = this._scoreBoardArgs,
          bgArgs = this._bgArgs,
          expandButtonArgs = this._expandButtonArgs,
          upIconArgs = this._upIconArgs,
          leaderBoardArgs = this._leaderBoardArgs,
          leaderBoardItemArgs = this._leaderBoardItemArgs,
          leaderBoardRankArgs = this._leaderBoardRankArgs,
          leaderBoardAvatarArgs = this._leaderBoardAvatarArgs,
          leaderBoardNicknameArgs = this._leaderBoardNicknameArgs,
          leaderBoardScoreArgs = this._leaderBoardScoreArgs;

      var userInfo = this._friendScores.sort(function (a, b) {
        return b.score_info[0].score - a.score_info[0].score;
      });

      var myNickName = _utils.Network._userInfo.nickName;
      var myOldIndex = userInfo.findIndex(function (user) {
        return user.nickname === myNickName;
      });
      var myUserInfo = userInfo[myOldIndex];
      var myBestScore = myUserInfo.score_info[0].score;

      var hasRankUp = false,
          myCurrentIndex = myOldIndex,
          rankItems = void 0;

      // userInfo[myOldIndex].score_info[1].score |= this._starScore
      // if (Song.songSet[this._world.songConfig.music_id].score_info_list[1] !== undefined) {
      //   Song.songSet[this._world.songConfig.music_id].score_info_list[1].score |= this._starScore
      // }

      // 先更新星星数
      myUserInfo.score_info[1].score |= this._starScore;
      if (this._starScore === 7) {
        console.log('Bg WIDTH', bgArgs, scoreBoardArgs);
        this._scoreBoard.graphics.drawTexture(this._world.assets.colorBg, (scoreBoardArgs.WIDTH - bgArgs.WIDTH) / 2, bgArgs.Y, bgArgs.WIDTH, bgArgs.HEIGHT);
      }

      // 成绩提升
      if (this._world.score > myBestScore) {
        // 更新排行榜中的自己分数，然后重新排序
        userInfo[myOldIndex].score_info[0].score = this._world.score;
        // userInfo[myOldIndex].score_info[1].score = this._world.ball.distance - (this._world.preparationDistance || 0)

        userInfo.sort(function (a, b) {
          return b.score_info[0].score - a.score_info[0].score;
        });

        myCurrentIndex = userInfo.findIndex(function (user) {
          return user.nickname === myNickName;
        });
        while (myCurrentIndex > 0 && userInfo[myCurrentIndex].score_info[0].score >= userInfo[myCurrentIndex - 1].score_info[0].score) {
          var temp = userInfo[myCurrentIndex];
          userInfo[myCurrentIndex] = userInfo[myCurrentIndex - 1];
          userInfo[myCurrentIndex - 1] = temp;
          myCurrentIndex--;
        }

        // 更新个人最高分到本地缓存
        // Storage.updateMyScore(this._world.songConfig.music_id, userInfo[myCurrentIndex])
        // Song.songSet[this._world.songConfig.music_id].score_info_list[0] = userInfo[myCurrentIndex].score_info[0]
        // Song.songSet[this._world.songConfig.music_id].score_info_list[1].score |= userInfo[myCurrentIndex].score_info[1]
        // myUserInfo.score_info[0].score = myBestScore
      }
      _utils.Score.setMyScore(this._world.songConfig.id, myUserInfo.score_info);
      _utils.Network.settlement(this._world.songConfig.id, this._world.score, this._starScore);
      _utils.Network.globalSettlement(_utils.Score.stars);

      if (myCurrentIndex < myOldIndex) {
        console.log('rank up from ' + (myOldIndex + 1) + ' to ' + (myCurrentIndex + 1));
        hasRankUp = true;
      }

      if (myCurrentIndex > 0) {
        // 如果排名不是第一，取自己和自己前面一位
        rankItems = userInfo.slice(myCurrentIndex - 1, myCurrentIndex + 1);
        rankItems[0].tempIndex = myCurrentIndex;
        rankItems[1].tempIndex = myCurrentIndex + 1;
        if (hasRankUp) {
          rankItems[1].rankUp = true;
        }
      } else {
        // 否则取自己和自己后面一位
        rankItems = userInfo.slice(0, 2);
        rankItems[0].tempIndex = 1;
        if (rankItems.length >= 2) {
          rankItems[1].tempIndex = 2;
        }
        if (hasRankUp) {
          rankItems[0].rankUp = true;
        }
      }

      var expandButton = new Laya.Sprite();
      expandButton.pos(expandButtonArgs.X, expandButtonArgs.Y);
      expandButton.size(expandButtonArgs.WIDTH, expandButtonArgs.HEIGHT);
      expandButton.graphics.drawTexture(this._world.assets.expand[this._world.level], 0, 0, expandButtonArgs.WIDTH, expandButtonArgs.HEIGHT);
      this._panel.addChild(expandButton);

      this._scoreBoard.on(Laya.Event.MOUSE_UP, this, function () {
        _this4._pm.navigateTo(_leaderBoard2.default, userInfo);
      });

      var rankIconOffset = hasRankUp ? upIconArgs.WIDTH + upIconArgs.X : 0;
      var leaderBoardItemBaseY = (0, _utils.getScaleArgs)(c.LEADERBOARD_ITEM_BASE_Y).Y;

      this._rankItems = rankItems.map(function (_ref, index) {
        var tempIndex = _ref.tempIndex,
            headimg = _ref.headimg,
            nickname = _ref.nickname,
            score_info = _ref.score_info,
            rankUp = _ref.rankUp;

        var rankItem = new Laya.Sprite();
        rankItem.pos(0, leaderBoardItemBaseY + index * leaderBoardItemArgs.HEIGHT + (index + 1) * leaderBoardItemArgs.Y);
        rankItem.width = scoreBoardArgs.WIDTH;

        var avatar = new Laya.Sprite();
        // avatar.width = avatar.height = config.END_PANEL.LEADER_BOARD_AVATAR_WIDTH
        avatar.pos(rankIconOffset + leaderBoardRankArgs.WIDTH, (leaderBoardItemArgs.HEIGHT - leaderBoardAvatarArgs.RADIUS) / 2);
        avatar.loadImage(headimg, 0, 0, leaderBoardAvatarArgs.RADIUS, leaderBoardAvatarArgs.RADIUS, Laya.Handler.create(_this4, function () {
          _this4._avatarMask.forEach(function (path) {
            avatar.graphics.drawPath(-1, -1, path, {
              fillStyle: '#303036'
            });
          });
        }));

        //const mask = new Laya.Sprite()
        //mask.pos(rankIconOffset + leaderBoardRankArgs.WIDTH, (leaderBoardItemArgs.HEIGHT - leaderBoardAvatarArgs.RADIUS) / 2)
        //const r = leaderBoardAvatarArgs.RADIUS / 2
        //mask.graphics.drawCircle(r, r, r, '#FFFFFF')
        //avatar.mask = mask
        rankItem.addChild(avatar);

        if (rankUp) {
          var rankUpSp = new Laya.Sprite();
          rankUpSp.pos(0, 0);
          rankUpSp.graphics.drawTexture(_this4._world.assets.upRes, upIconArgs.X, upIconArgs.X, upIconArgs.WIDTH, upIconArgs.HEIGHT);
          rankItem.addChild(rankUpSp);
        }

        var rankText = new Laya.Text();
        Object.assign(rankText, textConfig);
        rankText.size(leaderBoardRankArgs.WIDTH, leaderBoardItemArgs.HEIGHT);
        rankText.pos(rankIconOffset, 0);
        rankText.color = _this4._world.mainColor;
        rankText.text = tempIndex;
        rankItem.addChild(rankText);

        var nicknameText = new Laya.Text();
        Object.assign(nicknameText, textConfig);
        nicknameText.size(leaderBoardNicknameArgs.WIDTH, leaderBoardItemArgs.HEIGHT);
        nicknameText.align = 'left';
        nicknameText.color = 'rgba(255, 255, 255, 0.5)';
        nicknameText.pos(rankIconOffset + leaderBoardRankArgs.WIDTH + leaderBoardAvatarArgs.RADIUS + leaderBoardNicknameArgs.X, 0);
        nicknameText.text = nickname;

        while (nicknameText.textWidth > nicknameText.width) {
          nickname = nickname.substr(0, nickname.length - 1);
          nicknameText.text = nickname + '...';
        }
        rankItem.addChild(nicknameText);

        var scoreText = new Laya.Text();
        Object.assign(scoreText, textConfig);
        scoreText.size(leaderBoardScoreArgs.WIDTH, leaderBoardItemArgs.HEIGHT);
        scoreText.align = 'right';
        scoreText.color = _this4._world.mainColor;
        scoreText.pos(leaderBoardItemArgs.WIDTH - leaderBoardScoreArgs.WIDTH, 0);
        scoreText.text = score_info[0].score;
        rankItem.addChild(scoreText);

        if (nickname === _utils.Network._userInfo.nickName && isBest) {
          rankText.color = scoreText.color = _config2.default.END_PANEL.NEW.COLOR;
        }

        _this4._scoreBoard.addChild(rankItem);

        return rankItem;
      });
    }
  }, {
    key: '_drawLeaderBoard',
    value: function _drawLeaderBoard() {
      var _this5 = this;

      var c = _config2.default.END_PANEL;
      var leaderBoardArgs = this._leaderBoardArgs;
      var scoreItemArgs = this._scoreItemArgs;
      var scoreItemMarginArgs = this._scoreItemMarginArgs;
      var scoreItemDescArgs = this._scoreItemDescArgs;

      var leaderBoard = new Laya.Sprite();
      this._panel.addChild(leaderBoard);

      leaderBoard.pos((_config2.default.SCREEN_WIDTH - leaderBoardArgs.WIDTH) / 2, leaderBoardArgs.Y);
      (0, _utils.drawRoundedRect)(leaderBoard, 0, 0, leaderBoardArgs.WIDTH, leaderBoardArgs.HEIGHT, leaderBoardArgs.RADIUS, {
        fillStyle: c.BOARD_COLOR
      });

      var subItems = [{
        value: this._world.perfectCoin,
        desc: '完美',
        color: 'rgb(0, 176, 240)'
      }, {
        value: this._world.goodCoin,
        desc: '良好',
        color: 'rgb(171, 223, 125)'
      }, {
        value: this._world.missedCoin,
        desc: '漏击',
        color: 'rgb(255, 198, 155)'
      }];

      var centerX = scoreItemArgs.X;
      subItems.forEach(function (item) {
        var item1 = (0, _utils.createTextSprite)(_this5._panel, scoreItemArgs);
        item1.x = centerX - scoreItemArgs.WIDTH / 2;
        item1.text = item.value;
        item1.color = item.color;
        item1.fontSize = c.SCORE_ITEM.SIZE;

        var item2 = (0, _utils.createTextSprite)(_this5._panel, scoreItemDescArgs);
        item2.x = centerX - scoreItemArgs.WIDTH / 2;
        item2.width = scoreItemArgs.WIDTH;
        item2.color = _this5._world.mainColor;
        item2.text = item.desc;
        item2.fontSize = c.SCORE_ITEM_DESC.SIZE;

        centerX += scoreItemMarginArgs.WIDTH;
      });
    }
  }]);

  return EndPanel;
}(_panel2.default);

exports.default = EndPanel;

var FireWork = function () {
  function FireWork() {
    _classCallCheck(this, FireWork);
  }

  _createClass(FireWork, null, [{
    key: 'init',

    // panel: class EndPanel Object
    value: function init(panel) {
      // this.deg90 = Math.PI / 2
      // this.negDeg90 = -this.deg90

      this._panel = panel;
      this._world = panel._world;

      // 0.01m/ms * 16ms = 0.16
      // which would be used to simulate flat projectile motion
      this._gravityVec = new _utils.Point(0, 0.16);

      var screenWidth = _config2.default.SCREEN_WIDTH;
      var positions = [screenWidth / 4, screenWidth / 2, screenWidth / 4 * 3];
      this._fireWorks = this.generateFireWorks(positions, 40);
    }
  }, {
    key: 'generateFireWorks',
    value: function generateFireWorks(fireWorkPosX, num) {
      var result = [];
      var y = this._panel._scoreBoardBestScoreArgs.Y;
      for (var count = fireWorkPosX.length - 1; count >= 0; count--) {
        var fireWork = [];
        var fog = [];
        for (var i = 0; i < num; i++) {
          var radius = new _utils.Point(0, -(0, _utils.random)(30, 50));
          var position = radius.ROTATE((0, _utils.random)(-90, 90) / 180 * Math.PI);

          var vec = position.clone.normalize().MUL((0, _utils.random)(2, 10));
          var poly = this.getPoly((0, _utils.random)(10, 20));
          var frames = (0, _utils.random)(90, 150);

          fireWork.push({
            radius: radius,
            position: position,
            vec: vec,
            poly: poly,
            frames: frames,
            color: _config2.default.COIN_COLOR[(0, _utils.srandom)(_config2.default.COIN_COLOR.length)]
          });
        }

        // for (let i = 0; i < 10; i++) {
        //   const radius = new Point(0, -random(30, 50))
        //   const position = radius.ROTATE(random(0, 360) / 180 * Math.PI)

        //   const vec = position.clone.normalize().MUL(random(6, 10))
        //   const poly = this.getPoly(random(10, 20))
        //   const frames = random(20, 30)

        //   fog.push({
        //     position,
        //     vec,
        //     poly,
        //     frames,
        //     size: random(10, 20)
        //   })

        // }

        var fireWorkSp = new Laya.Sprite();
        fireWorkSp.pos(fireWorkPosX[count] + (0, _utils.random)(-50, 50), y + (0, _utils.random)(-50, 50));

        this._panel._panel.addChild(fireWorkSp);

        result.push({ fog: fog, fireWork: fireWork, fireWorkSp: fireWorkSp });
      }
      return result;
    }
  }, {
    key: 'getPoly',
    value: function getPoly(halfAxisLength) {
      return [0, -halfAxisLength, halfAxisLength, 0, 0, halfAxisLength, -halfAxisLength, 0];
    }
  }, {
    key: 'play',
    value: function play() {
      this._bindedUpdate = this.update.bind(this);
      _utils.emitter.on('game-loop', this._bindedUpdate);
    }
  }, {
    key: 'stop',
    value: function stop() {
      _utils.emitter.removeListener('game-loop', this._bindedUpdate);
    }
  }, {
    key: 'update',
    value: function update() {
      var fireWorks = this._fireWorks;
      if (!fireWorks.length) {
        this.stop();
      }

      for (var fireWorkIndex = fireWorks.length - 1; fireWorkIndex >= 0; fireWorkIndex--) {
        var fireWorkItem = fireWorks[fireWorkIndex];
        var fog = fireWorkItem.fog,
            fireWork = fireWorkItem.fireWork,
            fireWorkSp = fireWorkItem.fireWorkSp;


        if (!fireWork.length) {
          fireWorks.splice(fireWorkIndex, 1);
          continue;
        }

        fireWorkSp.graphics.clear();

        // const asset = this._world.assets.fog
        // for (let i = fog.length - 1; i >= 0; i--) {
        //   const item = fog[i]

        //   if (!item.frames) {
        //     fog.splice(i, 1)
        //     continue
        //   }

        //   item.frames--
        //   item.size += random(2, 4)
        //   const { position, vec, poly, color } = item

        //   position.SELF_ADD(vec)

        //   fireWorkSp.graphics.drawTexture(asset, position.x, position.y, item.size, item.size)
        // }

        for (var i = fireWork.length - 1; i >= 0; i--) {
          var item = fireWork[i];

          if (!item.frames) {
            fireWork.splice(i, 1);
            continue;
          }

          item.frames--;

          var position = item.position,
              vec = item.vec,
              poly = item.poly,
              color = item.color;


          position.SELF_ADD(vec);
          vec.SELF_ADD(this._gravityVec);

          fireWorkSp.graphics.drawPoly(position.x, position.y, poly, color);
        }
      }
    }
  }]);

  return FireWork;
}();

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// const textConfig = {
//   font: 'Helvetica',
//   width: listArgs.WIDTH,
//   align: 'left',
//   valign: 'middle',
//   color: '#FFFFFF',
//   fontSize: 48,
//   zOrder: 100,
// }

var ListItem = function (_Laya$Box) {
  _inherits(ListItem, _Laya$Box);

  function ListItem() {
    _classCallCheck(this, ListItem);

    var _this = _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call(this));

    var listArgs = _this.constructor._listView._listArgs;
    var itemArgs = _this.constructor._listView._itemArgs;
    var titleArgs = _this.constructor._listView._titleArgs;
    var subtitleArgs = _this.constructor._listView._subtitleArgs;
    var starArgs = _this.constructor._listView._starArgs;

    var textConfig = _this.constructor._listView._textConfig;

    _this.size(listArgs.WIDTH, itemArgs.HEIGHT + itemArgs.Y);
    (0, _utils.drawRoundedRect)(_this, 0, 0, listArgs.WIDTH, itemArgs.HEIGHT, itemArgs.RADIUS, { fillStyle: 'rgba(61,62,71,0.59)' });
    // this.graphics.drawPath(0, 0, [
    //   ['moveTo', c.BORDER_RADIUS, 0],
    //   ['lineTo', c.WIDTH - c.BORDER_RADIUS, 0],
    //   ['arcTo', c.WIDTH, 0, c.WIDTH, c.BORDER_RADIUS, c.BORDER_RADIUS],
    //   ['lineTo', c.WIDTH, c.LIST_ITEM_HEIGHT - c.BORDER_RADIUS],
    //   ['arcTo', c.WIDTH, c.LIST_ITEM_HEIGHT, c.WIDTH - c.BORDER_RADIUS, c.LIST_ITEM_HEIGHT, c.BORDER_RADIUS],
    //   ['lineTo', c.BORDER_RADIUS, c.LIST_ITEM_HEIGHT],
    //   ['arcTo', 0, c.LIST_ITEM_HEIGHT, 0, c.LIST_ITEM_HEIGHT - c.BORDER_RADIUS, c.BORDER_RADIUS],
    //   ['lineTo', 0, c.BORDER_RADIUS],
    //   ['arcTo', 0, 0, c.BORDER_RADIUS, 0, c.BORDER_RADIUS],
    //   ['closePath']
    // ], {
    //   fillStyle: 'rgba(61,62,71,0.59)'
    // })

    _this.titleText = new Laya.Text();
    Object.assign(_this.titleText, textConfig);
    _this.titleText.pos(titleArgs.X, titleArgs.Y);
    _this.titleText.overflow = 'hidden';
    _this.addChild(_this.titleText);

    _this.subtitleText = new Laya.Text();
    Object.assign(_this.subtitleText, textConfig);
    _this.subtitleText.overflow = 'hidden';
    _this.subtitleText.pos(subtitleArgs.X, subtitleArgs.Y);
    _this.subtitleText.color = _this.constructor._world.mainColor;
    _this.addChild(_this.subtitleText);

    _this.state = new Laya.Sprite();
    _this.state.pos(0, starArgs.Y);
    _this.addChild(_this.state);
    return _this;
  }

  _createClass(ListItem, [{
    key: 'setStar',
    value: function setStar(starScore) {
      var world = this.constructor._world;
      var starTexture = world.assets.starKindled[world.level];
      var star = this.state;

      var starArgs = this.constructor._listView._starArgs;
      var starX = this.constructor._listView._starX;

      star.graphics.clear();
      starX.forEach(function (X, index) {
        if (starScore & 1 << index) {
          star.graphics.drawTexture(starTexture, X, 0, starArgs.RADIUS, starArgs.RADIUS);
        } else {
          star.graphics.drawTexture(world.assets.starUnkindled, X, 0, starArgs.RADIUS, starArgs.RADIUS);
        }
      });
    }
  }, {
    key: 'setLock',
    value: function setLock() {
      var world = this.constructor._world;
      var lock = this.state;
      var lockArgs = this.constructor._listView._lockArgs;

      lock.graphics.clear();
      lock.graphics.drawTexture(world.assets.lock[world.level], lockArgs.X, lockArgs.Y, lockArgs.WIDTH, lockArgs.HEIGHT);
    }
  }]);

  return ListItem;
}(Laya.Box);

var ListView = function () {
  function ListView() {
    _classCallCheck(this, ListView);
  }

  _createClass(ListView, null, [{
    key: 'init',
    value: function init(world, panel) {
      var c = _config2.default.SELECT_PANEL.LIST_VIEW;
      this._listArgs = (0, _utils.getScaleArgs)(c.LIST);
      this._itemArgs = (0, _utils.getScaleArgs)(c.ITEM);
      this._titleArgs = (0, _utils.getScaleArgs)(c.TITLE);
      this._subtitleArgs = (0, _utils.getScaleArgs)(c.SUBTITLE);
      this._starArgs = (0, _utils.getScaleArgs)(c.STAR);
      this._starX = c.LIST_ITEM_STAR_X.map(function (X) {
        return (0, _utils.getScaleArgs)({ X: X }).X;
      });
      this._lockArgs = (0, _utils.getScaleArgs)(c.LOCK);
      this._gradientArgs = (0, _utils.getScaleArgs)(c.GRADIENT);

      this._textConfig = {
        font: 'Helvetica',
        width: this._listArgs.WIDTH,
        align: 'left',
        valign: 'middle',
        color: '#FFFFFF',
        fontSize: 48,
        zOrder: 100
      };

      this._world = world;
      this._panel = panel;

      ListItem._world = world;
      ListItem._listView = this;
      this.drawList();

      var gradientArgs = this._gradientArgs;

      this._gradient = Laya.Browser.context.createLinearGradient(0, _config2.default.SCREEN_HEIGHT, 0, gradientArgs.Y);
      this._gradient.addColorStop(0, c.GRADIENT_COLOR_START);
      this._gradient.addColorStop(1, c.GRADIENT_COLOR_END);

      this._gradientSp = new Laya.Sprite();
      this._gradientSp.pos(0, gradientArgs.Y);
      this._gradientSp.graphics.drawRect(0, 0, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT - gradientArgs.Y, this._gradient);
      this._gradientSp.visible = false;
      this._gradientSp.zOrder = 9;
      panel.addChild(this._gradientSp);

      return this._list;
    }
  }, {
    key: 'show',
    value: function show() {
      // this.changeState(true)
      this.init(this._world, this._panel);
      this._panel.addChild(this._list);
    }
  }, {
    key: 'hide',
    value: function hide() {
      // this.changeState(false)
      this._list.destroy();
      this._gradientSp.destroy();
    }
  }, {
    key: 'changeState',
    value: function changeState(state) {
      this._state = state;
      this._list.visible = this._list.mouseEnabled = state;
      this._gradientSp.visible = state;
    }
  }, {
    key: 'drawList',
    value: function drawList() {
      this._list = new Laya.List();
      this._list.itemRender = ListItem;

      // 水平方向单元格数量
      this._list.repeatX = 1;
      // 竖直方向
      this._list.repeatY = 5;

      this._list.pos(this._listArgs.X, this._listArgs.Y);

      this._list.vScrollBarSkin = "";

      this._list.selectEnable = true;
      this._list.selectHandler = new Laya.Handler(this, this.onSelect);
      this._list.renderHandler = new Laya.Handler(this, this.updateItem);
    }
  }, {
    key: 'setData',
    value: function setData(_ref) {
      var data = _ref.data,
          prevPerfect = _ref.prevPerfect,
          prevChapterLength = _ref.prevChapterLength;

      // if (prevPerfect >= 0 && prevChapterLength) {
      //   const unlockLimit = Math.floor(prevChapterLength / 2)
      //   if (prevPerfect < unlockLimit) {
      //     data.forEach(d => d.locked = true)
      //   } else {
      //     data.forEach(d => d.locked = false)
      //   }
      // }

      var starToUnlock = data.starToUnlock;
      var currentStars = _utils.Score.stars;
      if (currentStars >= starToUnlock) {
        data.forEach(function (d) {
          d.locked = false;
        });
      } else {
        data.forEach(function (d) {
          d.locked = true;
        });
      }

      this._dataSource = this._list.array = data;
    }
  }, {
    key: 'updateItem',
    value: function updateItem(cell, index) {
      cell.titleText.text = cell._dataSource.title;
      cell.subtitleText.text = cell._dataSource.singer_name;
      cell.subtitleText.color = this._world.mainColor;

      if (cell._dataSource.locked) {
        cell.setLock();
      } else {
        var score = _utils.Score.getMyScore(cell._dataSource.id);
        var s = 0;
        if (score && score[1]) {
          s = score[1].score;
        } else {
          s = 0;
        }
        cell.setStar(s);
      }
    }
  }, {
    key: 'onSelect',
    value: function onSelect(index) {
      this.selectHandler(index);
    }
  }]);

  return ListView;
}();

exports.default = ListView;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _panel = __webpack_require__(7);

var _panel2 = _interopRequireDefault(_panel);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LiveEndPanel = function (_Panel) {
  _inherits(LiveEndPanel, _Panel);

  function LiveEndPanel() {
    _classCallCheck(this, LiveEndPanel);

    return _possibleConstructorReturn(this, (LiveEndPanel.__proto__ || Object.getPrototypeOf(LiveEndPanel)).apply(this, arguments));
  }

  _createClass(LiveEndPanel, null, [{
    key: 'onLoad',
    value: function onLoad(_ref) {
      var _this2 = this;

      var info = _ref.info;

      console.log('live end panel', info);
      var c = _config2.default.LiveEndPanel;

      var roundedRectArgs = (0, _utils.getScaleArgs)(c.ROUNDED_RECT);
      var avatarArgs = (0, _utils.getScaleArgs)(c.AVATAR);
      var nicknameArgs = (0, _utils.getScaleArgs)(c.NICK_NAME);
      var playArgs = (0, _utils.getScaleArgs)(c.PLAY);

      var songNameArgs = (0, _utils.getScaleArgs)(c.SONG_NAME);
      var songName = (0, _utils.createTextSprite)(this._panel, songNameArgs);
      //songName.text = this._world.songConfig.title
      songName.fontSize = c.SONG_NAME.SIZE;

      var border = new Laya.Sprite();
      this._panel.addChild(border);
      (0, _utils.drawRoundedRect)(border, 0, 0, roundedRectArgs.WIDTH, roundedRectArgs.HEIGHT, roundedRectArgs.RADIUS, { fillStyle: (0, _utils.alphaColor)(c.ROUNDED_RECT.COLOR, c.ROUNDED_RECT.ALPHA) }, null);
      border.pos(roundedRectArgs.X, roundedRectArgs.Y);

      var scoreArgs = (0, _utils.getScaleArgs)(c.SCORE);
      var score = (0, _utils.createTextSprite)(this._panel, scoreArgs);
      score.text = info.score;
      score.fontSize = c.SONG_NAME.SIZE;

      var bestArgs = (0, _utils.getScaleArgs)(c.BEST_SCORE);
      var bestScore = (0, _utils.createTextSprite)(this._panel, bestArgs);
      bestScore.text = c.BEST_SCORE.PREFIX + Math.max(info.score, info.myBestScore);
      bestScore.color = this._world.mainColor;
      bestScore.fontSize = c.BEST_SCORE.SIZE;

      var avatar = new Laya.Sprite();
      this._panel.addChild(avatar);
      avatar.loadImage(info.avatarUrl, 0, 0, avatarArgs.WIDTH, avatarArgs.WIDTH);

      var nickName = new Laya.Text();
      this._panel.addChild(nickName);
      nickName.fontSize = c.NICK_NAME.SIZE;
      nickName.height = nicknameArgs.HEIGHT;
      nickName.valign = 'middle';
      nickName.color = (0, _utils.alphaColor)('#FFFFFF', c.NICK_NAME.ALPHA);
      nickName.text = info.nickName;
      var bounds = nickName.getBounds();
      var totalWidth = avatarArgs.WIDTH + 30 + bounds.width;
      console.log(totalWidth, bounds);
      avatar.pos((_config2.default.SCREEN_WIDTH - totalWidth) / 2, avatarArgs.Y);
      nickName.pos(avatar.x + avatarArgs.WIDTH + 30, nicknameArgs.Y);

      var playBorder = new Laya.Sprite();
      this._panel.addChild(playBorder);
      (0, _utils.drawRoundedRect)(playBorder, 0, 0, playArgs.WIDTH, playArgs.HEIGHT, playArgs.RADIUS, null, { strokeStyle: this._world.mainColor, lineWidth: c.PLAY.BORDER_WIDTH });
      playBorder.pos(playArgs.X, playArgs.Y);
      playBorder.size(playArgs.WIDTH, playArgs.HEIGHT);
      playBorder.on(Laya.Event.MOUSE_UP, this, function () {
        _this2._world.mode = _config2.default.GAME_MODE.BACKGROUND;
        _utils.Live.end();
        _panelManager2.default.redirectTo(_selectPanel2.default);
      });

      var play = (0, _utils.createTextSprite)(this._panel, playArgs);
      play.text = c.PLAY.TEXT;
      play.size(playArgs.WIDTH, playArgs.HEIGHT);
      play.fontSize = c.PLAY.SIZE;
      play.color = this._world.mainColor;
    }
  }]);

  return LiveEndPanel;
}(_panel2.default);

exports.default = LiveEndPanel;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _utils = __webpack_require__(1);

var _bar = __webpack_require__(11);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SELECT_PANEL.SLIDE_PAGINATION.ITEM_WIDTH,
  height: 100,
  valign: 'bottom',
  align: 'center',
  color: '#FFFFFF',
  fontSize: 48,
  zOrder: 100
};

var SlidePagination = function () {
  function SlidePagination() {
    _classCallCheck(this, SlidePagination);
  }

  _createClass(SlidePagination, null, [{
    key: 'init',
    value: function init(world, panel) {
      this._world = world;
      this._panel = panel;

      this.generateItemAttrs();
      this.drawSlidePagination();
      this.drawListIcon();
      this.initTouchRange();
    }
  }, {
    key: 'generateItemAttrs',
    value: function generateItemAttrs() {
      var c = _config2.default.SELECT_PANEL.SLIDE_PAGINATION;

      this._itemArgs = (0, _utils.getScaleArgs)({
        WIDTH: c.ITEM_WIDTH + c.ITEM_MARGIN,
        Y: c.ITEM_Y,
        X: c.ITEM_X_BASE
      });

      this._textWidth = (0, _utils.getScaleArgs)({ WIDTH: c.ITEM_WIDTH }).WIDTH;

      var median = _song2.default.chapters.length - 1;
      var itemAttrNumbers = median * 2 + 1;
      var itemAttrs = [];

      for (var i = 0; i < itemAttrNumbers; i++) {
        var x = (i - median) * this._itemArgs.WIDTH + this._itemArgs.X;
        var distanceToMidian = Math.abs(i - median);
        var y = this._itemArgs.Y,
            alpha = void 0,
            fontSize = void 0;
        if (distanceToMidian > 1) {
          alpha = c.THIRD_ITEM.ALPHA;
          fontSize = c.THIRD_ITEM.SIZE;
        } else if (distanceToMidian > 0) {
          alpha = c.SECONDARY_ITEM.ALPHA;
          fontSize = c.SECONDARY_ITEM.SIZE;
        } else {
          alpha = c.PRIMARY_ITEM.ALPHA;
          fontSize = c.PRIMARY_ITEM.SIZE;
        }

        fontSize = (0, _utils.getScaleArgs)({ RADIUS: fontSize }).RADIUS;

        itemAttrs.push({
          x: x,
          y: y,
          alpha: alpha,
          fontSize: fontSize
        });
      }
      this._itemTotalWidth = this._itemArgs.WIDTH;
      this._median = median;
      this._itemAttrs = itemAttrs;
    }
  }, {
    key: 'drawSlidePagination',
    value: function drawSlidePagination() {
      var _this = this,
          _panel;

      var c = _config2.default.SELECT_PANEL.SLIDE_PAGINATION;

      this._songCntArgs = (0, _utils.getScaleArgs)(c.SONG_CNT);
      var songCnt = createTextSp();

      songCnt.width = _config2.default.SCREEN_WIDTH;
      songCnt.pos(0, this._songCntArgs.Y);
      this._songCnt = songCnt;
      this._panel.addChild(songCnt);

      this._underlineArgs = (0, _utils.getScaleArgs)(c.UNDERLINE);
      var underline = new Laya.Sprite();
      var path = (0, _bar.generateBackgroundBar)(this._underlineArgs.WIDTH, this._underlineArgs.HEIGHT);
      underline.pos(this._underlineArgs.X, this._underlineArgs.Y);
      this._underline = underline;
      this._underlinePath = path;
      this._panel.addChild(underline);

      this._slideItems = _song2.default.chapters.map(function (chapter, index) {
        var sp = createTextSp();
        sp.text = '篇章' + (index + 1);
        sp.width = _this._textWidth;

        return sp;
      });

      (_panel = this._panel).addChildren.apply(_panel, _toConsumableArray(this._slideItems));
    }
  }, {
    key: 'drawListIcon',
    value: function drawListIcon() {
      var _this2 = this;

      this._listIconArgs = (0, _utils.getScaleArgs)(_config2.default.SELECT_PANEL.LIST_ICON);

      this._listIcon = new Laya.Sprite();
      // this._listIcon.graphics.drawCircle(c.RADIUS, c.RADIUS, c.RADIUS, c.BACKGROUND_COLOR)
      this._listIcon.pos(this._listIconArgs.X, this._listIconArgs.Y);
      this._listIcon.graphics.drawTexture(this._world.assets.settingRes, 0, 0, this._listIconArgs.HEIGHT, this._listIconArgs.HEIGHT);
      this._listIcon.zOrder = 99;

      this._listIconClick = new Laya.Sprite();
      this._listIconClick.size(this._listIconArgs.HEIGHT * 3, this._listIconArgs.HEIGHT * 3);
      this._listIconClick.pos(this._listIconArgs.X - this._listIconArgs.HEIGHT, this._listIconArgs.Y - this._listIconArgs.HEIGHT);
      this._listIconClick.on(Laya.Event.MOUSE_DOWN, this, function () {
        _this2._mode = _this2._mode === 'list' ? 'slide' : 'list';
      });

      this._mode = 'slide';
      this._panel.addChild(this._listIcon);
      this._panel.addChild(this._listIconClick);
    }
  }, {
    key: 'initTouchRange',
    value: function initTouchRange() {
      this._touchRangeArgs = (0, _utils.getScaleArgs)(_config2.default.SELECT_PANEL.SLIDE_PAGINATION.TOUCH_RANGE);

      this._touchRange = new Laya.Sprite();
      this._touchRange.pos(0, this._touchRangeArgs.Y);
      this._touchRange.size(this._touchRangeArgs.WIDTH, this._touchRangeArgs.HEIGHT);
      this._touchRange.on(Laya.Event.MOUSE_DOWN, this, this.onTouchStartHandler);
      this._panel.on(Laya.Event.MOUSE_MOVE, this, this.onTouchMoveHandler);
      this._panel.on(Laya.Event.MOUSE_UP, this, this.onTouchEndHandler);

      this._panel.addChild(this._touchRange);
    }
  }, {
    key: 'onTouchStartHandler',
    value: function onTouchStartHandler(e) {
      this._touchOrigin = e.stageX;
      this._touchStartTime = Date.now();
    }
  }, {
    key: 'onTouchMoveHandler',
    value: function onTouchMoveHandler(e) {
      var _this3 = this;

      if (!this._touchOrigin) {
        return;
      }

      var offsetX = e.stageX - this._touchOrigin;

      // this._slideItems.forEach((item, index) => {
      //   item.x = this._renderData[index].x + offsetX
      // })

      var tempStartIndex = void 0,
          tempEndIndex = void 0;
      if (offsetX > 0) {
        tempEndIndex = Math.ceil(offsetX / this._itemTotalWidth);
        tempStartIndex = tempEndIndex - 1;
      } else {
        tempEndIndex = Math.floor(offsetX / this._itemTotalWidth);
        tempStartIndex = tempEndIndex + 1;
      }

      var tempStartData = this.getAttrSlice(tempStartIndex);
      var tempEndData = this.getAttrSlice(tempEndIndex);

      if (tempStartData.length < 5 || tempEndData.length < 5) {
        return;
      }

      var distanceRate = Math.abs(offsetX - tempStartIndex * this._itemTotalWidth) / this._itemTotalWidth;

      this._slideItems.forEach(function (item, index) {
        item.x = _this3._renderData[index].x + offsetX;

        var startState = tempStartData[index],
            endState = tempEndData[index];
        // if (startState.alpha > endState.alpha) {
        item.alpha = startState.alpha - (startState.alpha - endState.alpha) * distanceRate;
        item.fontSize = startState.fontSize - (startState.fontSize - endState.fontSize) * distanceRate;
        // }
      });
    }
  }, {
    key: 'onTouchEndHandler',
    value: function onTouchEndHandler(e) {
      if (!this._touchOrigin) {
        return;
      }

      var time = Date.now() - this._touchStartTime;
      var offsetX = e.stageX - this._touchOrigin;

      if (time < 150 && Math.abs(offsetX) < 100) {
        var offset = this._itemArgs.X - e.stageX;
        var tempEndIndex = Math.round(offset / this._itemTotalWidth);
        this._index -= tempEndIndex;
      } else {
        this._touchOrigin = null;

        var _tempEndIndex = Math.round(offsetX / this._itemTotalWidth);

        // let tempEndIndex
        // if (offsetX > 0) {
        //   tempEndIndex = Math.ceil(offsetX / this._itemTotalWidth)
        // } else {
        //   tempEndIndex = Math.floor(offsetX / this._itemTotalWidth)
        // }

        this._index -= _tempEndIndex;
      }
    }
  }, {
    key: 'setData',
    value: function setData(data) {
      this._dataSource = data;

      // this._index = this._currentIndex = this._world.level
      this._index = this._currentIndex = this._world.level;
    }
  }, {
    key: 'switchLevel',
    value: function switchLevel(index) {
      var _this4 = this;

      var mainColor = this._world.mainColor;

      // update title
      this._songCnt.text = this._dataSource[index].length + '首歌曲';
      this._songCnt.color = mainColor;

      // update underline
      this._underline.graphics.clear();
      this._underline.graphics.drawPath(0, 0, this._underlinePath, {
        fillStyle: mainColor
      });

      // update slide items
      this._renderData = this.getAttrSlice(0);
      this._renderData.forEach(function (attr, index) {
        var slideItem = _this4._slideItems[index];

        Object.assign(slideItem, attr);
      });
    }
  }, {
    key: 'getAttrSlice',
    value: function getAttrSlice(index) {
      return this._itemAttrs.slice(this._renderIndex + index, this._renderIndex + index + this._slideItems.length);
    }
  }, {
    key: '_mode',
    get: function get() {
      return this._viewMode;
    },
    set: function set(mode) {
      this._viewMode = mode;

      this._listIcon.graphics.clear();
      var size = this._listIconArgs.HEIGHT;

      if (typeof this.modeChangeCb === 'function') {
        this.modeChangeCb(mode);
      }

      if (mode === 'list') {
        this._listIcon.graphics.drawTexture(this._world.assets.list_highlight, 0, 0, size, size);
        // this._listIcon.graphics.drawCircle(size / 2, size / 2, size / 2, 'rgba(0, 0, 0, 0.4)')
      } else {
        this._listIcon.graphics.drawTexture(this._world.assets.list, 0, 0, size, size);
      }
    }
  }, {
    key: '_index',
    set: function set(index) {
      if (index < 0) {
        index = 0;
      } else if (index > this._median) {
        index = this._median;
      }

      // if (this._currentIndex === index) {
      //   return
      // }

      this._currentIndex = index;
      this._renderIndex = this._median - index;

      this.indexChangeCb(index);

      this.switchLevel(index);
    },
    get: function get() {
      return this._currentIndex;
    }
  }]);

  return SlidePagination;
}();

exports.default = SlidePagination;


function createTextSp() {
  var text = new Laya.Text();
  Object.assign(text, textConfig);

  return text;
}

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _assetsLoader = __webpack_require__(15);

var _assetsLoader2 = _interopRequireDefault(_assetsLoader);

var _mask = __webpack_require__(27);

var _mask2 = _interopRequireDefault(_mask);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  align: 'center',
  valign: 'middle',
  color: '#FFFFFF',
  fontSize: 48,
  zOrder: 100
};

var SlideView = function () {
  function SlideView() {
    _classCallCheck(this, SlideView);
  }

  _createClass(SlideView, null, [{
    key: 'init',
    value: function init(world, panel) {
      var _this = this;

      var c = _config2.default.SELECT_PANEL;

      this._world = world;
      this._panel = panel;

      this._circleArgs = (0, _utils.getScaleArgs)({
        Y: c.CIRCLE_Y,
        RADIUS: c.CIRCLE_RADIUS
      });
      console.log(c.CIRCLE_Y + c.CIRCLE_RADIUS);
      console.log(this._circleArgs);
      this._scoreStarArgs = (0, _utils.getScaleArgs)(c.STARS);
      this._titleArgs = (0, _utils.getScaleArgs)(c.TITLE);
      this._authorArgs = (0, _utils.getScaleArgs)(c.AUTHOR);
      this._lockArgs = (0, _utils.getScaleArgs)(c.LOCK);
      this._tapArgs = (0, _utils.getScaleArgs)(c.TAP);

      // avatarArea
      this._avatarAreaArgs = (0, _utils.getScaleArgs)(c.AVATAR_AREA.AVATAR_AREA);
      this._avatarAreaAvatarArgs = (0, _utils.getScaleArgs)(c.AVATAR_AREA.AVATAR);
      this._avatarAreaCrownArgs = (0, _utils.getScaleArgs)(c.AVATAR_AREA.CROWN);
      this._avatarAreaScoreArgs = (0, _utils.getScaleArgs)(c.AVATAR_AREA.SCORE);
      this._avatarAreaExpandArgs = (0, _utils.getScaleArgs)(c.AVATAR_AREA.EXPAND);

      this._avatarAreaAvatarArgs.Y = (this._avatarAreaArgs.RADIUS - this._avatarAreaAvatarArgs.RADIUS) / 2;
      this._avatarAreaCrownArgs.Y = (this._avatarAreaArgs.RADIUS - this._avatarAreaCrownArgs.RADIUS) / 2;
      this._avatarAreaScoreArgs.Y = (this._avatarAreaArgs.RADIUS - this._avatarAreaScoreArgs.HEIGHT) / 2;
      this._avatarAreaExpandArgs.Y = (this._avatarAreaArgs.RADIUS - this._avatarAreaExpandArgs.HEIGHT) / 2;

      // 让Y轴方向上的offset按Radius的规则来计算
      //this._lockArgs.Y = getScaleRadius(c.LOCK.Y)
      this._unlockTitleArgs = (0, _utils.getScaleArgs)(c.UNLOCK_TITLE);
      this._unlockDescArgs = (0, _utils.getScaleArgs)(c.UNLOCK_DESC);

      this._backgroundCircleArgs = (0, _utils.getScaleArgs)(c.BACKGROUND_CIRCLE);
      var radiusOffset = this._circleArgs.RADIUS - this._backgroundCircleArgs.RADIUS;
      this._backgroundCircleArgs.X += radiusOffset;
      this._backgroundCircleArgs.Y += radiusOffset;

      // const backgroundCircle = new Laya.Sprite
      // backgroundCircle.pos(this._backgroundCircleArgs.X, this._backgroundCircleArgs.Y)
      // backgroundCircle.zOrder = 99
      // this._panel.addChild(backgroundCircle)
      // this._backgroundCircle = backgroundCircle

      this._starFlag = [1, 2, 4];

      this._touchedRadiusRatio = 1;

      this._circleRenderData = c.CIRCLES.map(function (x, index) {
        var _getScaleArgs = (0, _utils.getScaleArgs)({ X: x }),
            X = _getScaleArgs.X;

        return {
          index: index,
          x: X,
          data: null
        };
      });

      this._circleCentroid = new _utils.Point(this._circleRenderData[Math.floor(this._circleRenderData.length / 2)].x, this._circleArgs.Y);
      this._circleCentroid.SELF_ADD(this._circleArgs.RADIUS, this._circleArgs.RADIUS);

      this._circles = this._circleRenderData.map(function (_ref, index) {
        var x = _ref.x,
            args = _ref.args;

        var circle = new Laya.Sprite();
        var circleY = _config2.default.SCREEN_HEIGHT / 2 - _this._circleArgs.RADIUS;
        circle.pos(x, _config2.default.SCREEN_HEIGHT / 2 - _this._circleArgs.RADIUS);
        circle.width = circle.height = _this._circleArgs.RADIUS * 2;
        circle.index = index;
        circle.graphics.drawCircle(_this._circleArgs.RADIUS, _this._circleArgs.RADIUS, _this._circleArgs.RADIUS, c.CIRCLE_COLOR, _this._world.circleColor, c.CIRCLE_LINE_WIDTH);

        circle.starSprites = c.STARS.STARS_X.map(function (x) {
          var star = new Laya.Sprite();

          var _getScaleArgs2 = (0, _utils.getScaleArgs)({ X: x }),
              X = _getScaleArgs2.X;

          star.pos(X, _this._scoreStarArgs.Y - circleY);

          // star.graphics.drawTexture(this._world.assets.starKindled[this._world.level], 0, 0, c.STAR_WIDTH, c.STAR_WIDTH)

          circle.addChild(star);
          star.zOrder = 99;
          return star;
        });

        // 歌曲标题
        var title = new Laya.Text();
        Object.assign(title, textConfig);

        title.fontSize = _this._titleArgs.RADIUS;
        title.pos(0, _this._titleArgs.Y - circleY);
        title.width = 2 * _this._circleArgs.RADIUS;

        circle.title = title;
        circle.addChild(title);

        // 作者
        var author = new Laya.Text();
        Object.assign(author, textConfig);

        author.fontSize = _this._authorArgs.RADIUS;
        author.pos(0, _this._authorArgs.Y - circleY);
        author.width = 2 * _this._circleArgs.RADIUS;
        // author.color = this._world.mainColor

        circle.author = author;
        circle.addChild(author);

        if (_utils.Score.firstOpen()) {
          var tapSprite = new Laya.Sprite();
          tapSprite.pos(_this._circleArgs.RADIUS - _this._tapArgs.HEIGHT / 2, _this._tapArgs.Y - circleY);
          tapSprite.aniSize = _this._tapArgs.HEIGHT;
          tapSprite.aniSizeInc = -1;
          circle.tapSprite = tapSprite;
          circle.addChild(tapSprite);
        }

        var lockSprite = new Laya.Sprite();
        lockSprite.pos(_this._lockArgs.X, _this._lockArgs.Y - circleY);
        circle.lockSprite = lockSprite;
        circle.addChild(lockSprite);

        // 解锁条件
        var condiction = new Laya.Text();
        Object.assign(condiction, textConfig);

        condiction.pos(0, _this._unlockTitleArgs.Y - circleY);
        condiction.width = 2 * _this._circleArgs.RADIUS;
        condiction.color = _this._world.mainColor;
        condiction.text = '解锁条件';

        circle.condiction = condiction;
        circle.addChild(condiction);

        // wording
        var wording = new Laya.Text();
        Object.assign(wording, textConfig);

        wording.pos(0, _this._unlockDescArgs.Y - circleY);
        wording.width = 2 * _this._circleArgs.RADIUS;
        wording.color = _this._world.mainColor;

        circle.wording = wording;
        circle.addChild(wording);

        var backgroundSp = new Laya.Sprite();
        backgroundSp.pivot(_this._circleArgs.RADIUS, _this._circleArgs.RADIUS);
        backgroundSp.pos(_this._circleArgs.RADIUS, _this._circleArgs.RADIUS);
        circle.backgroundSp = backgroundSp;
        circle.addChild(backgroundSp);

        // const maskSp = new Laya.Sprite
        // maskSp.pos(0, 0)
        // circle.maskSp = maskSp
        // circle.addChild(maskSp)

        _this._avatarMask = (0, _mask2.default)(_this._avatarAreaAvatarArgs.RADIUS);

        var avatarArea = new Laya.Sprite();
        avatarArea.pos(_this._avatarAreaArgs.X, _this._avatarAreaArgs.Y - circleY);
        // avatarArea.width = this._avatarAreaArgs.WIDTH
        // avatarArea.height = this._avatarAreaArgs.RADIUS
        // 非常奇怪，手动设置大小无效？
        avatarArea.autoSize = true;
        circle.avatarArea = avatarArea;
        circle.addChild(avatarArea);

        // myScore
        var myScore = new Laya.Text();
        Object.assign(myScore, textConfig);

        // myScore.fontSize = c.LOCK.WORDING_SIZE
        myScore.pos(_this._avatarAreaScoreArgs.X, _this._avatarAreaScoreArgs.Y - 2);
        myScore.align = 'left';
        myScore.overflow = 'hidden';
        myScore.color = c.AVATAR_AREA.SCORE_COLOR;
        myScore.size(_this._avatarAreaScoreArgs.WIDTH, _this._avatarAreaScoreArgs.HEIGHT);

        avatarArea.myScore = myScore;
        avatarArea.addChild(myScore);

        circle.on(Laya.Event.MOUSE_DOWN, _this, _this.touchStartHandler);
        panel.on(Laya.Event.MOUSE_MOVE, _this, _this.touchMoveHandler);
        panel.on(Laya.Event.MOUSE_UP, _this, _this.touchEndHandler);

        circle.author = author;
        circle.title = title;

        return circle;
      });

      this._length = c.CIRCLES.length;

      this._rightThreshold = _config2.default.SCREEN_WIDTH;
      this._leftThreshold = -this._circleArgs.RADIUS * 2;

      this._leftScreenThreshold = c.BORDER_THRESHOLD;
      this._rightScreenThreshold = _config2.default.SCREEN_WIDTH - c.BORDER_THRESHOLD;

      this._singleOffset = this._circleArgs.RADIUS * 2 + (0, _utils.getScaleArgs)(c.CIRCLE_MARGIN).WIDTH;
      this._loopOffset = this._singleOffset * this._length;
      this._loopOffsetRight = this._loopOffset - this._circleArgs.RADIUS * 2;
      this._loopOffsetLeft = _config2.default.SCREEN_WIDTH - this._loopOffset;

      this._vec = c.CIRCLE_MOVE_VEC;

      // TODO: 重构
      this._bindedUpdate = this.update.bind(this);
      _utils.emitter.on('game-loop', this._bindedUpdate);
      this._generateCountDown = (0, _utils.random)(1000, 2000);
      this._randomNotes = [];
      this._panel.addChild(this._randomNotesSp);

      return this._circles;
    }
  }, {
    key: 'update',
    value: function update(dt) {
      var _this2 = this;

      if (!this._state) {
        return;
      }
      this._circles.forEach(function (circle) {
        circle.backgroundSp.rotation += 0.4;
        if (circle.tapSprite) {
          var tap = circle.tapSprite;
          tap.aniSize += tap.aniSizeInc;
          if (tap.aniSize > _this2._tapArgs.HEIGHT) {
            tap.aniSizeInc = -1;
          } else if (tap.aniSize < _this2._tapArgs.HEIGHT * 0.5) {
            tap.aniSizeInc = 1;
          }
          tap.graphics.clear();
          tap.graphics.drawTexture(_this2._world.assets.tap, (_this2._tapArgs.HEIGHT - tap.aniSize) / 2, (_this2._tapArgs.HEIGHT - tap.aniSize) / 2, tap.aniSize, tap.aniSize);
        }
      });

      this._generateCountDown -= dt;

      if (this._generateCountDown <= 0) {
        this._generateCountDown = (0, _utils.random)(1000, 2000);

        this._randomNotes.push(this.generateRandomNote());
      }

      if (!this._randomNotes.length) {
        return;
      }

      for (var i = this._randomNotes.length - 1; i >= 0; i--) {
        var note = this._randomNotes[i];

        note.duration -= dt;
        if (note.duration <= 0) {
          note.sp.destroy();
          this._randomNotes.splice(i, 0);
          continue;
        }

        note.position.SELF_ADD(0, -2);
        note.size += note.sizeDelta;
        note.rotation += note.rotationDelta;

        if (note.size > 50 || note.size < 30) {
          note.sizeDelta = -note.sizeDelta;
        }

        if (note.rotation > 10 || note.rotation < -10) {
          note.rotationDelta = -note.rotationDelta;
        }

        note.sp.graphics.clear();
        note.sp.pos(note.position.x, note.position.y);
        note.sp.graphics.drawTexture(note.asset, 0, 0, note.size * 1.5, note.size * 1.5);
        note.sp.rotation = note.rotation;
        note.sp.alpha = note.duration / note.originDuration;
      }

      var c = _config2.default.SELECT_PANEL.TOUCH_ANIMATION;
      if (this._touching && this._touchedRadiusRatio > c.MIN_RATIO) {
        this._touchedRadiusRatio -= c.DELTA;
        this.renderCircleContent();
      } else if (!this._touching && this._touchedRadiusRatio < 1) {
        this._touchedRadiusRatio += c.DELTA;
        if (!this._moving) {
          this.renderCircleContent();
        }
      }
    }
  }, {
    key: 'clearNotes',
    value: function clearNotes() {
      for (var i = this._randomNotes.length - 1; i >= 0; i--) {
        var note = this._randomNotes[i];
        note.sp.destroy();
      }

      this._randomNotes = [];
    }
  }, {
    key: 'generateRandomNote',
    value: function generateRandomNote() {
      var radius = this._circleArgs.RADIUS;

      var position = new _utils.Point((0, _utils.random)(0, radius), 0).ROTATE((0, _utils.random)(0, 360) / 360 * Math.PI).SELF_ADD(this._circleCentroid),
          size = (0, _utils.random)(30, 50),
          asset = this._world.assets.randomNotes[(0, _utils.random)(0, this._world.assets.randomNotes.length)],

      // alpha = random(6, 9) / 10,
      duration = (0, _utils.random)(4000, 5000),
          sp = new Laya.Sprite();

      this._panel.addChild(sp);

      return {
        position: position,
        size: size,
        asset: asset,
        // alpha,
        sp: sp,
        duration: duration,
        originDuration: duration,
        sizeDelta: 0.4 * (Math.random() > 0.5 ? 1 : -1),
        rotation: 0,
        rotationDelta: 0.5 * (Math.random() > 0.5 ? 1 : -1)
      };
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this._circles.forEach(function (circle) {
        return circle.destroy();
      });
      //this._backgroundCircle.destroy()
      _utils.emitter.removeListener('game-loop', this._bindedUpdate);
      if (this._runMoveHandler) {
        clearInterval(this._runMoveHandler);
      }
      this._dataSource = null;
    }
  }, {
    key: 'show',
    value: function show() {
      this.changeState(true);
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.changeState(false);
    }
  }, {
    key: 'changeState',
    value: function changeState(state) {
      this._state = state;
      this._circles.forEach(function (circle) {
        circle.visible = circle.mouseEnabled = state;
      });
      // this._backgroundCircle.visible = state

      if (!state) {
        this.clearNotes();
      }
    }
  }, {
    key: 'setData',
    value: function setData(_ref2) {
      var _this3 = this;

      var data = _ref2.data,
          prevIndex = _ref2.prevIndex,
          prevPerfect = _ref2.prevPerfect,
          prevChapterLength = _ref2.prevChapterLength;

      this._dataSource = data;

      var locked = false;
      if (data.length < this._length) {
        var times = Math.floor(this._length / data.length);
        for (var i = 0; i < times; i++) {
          var _dataSource;

          (_dataSource = this._dataSource).push.apply(_dataSource, _toConsumableArray(data));
        }
      }

      var starToUnlock = data.starToUnlock;
      var currentStars = _utils.Score.stars;
      if (currentStars >= starToUnlock) {
        this._dataSource.forEach(function (d) {
          d.locked = false;
        });
      } else {
        var wording = '\u8FD8\u9700\u8981' + (starToUnlock - currentStars) + '\u2605\u89E3\u9501\u672C\u7AE0\u8282';

        locked = true;
        this._dataSource.forEach(function (d) {
          d.locked = true;
          d.wording = wording;
        });
      }

      // if (prevPerfect >= 0 && prevChapterLength) {
      //   const unlockLimit = Math.floor(prevChapterLength / 2)
      //   if (prevPerfect < unlockLimit) {
      //     let wording

      //     if (prevPerfect) {
      //       wording = `还需要章节 ${prevIndex} 的 ${unlockLimit - prevPerfect} 首歌曲★★★解锁`
      //     } else {
      //       wording = `章节 ${prevIndex} 任意 ${unlockLimit} 首歌曲★★★解锁`
      //     }

      //     locked = true
      //     this._dataSource.forEach((d) => {
      //       d.locked = true
      //       d.wording = wording
      //     })
      //   } else {
      //     this._dataSource.forEach((d) => {
      //       d.locked = false
      //     })

      //   }
      // }

      if (this._index && this._index <= this._dataSource.length) {} else {
        this._index = this._dataSource.length - 2;
      }

      var renderData = this._getDataSlice(this._index);

      renderData.forEach(function (data, index) {
        return _this3._circleRenderData[index].data = data;
      });

      // this.renderCircleBackground(locked)
      this.renderCircleContent();
    }
  }, {
    key: '_getDataSlice',
    value: function _getDataSlice(index) {
      var data = this._dataSource;

      if (index + this._length <= data.length) {
        return data.slice(index, index + this._length);
      } else {
        return data.slice(index, data.length).concat(data.slice(0, this._length + index - data.length));
      }
    }
  }, {
    key: '_getNewIndex',
    value: function _getNewIndex(increment) {
      if (increment > 0) {
        return (this._index + increment) % this._dataSource.length;
      } else {
        return this._index > -increment ? this._index + increment : this._dataSource.length + this._index + increment;
      }
    }
  }, {
    key: 'touchStartHandler',
    value: function touchStartHandler(e) {
      if (this.moving) {
        return;
      }

      this._touchOrigin = e.stageX;
      this._touchStartTime = Date.now();

      this._touching = true;

      var circleIndex = this._circleRenderData.findIndex(function (c) {
        return c.index === 2;
      });
      var circle = this._circles[circleIndex];

      // circle.maskSp.graphics.drawCircle(this._circleArgs.RADIUS, this._circleArgs.RADIUS, this._circleArgs.RADIUS, 'rgba(0, 0, 0, 0.3)')
      //console.log('touch start at stage x', this._touchOrigin)
    }
  }, {
    key: 'touchMoveHandler',
    value: function touchMoveHandler(e) {
      var _this4 = this;

      if (!this._touchOrigin) {
        return;
      }
      var offsetX = e.stageX - this._touchOrigin;

      if (e.stageX < this._leftScreenThreshold || e.stageX > this._rightScreenThreshold) {
        this.touchEndHandler(e);
        return;
      }

      this._circles.forEach(function (circle) {
        var newX = _this4._circleRenderData[circle.index].x + offsetX;
        circle.x = newX;

        if (offsetX > 0 && circle.x > _this4._loopOffsetRight) {
          circle.x -= _this4._loopOffset;
        } else if (offsetX < 0 && circle.x < _this4._loopOffsetLeft) {
          circle.x += _this4._loopOffset;
        }
      });
    }
  }, {
    key: 'touchEndHandler',
    value: function touchEndHandler(e) {
      var _this5 = this;

      if (!this._touchOrigin) {
        return;
      }

      var circleIndex = this._circleRenderData.findIndex(function (c) {
        return c.index === 2;
      });
      var circle = this._circles[circleIndex];

      // circle.maskSp.graphics.clear()

      var offsetX = e.stageX - this._touchOrigin;
      this._touchOrigin = null;
      this._touching = false;
      var offsetDistance = Math.abs(offsetX);

      if (offsetDistance < _config2.default.SELECT_PANEL.SELECT_SONG_OFFSET) {
        var song = this._dataSource[this._getNewIndex(2)];
        if (Date.now() - this._touchStartTime < _config2.default.SELECT_PANEL.SELECT_SONG_DURATION) {
          if (!song.locked || _config2.default.UNLOCK) {
            this.selectHandler(song.id);
            return;
          }
        }
      }

      var newIndex = void 0,
          newData = void 0;

      if (offsetDistance < 10) {
        return;
      }

      if (offsetDistance > _config2.default.SELECT_PANEL.MOVE_THRESHOLD) {
        var step = Math.ceil(offsetDistance / this._singleOffset);

        // 向右
        if (offsetX > 0) {
          var _circleRenderData;

          this._circles.forEach(function (circle) {
            if (step === 1) {
              if (circle.x > _this5._rightThreshold) {
                circle.x -= _this5._loopOffset;
              }
            } else {
              //
            }
          });

          this._newIndex = this._getNewIndex(-1);
          // newData = this._dataSource[newIndex]
          // this._circleRenderData.forEach((circle, index) => circle.data = renderData[index])
          // this._circleRenderData[this._circleRenderData.length - 1].data = newData
          (_circleRenderData = this._circleRenderData).push.apply(_circleRenderData, _toConsumableArray(this._circleRenderData.splice(0, 1)));
        } else if (offsetX < 0) {
          this._circles.forEach(function (circle) {
            if (step === 1) {
              if (circle.x < _this5._leftThreshold) {
                circle.x += _this5._loopOffset;
              }
            } else {
              //
            }
          });

          this._newIndex = this._getNewIndex(1);
          // newData = this._dataSource[newIndex]
          // this._circleRenderData.forEach((circle, index) => circle.data = renderData[index])
          // this._circleRenderData[0].data = newData
          this._circleRenderData = this._circleRenderData.splice(-1, 1).concat(this._circleRenderData);
        }

        // this.updateRenderData(newData)

        if (step === 1) {
          this._movingSign = offsetX > 0 ? 1 : -1;
        } else {
          this._movingSign = offsetX > 0 ? -1 : 1;
        }
      } else {
        this._movingSign = offsetX < 0 ? 1 : -1;
        this._newIndex = this._getNewIndex(0);
      }

      //console.log('this._circleRenderData', this._circleRenderData)

      this._moving = true;
      this._runMovingAnimation = this._runMovingAnimation.bind(this);
      this._runMoveHandler = setInterval(this._runMovingAnimation, 16);
    }
  }, {
    key: 'touchAvatarHandler',
    value: function touchAvatarHandler(e) {
      e.stopPropagation();
      var songIndex = this._getNewIndex(2);

      if (typeof this.touchAvatarCb === 'function') {
        this.touchAvatarCb(this._dataSource[songIndex]);
      }
    }
  }, {
    key: '_runMovingAnimation',
    value: function _runMovingAnimation() {
      var _this6 = this;

      var sign = this._movingSign;
      var displacement = sign * this._vec;

      this._circles.forEach(function (circle, index) {
        circle.x += displacement;

        if (Math.abs(circle.x - _this6._circleRenderData[index].x) < _this6._vec) {
          circle.x = _this6._circleRenderData[index].x;
          _this6._moving = false;
        }
      });

      if (!this._moving) {
        this._index = this._newIndex;

        this._circles.forEach(function (circle, index) {
          circle.x = _this6._circleRenderData[index].x;
        });

        this.renderCircleContent();
        clearInterval(this._runMoveHandler);
      }
    }
  }, {
    key: 'renderCircleBackground',
    value: function renderCircleBackground(locked) {
      this._backgroundCircle.graphics.clear();
      if (!locked) {
        this._backgroundCircle.graphics.drawTexture(this._world.assets.circles[this._world.level], 0, 0, this._backgroundCircleArgs.RADIUS * 2, this._backgroundCircleArgs.RADIUS * 2);
      }
    }
  }, {
    key: 'renderCircleContent',
    value: function renderCircleContent() {
      var _this7 = this;

      var renderData = this._getDataSlice(this._index);
      var world = this._world;
      var conf = _config2.default.SELECT_PANEL;

      var avatarAreaArgs = this._avatarAreaArgs,
          avatarAreaAvatarArgs = this._avatarAreaAvatarArgs,
          avatarAreaCrownArgs = this._avatarAreaCrownArgs,
          avatarAreaExpandArgs = this._avatarAreaExpandArgs;

      this._circleRenderData.forEach(function (c, index) {
        c.data = renderData[c.index];

        var circle = _this7._circles[index];
        circle.title.text = c.data.title;
        circle.author.text = c.data.singer_name;

        circle.graphics.clear();

        var avatarArea = circle.avatarArea;
        avatarArea.graphics.clear();
        avatarArea.myScore.text = '';

        if (_utils.Score.firstOpen()) {
          circle.tapSprite.graphics.clear();
          circle.tapSprite.graphics.drawTexture(world.assets.tap, 0, 0, _this7._tapArgs.HEIGHT, _this7._tapArgs.HEIGHT);
        }

        if (c.data.locked) {
          circle.starSprites.forEach(function (starSprite) {
            return starSprite.visible = false;
          });
          circle.lockSprite.visible = circle.condiction.visible = circle.wording.visible = true;
          circle.condiction.color = circle.wording.color = world.textColor;

          circle.author.alpha = circle.title.alpha = 0.4;

          circle.wording.text = c.data.wording;
          circle.lockSprite.graphics.clear();
          circle.lockSprite.graphics.drawTexture(world.assets.lock[world.level], 0, 0, conf.LOCK.LOCK_WIDTH, conf.LOCK.LOCK_HEIGHT);

          circle.graphics.drawCircle(_this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS, conf.CIRCLE_COLOR);
        } else {
          circle.starSprites.forEach(function (starSprite) {
            return starSprite.visible = true;
          });
          circle.lockSprite.visible = circle.condiction.visible = circle.wording.visible = false;

          circle.author.alpha = circle.title.alpha = 1;

          var scoreInfo = _utils.Score.getMyScore(c.data.id);
          var stars = void 0;
          if (!scoreInfo || !scoreInfo[1]) {
            stars = 0;
          } else {
            stars = scoreInfo[1].score;
          }

          if (stars > 7) {
            stars = 0;
          }

          circle.backgroundSp.graphics.clear();
          circle.backgroundSp.graphics.drawTexture(world.assets.songBackground, 0, 0, _this7._circleArgs.RADIUS * 2, _this7._circleArgs.RADIUS * 2);

          _this7._starFlag.forEach(function (bit, index) {
            circle.starSprites[index].graphics.clear();
            if (stars & bit) {
              circle.starSprites[index].graphics.drawTexture(world.assets.starKindled[world.level], 0, 0, _this7._scoreStarArgs.RADIUS * 2, _this7._scoreStarArgs.RADIUS * 2);
            } else {
              circle.starSprites[index].graphics.drawTexture(world.assets.starUnkindled, 0, 0, _this7._scoreStarArgs.RADIUS * 2, _this7._scoreStarArgs.RADIUS * 2);
            }
          });

          if (c.index === 2) {
            // if (this._touching) {
            circle.graphics.drawCircle(_this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS * _this7._touchedRadiusRatio, world.circleColor);
            var bgRadius = _this7._backgroundCircleArgs.RADIUS * _this7._touchedRadiusRatio;
            var offset = _this7._circleArgs.RADIUS - bgRadius;
            circle.graphics.drawTexture(_this7._world.assets.circles[_this7._world.level], offset, offset, bgRadius * 2, bgRadius * 2);
            // } else {
            //   circle.graphics.drawCircle(this._circleArgs.RADIUS, this._circleArgs.RADIUS, this._circleArgs.RADIUS, world.circleColor)
            // }
          } else {
            circle.graphics.drawCircle(_this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS, _this7._circleArgs.RADIUS, conf.CIRCLE_COLOR);
          }

          // 画圆上的背景星星
          // this._backgroundStarArgs.forEach((args) => {
          //   circle.graphics.drawPoly(...args, world.starColor)
          // })

          if (scoreInfo[0].score > 0) {
            avatarArea.graphics.drawTexture(world.assets.borders[world.level], 0, 0, avatarAreaArgs.WIDTH, avatarAreaArgs.RADIUS);

            if (!_this7._userAvatar) {
              _utils.Network.getUserInfo(function () {
                _this7._userAvatar = _utils.Network._userInfo.avatarUrl;
                avatarArea.loadImage(_this7._userAvatar, avatarAreaAvatarArgs.X, avatarAreaAvatarArgs.Y, avatarAreaAvatarArgs.RADIUS, avatarAreaAvatarArgs.RADIUS, Laya.Handler.create(_this7, function () {
                  _this7._avatarMask.forEach(function (path) {
                    avatarArea.graphics.drawPath(avatarAreaAvatarArgs.X - 1, avatarAreaAvatarArgs.Y - 1, path, {
                      fillStyle: '#1E2022'
                    });
                  });
                }));
              });
            } else {
              avatarArea.loadImage(_this7._userAvatar, avatarAreaAvatarArgs.X, avatarAreaAvatarArgs.Y, avatarAreaAvatarArgs.RADIUS, avatarAreaAvatarArgs.RADIUS, Laya.Handler.create(_this7, function () {
                _this7._avatarMask.forEach(function (path) {
                  avatarArea.graphics.drawPath(avatarAreaAvatarArgs.X - 1, avatarAreaAvatarArgs.Y - 1, path, {
                    fillStyle: '#1E2022'
                  });
                });
              }));
            }

            avatarArea.graphics.drawTexture(world.assets.champion, avatarAreaCrownArgs.X, avatarAreaCrownArgs.Y, avatarAreaCrownArgs.RADIUS, avatarAreaCrownArgs.RADIUS);
            avatarArea.graphics.drawTexture(world.assets.expandLeaderboard, avatarAreaExpandArgs.X, avatarAreaExpandArgs.Y, avatarAreaExpandArgs.WIDTH, avatarAreaExpandArgs.HEIGHT);
            avatarArea.myScore.text = scoreInfo[0].score;

            avatarArea.on(Laya.Event.MOUSE_DOWN, _this7, _this7.touchAvatarHandler);
          }
        }

        // if (c.index === 2) {
        //   circle.graphics.drawTexture(world.assets.circles[world.level], conf.CIRCLE_OUTER_X, conf.CIRCLE_OUTER_Y, conf.CIRCLE_OUTER_SIZE, conf.CIRCLE_OUTER_SIZE)
        // }
        // circle.author.color = this._world.mainColor
      });

      // console.log(this._circleRenderData)
    }
  }]);

  return SlideView;
}();

exports.default = SlideView;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  align: 'left',
  valign: 'middle',
  color: '#DA572C',
  fontSize: 64,
  zOrder: 100
};

var Slider = function () {
  function Slider() {
    _classCallCheck(this, Slider);
  }

  _createClass(Slider, null, [{
    key: 'init',
    value: function init(world) {
      this._world = world;

      var c = _config2.default.SETTING_PANEL.SLIDER;

      this._value = world.delayTime;
      this._tick = c.TICK;
      this._tickValue = this._tick * _config2.default.RUN_VEC;
      this._min = c.MIN;
      this._max = c.MAX;

      this._sliderBarHeight = _config2.default.RUN_VEC * (this._max - this._min);

      this.drawDashboard();
      this.drawSliderBar();
      this.drawLine();
      this.drawSliderText();
      this.drawSliderBall();

      return this._slider;
    }
  }, {
    key: 'drawDashboard',
    value: function drawDashboard() {
      this._lineY = _config2.default.SCREEN_HEIGHT / 2 - _config2.default.GEN_TIME * _config2.default.RUN_VEC - this._world.ball.size;

      this._minY = (this._min - _config2.default.GEN_TIME) * _config2.default.RUN_VEC + this._lineY;
      this._maxY = (this._max - _config2.default.GEN_TIME) * _config2.default.RUN_VEC + this._lineY;

      this._slider = new Laya.Sprite();
      this._slider.width = _config2.default.SCREEN_WIDTH;
      this._slider.height = this._maxY - this._minY;
      this._slider.pos(0, this._minY);
    }
  }, {
    key: 'drawSliderBall',
    value: function drawSliderBall() {
      var c = _config2.default.SETTING_PANEL.SLIDER_BALL;

      this._ballOffsetY = -c.OUTER_RADIUS;

      this._sliderBall = new Laya.Sprite();
      this._sliderBall.width = this._sliderBall.height = c.OUTER_RADIUS * 2;
      this._sliderBall.pos(c.X, (this._value - this._min) * _config2.default.RUN_VEC - c.OUTER_RADIUS);

      this._sliderBall.graphics.draw;

      this._sliderBall.graphics.drawCircle(c.OUTER_RADIUS, c.OUTER_RADIUS, c.OUTER_RADIUS, c.OUTER_COLOR);
      this._sliderBall.graphics.drawCircle(c.OUTER_RADIUS, c.OUTER_RADIUS, c.INNER_RADIUS, c.INNER_COLOR);

      this._sliderBall.on(Laya.Event.MOUSE_DOWN, this, this.touchStartHandler);
      Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.touchMoveHandler);
      Laya.stage.on(Laya.Event.MOUSE_UP, this, this.touchEndHandler);

      this._slider.addChild(this._sliderBall);
    }
  }, {
    key: 'drawLine',
    value: function drawLine() {
      var c = _config2.default.SETTING_PANEL.LINE;

      this._lineSprite = new Laya.Sprite();
      // this._lineY = config.SCREEN_HEIGHT / 2 - 150 * config.RUN_VEC - this._world.ball.size
      this._lineSprite.pos(0, (this._value - this._min) * _config2.default.RUN_VEC);

      var identity = c.LENGTH + c.MARGIN;
      var length = Math.ceil(_config2.default.SCREEN_WIDTH / identity);
      for (var i = 0; i < length; i++) {
        var offsetX = i * identity;
        this._lineSprite.graphics.drawLine(offsetX, 0, offsetX + c.LENGTH, 0, c.COLOR, c.WIDTH);
      }
      this._slider.addChild(this._lineSprite);
    }
  }, {
    key: 'drawSliderBar',
    value: function drawSliderBar() {
      var c = _config2.default.SETTING_PANEL.SLIDER_BAR;

      this._sliderBarY = this._minY - this._lineY;

      this._sliderBar = new Laya.Sprite();
      this._sliderBar.pos(c.X, 0);
      this._sliderBar.graphics.drawRect(0, 0, c.WIDTH, this._sliderBarHeight, c.COLOR);

      this._slider.addChild(this._sliderBar);
    }
  }, {
    key: 'drawSliderText',
    value: function drawSliderText() {
      var c = _config2.default.SETTING_PANEL.VALUE;
      this._sliderValue = new Laya.Text();
      Object.assign(this._sliderValue, textConfig);
      this._sliderValue.height = c.HEIGHT;
      this._sliderValue.text = this._value + ' ms';
      this._sliderValue.pos(c.X, (this._value - this._min) * _config2.default.RUN_VEC - c.Y - c.HEIGHT);

      this._sliderDelay = new Laya.Text();
      Object.assign(this._sliderDelay, textConfig);
      this._sliderDelay.height = c.HEIGHT;
      this._sliderDelay.text = '\u5EF6\u8FDF';
      this._sliderDelay.pos(c.X, (this._value - this._min) * _config2.default.RUN_VEC + c.Y);

      this._sliderValueOffsetY = -c.Y - c.HEIGHT;
      this._sliderDelayOffsetY = c.Y;

      this._slider.addChild(this._sliderValue);
      this._slider.addChild(this._sliderDelay);
    }
  }, {
    key: 'touchStartHandler',
    value: function touchStartHandler(e) {
      this._touchOrigin = e.stageY;

      // console.log('touch start at stage x', this._touchOrigin)
    }
  }, {
    key: 'touchMoveHandler',
    value: function touchMoveHandler(e) {
      if (!this._touchOrigin) {
        return;
      }

      var stageY = e.stageY;
      if (stageY < this._minY) {
        stageY = this._minY;
      } else if (stageY > this._maxY) {
        stageY = this._maxY;
      }

      var currentY = stageY - this._minY;
      currentY -= currentY % this._tickValue;

      this._value = currentY / this._tickValue * this._tick + this._min;
      this._sliderValue.text = this._value + ' ms';

      this._sliderBall.y = currentY + this._ballOffsetY;
      this._lineSprite.y = currentY;
      this._sliderValue.y = currentY + this._sliderValueOffsetY;
      this._sliderDelay.y = currentY + this._sliderDelayOffsetY;

      // console.log('currentY', currentY)
    }
  }, {
    key: 'touchEndHandler',
    value: function touchEndHandler() {
      if (!this._touchOrigin) {
        return;
      }

      this.touchEndCallback(this._value);

      this._touchOrigin = null;
    }
  }]);

  return Slider;
}();

exports.default = Slider;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ReplaySystem = function (_System) {
  _inherits(ReplaySystem, _System);

  function ReplaySystem() {
    _classCallCheck(this, ReplaySystem);

    return _possibleConstructorReturn(this, (ReplaySystem.__proto__ || Object.getPrototypeOf(ReplaySystem)).apply(this, arguments));
  }

  _createClass(ReplaySystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      var _this2 = this;

      if (_utils.Live.living && _utils.Live.liveState === _config2.default.LIVE_STATE.RUNNING) {
        var cmds = _utils.Live.getCmds(now);
        cmds.forEach(function (cmd) {
          switch (cmd.cmd) {
            case _config2.default.SYNC_CMD.UP:
              _this2._world.cmd = _config2.default.CMD.UP;
              break;
            case _config2.default.SYNC_CMD.DOWN:
              _this2._world.cmd = _config2.default.CMD.DOWN;
              break;
            case _config2.default.SYNC_CMD.PERFECT_COIN:
              _this2._world.touchCoin = _this2._world.coins[cmd.idx];
              _this2._world.touchCoin.getEffectType = 'perfect';
              break;
            case _config2.default.SYNC_CMD.GOOD_COIN:
              _this2._world.touchCoin = _this2._world.coins[cmd.idx];
              _this2._world.touchCoin.getEffectType = 'good';
              break;
            case _config2.default.SYNC_CMD.MISS_COIN:
              _this2._world.missCoin = _this2._world.coins[cmd.idx];
              break;
            case _config2.default.SYNC_CMD.OBS:
              _this2._world.touchObstacle = _this2._world.obstacles[cmd.idx];
              break;
            case _config2.default.SYNC_CMD.END:
              console.log('end');
              _utils.emitter.emit(_config2.default.NETWORK_EVENT.LIVE_END, cmd.info);
              break;
            case _config2.default.SYNC_CMD.IDEL:
              // empty cmd
              break;
          }
        });
      }
    }
  }]);

  return ReplaySystem;
}(_ECS.System);

exports.default = ReplaySystem;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BackgroundSystem = function (_System) {
  _inherits(BackgroundSystem, _System);

  function BackgroundSystem() {
    _classCallCheck(this, BackgroundSystem);

    return _possibleConstructorReturn(this, (BackgroundSystem.__proto__ || Object.getPrototypeOf(BackgroundSystem)).apply(this, arguments));
  }

  _createClass(BackgroundSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      var background = this._world.background;
      background.hue += background.dh;
    }
  }]);

  return BackgroundSystem;
}(_ECS.System);

exports.default = BackgroundSystem;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BuffSystem = function (_System) {
  _inherits(BuffSystem, _System);

  function BuffSystem() {
    _classCallCheck(this, BuffSystem);

    return _possibleConstructorReturn(this, (BuffSystem.__proto__ || Object.getPrototypeOf(BuffSystem)).apply(this, arguments));
  }

  _createClass(BuffSystem, null, [{
    key: 'init',
    value: function init() {
      this._removeInNextFrame = [];
      this._buffDuration = {};
      for (var i in _config2.default.BUFF) {
        this._buffDuration[_config2.default.BUFF[i]] = _config2.default.BUFF_DURATION[i] || _config2.default.BUFF_DURATION.DEFAULT;
      }
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      var ball = this._world.ball;
      if (ball.buffManager) {
        this._removeInNextFrame.forEach(function (i) {
          return delete ball.buffManager[i];
        });
        this._removeInNextFrame.length = 0;

        for (var i in ball.buffManager) {
          if (parseInt(ball.buffManager[i]) > 0) {
            ball.buffManager[i] -= dt;
          } else {
            this._removeInNextFrame.push(i);
          }
        }
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {}
  }]);

  return BuffSystem;
}(_ECS.System);

exports.default = BuffSystem;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(8);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils2 = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
// import config from 'config'


var CameraSystem = function (_System) {
  _inherits(CameraSystem, _System);

  function CameraSystem() {
    _classCallCheck(this, CameraSystem);

    return _possibleConstructorReturn(this, (CameraSystem.__proto__ || Object.getPrototypeOf(CameraSystem)).apply(this, arguments));
  }

  _createClass(CameraSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      if (this._world.mode === _config2.default.GAME_MODE.ADJUST) {
        return;
      }

      var ball = this._world.ball;
      var centerPoint = (0, _utils.translateCoordinate)(this._world, ball.index, ball.x, 0);
      if (this._world.camera && centerPoint) {
        this._world.camera.x = centerPoint.x - _config2.default.SCREEN_WIDTH / 2;
        this._world.camera.y = centerPoint.y - _config2.default.SCREEN_HEIGHT / 2;
      } else if (centerPoint) {
        this._world.camera = new _utils2.Rect(centerPoint.x - _config2.default.SCREEN_WIDTH / 2, centerPoint.y - _config2.default.SCREEN_HEIGHT / 2, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT);
      }
    }
  }]);

  return CameraSystem;
}(_ECS.System);

exports.default = CameraSystem;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CoinParticleSystem = function (_System) {
  _inherits(CoinParticleSystem, _System);

  function CoinParticleSystem() {
    _classCallCheck(this, CoinParticleSystem);

    return _possibleConstructorReturn(this, (CoinParticleSystem.__proto__ || Object.getPrototypeOf(CoinParticleSystem)).apply(this, arguments));
  }

  _createClass(CoinParticleSystem, null, [{
    key: 'init',
    value: function init() {
      this._world.coinParticles = [];
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      return;
      this._removeParticles(now);
      this._updateParticles(now);
      this._createParticles(now);
    }
  }, {
    key: '_createParticles',
    value: function _createParticles(now) {
      if (this._world.crashCoin) {
        var coin = this._world.crashCoin;

        var sumx = 0;
        var sumy = 0;
        for (var i = 0; i < coin.poly.length; i += 2) {
          sumx += coin.poly[i];
          sumy += coin.poly[i + 1];
        }
        var x = sumx / 4;
        var y = sumy / 4;
        var color = coin.color;
        for (var _i = 0; _i < _config2.default.COIN_PARTICLE.NUMBER; _i++) {
          var sizeRate = (0, _utils.random)(_config2.default.COIN_PARTICLE.MIN_SIZE, _config2.default.COIN_PARTICLE.MAX_SIZE) / _config2.default.COIN.SIZE;
          var poly = [];
          for (var j = 0; j < coin.poly.length; j += 2) {
            poly.push(x + (coin.poly[j] - x) * sizeRate);
            poly.push(y + (coin.poly[j + 1] - y) * sizeRate);
          }
          this._world.coinParticles.push({
            poly: poly,
            position: new _utils.Point(coin.position.x, coin.position.y),
            //position: new Point(coin.position.x + (x - coin.poly[0]) * (1 - sizeRate), coin.position.y + (y - coin.poly[1]) * (1 - sizeRate)),
            color: color,
            vec: new _utils.Point((0, _utils.random)(-100, 100) / 100 * _config2.default.COIN_PARTICLE.VEC, (0, _utils.random)(-100, 100) / 100 * _config2.default.COIN_PARTICLE.VEC),
            createTime: now
          });
        }
        this._world.coinParticles.push({
          type: 'border',
          center: new _utils.Point(x, y),
          startPosition: new _utils.Point(coin.position.x, coin.position.y),
          position: new _utils.Point(coin.position.x, coin.position.y),
          startPoly: JSON.parse(JSON.stringify(coin.poly)),
          poly: JSON.parse(JSON.stringify(coin.poly)),
          color: color,
          minSize: 1,
          maxSize: 1.5,
          createTime: now
        });
        this._world.coinParticles.push({
          type: 'border',
          center: new _utils.Point(x, y),
          startPosition: new _utils.Point(coin.position.x, coin.position.y),
          position: new _utils.Point(coin.position.x, coin.position.y),
          startPoly: JSON.parse(JSON.stringify(coin.poly)),
          poly: JSON.parse(JSON.stringify(coin.poly)),
          color: color,
          minSize: 1,
          maxSize: 3,
          createTime: now
        });

        this._world.crashCoin = undefined;
      }
    }
  }, {
    key: '_updateParticles',
    value: function _updateParticles(now) {
      this._world.coinParticles.forEach(function (particle) {
        var alpha = (now - particle.createTime) / _config2.default.COIN_PARTICLE.TIME;
        particle.alpha = 1 - alpha;
        if (particle.type === 'border') {
          var sizeRate = particle.minSize + (now - particle.createTime) / _config2.default.COIN_PARTICLE.TIME * (particle.maxSize - particle.minSize);
          for (var i = 0; i < particle.poly.length; i += 2) {
            particle.poly[i] = particle.center.x + (particle.startPoly[i] - particle.center.x) * sizeRate;
            particle.poly[i + 1] = particle.center.y + (particle.startPoly[i + 1] - particle.center.y) * sizeRate;
          }
          //particle.position.x = particle.startPosition.x + (particle.poly[0] - particle.startPoly[0])
          //particle.position.y = particle.startPosition.y + (particle.poly[1] - particle.startPoly[1])
        } else {
          particle.position.SELF_ADD(particle.vec);
        }
      });
    }
  }, {
    key: '_removeParticles',
    value: function _removeParticles(now) {
      var particles = this._world.coinParticles || [];
      for (var i = particles.length - 1; i >= 0; i--) {
        if (particles[i].createTime + _config2.default.COIN_PARTICLE.TIME < now) {
          particles[i].sprite && particles[i].sprite.destroy();
          particles.splice(i, 1);
        }
      }
    }
  }]);

  return CoinParticleSystem;
}(_ECS.System);

exports.default = CoinParticleSystem;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils2 = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// const X_RANGE = config.SCREEN_WIDTH * 2.5
// const Y_RANGE = config.SCREEN_HEIGHT * 2.5

var SCALE_RATIO = 0.5;

var CoinStarSystem = function (_System) {
  _inherits(CoinStarSystem, _System);

  function CoinStarSystem() {
    _classCallCheck(this, CoinStarSystem);

    return _possibleConstructorReturn(this, (CoinStarSystem.__proto__ || Object.getPrototypeOf(CoinStarSystem)).apply(this, arguments));
  }

  _createClass(CoinStarSystem, null, [{
    key: 'init',
    value: function init() {
      this._world.coinStars = [];
      this._world.flyingCoinStars = [];

      this._central = new _utils.Rect(-_config2.default.SCREEN_WIDTH / 2, -_config2.default.SCREEN_HEIGHT / 2, _config2.default.SCREEN_WIDTH * 1.5, _config2.default.SCREEN_HEIGHT * 1.5);
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      var flyingCoinStars = this._world.flyingCoinStars;
      var coins = this._world.coinStars;

      if (this._world.starCoin) {
        var position = this._world.ball.position;
        //const vec = this._world.ball.direction || new Point(0, 0)
        //vec.normalize().SELF_MUL(2)

        var _coins = this._world.coinStars;

        var poly = this._world.starCoin.poly.slice();
        // const x = (poly[0] + poly[4]) / 2,
        //       y = (poly[1] + poly[5]) / 2

        // for (let i = 0; i < 8; i += 2) {
        //   // poly[i] = (poly[i] - x) * SCALE_RATIO
        //   // poly[i+1] -= (poly[i+1] - y) * SCALE_RATIO
        //   poly[i] = poly[i] * SCALE_RATIO
        //   poly[i+1] = poly[i+1]* SCALE_RATIO
        // }

        //let stars = Math.ceil(this._world.continuousCombo / 10)
        //if (stars > 5) {
        //stars = 5
        //}
        // for (let i = 0; i < stars; i++) {
        var positionTo = new _utils.Point((0, _utils.random)(-_config2.default.SCREEN_WIDTH * 2, _config2.default.SCREEN_WIDTH * 3), (0, _utils.random)(-_config2.default.SCREEN_HEIGHT * 2, _config2.default.SCREEN_HEIGHT * 3));
        var coinPosInBackground = coin.position.SUB(this._world.camera.leftTopPoint);

        while (this._central.contain(positionTo)) {
          positionTo = new _utils.Point((0, _utils.random)(-_config2.default.SCREEN_WIDTH * 2, _config2.default.SCREEN_WIDTH * 3), (0, _utils.random)(-_config2.default.SCREEN_HEIGHT * 2, _config2.default.SCREEN_HEIGHT * 3));
        }

        var coinStar = {
          positionTo: positionTo,
          poly: poly,
          // center: new Point(x, y),
          color: coin.color,
          // position: coin.position,
          position: coinPosInBackground,
          // vec: (new Point(2, 0)).ROTATE(random(0, 360) / 180 * Math.PI).ADD(vec),
          vec: positionTo.SUB(coinPosInBackground).normalize().MUL(100),
          flyTime: (0, _utils.random)(2000, 5000),
          scaleRatio: (0, _utils.random)(2, 4) / 10,
          alpha: (0, _utils.random)(2, 3) / 10,
          sign: 1
          // sign: Math.random() > 0.5 ? 1 : -1,


          // this._world.coinStars.push(coinStar)
        };flyingCoinStars.push(coinStar);
        // }

        this._world.starCoin = null;
      }

      for (var i = flyingCoinStars.length - 1; i >= 0; i--) {
        var _coin = flyingCoinStars[i];
        if (_coin.position.distance2(_coin.positionTo) < 10000) {
          _coin.position = _coin.positionTo;
          // coin.vec = new Point(0, 0)
          var c = flyingCoinStars.splice(i, 1)[0];
          c.poly = this.generateCrossStar();
          c.coinStarType = 'cross';
          c.sprite.alpha = 1;
          coins.push(c);
        } else {
          _coin.position.SELF_ADD(_coin.vec);
        }
      }

      var vec = this._world.lineDirection && this._world.lineDirection.SELF_NEG().normalize().SELF_MUL(5) || new _utils.Point(0, 0);

      if (coins.length > 30) {

        console.log('exceed 30!');
        var removedCoins = coins.splice(0, coins.length - 30);
        removedCoins.forEach(function (coin) {
          coin.sprite.destroy();
        });
      }

      for (var _i = coins.length - 1; _i >= 0; _i--) {
        var _coin2 = coins[_i];

        _coin2.position.SELF_ADD(vec);
        _coin2.sprite.alpha -= 0.01 / 20;

        if (_coin2.sprite.alpha < 0.1 || this._central.contain(_coin2.position)) {
          _coin2.sprite.destroy();
          coins.splice(_i, 1);
        }
      }
    }
  }, {
    key: 'generateCrossStar',
    value: function generateCrossStar() {
      var peripheral = (0, _utils.random)(50, 80);
      var internal = Math.ceil(peripheral / 10);

      // x0, y0, x1, y1 ... x7, y7. Satrt from toppest point, clockwisely.
      return [0, peripheral, internal, internal, peripheral, 0, internal, -internal, 0, -peripheral, -internal, -internal, -peripheral, 0, -internal, internal];
    }
  }]);

  return CoinStarSystem;
}(_ECS.System);

exports.default = CoinStarSystem;

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CoinSystem = function (_System) {
  _inherits(CoinSystem, _System);

  function CoinSystem() {
    _classCallCheck(this, CoinSystem);

    return _possibleConstructorReturn(this, (CoinSystem.__proto__ || Object.getPrototypeOf(CoinSystem)).apply(this, arguments));
  }

  _createClass(CoinSystem, null, [{
    key: 'init',
    value: function init() {
      this._world.combo = 0;
      this._world.lastCombo = -1;
      this._world.continuousCombo = 0;

      // 最高连击
      this._world.maxContinuousCombo = 0;
      // 遗漏的数量
      this._world.missedCoin = 0;
      this._world.perfectCoin = 0;
      this._world.goodCoin = 0;

      // 各个buff的持续时间
      this._buffDuration = {};
      for (var i in _config2.default.BUFF) {
        this._buffDuration[_config2.default.BUFF[i]] = _config2.default.BUFF_DURATION[i] || _config2.default.BUFF_DURATION.DEFAULT;
      }
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      if (this._world.touchCoin) {
        var t = Date.now() - this._world.lastTapTime;
        var type = t < 230 && t > 70 ? 'perfect' : 'good';
        if (this._world.touchCoin.getEffectType) {
          type = this._world.touchCoin.getEffectType;
        }
        if (type === 'perfect') {
          ++this._world.perfectCoin;
        } else {
          ++this._world.goodCoin;
        }
        this._world.getCoinEffect = {
          x: this._world.touchCoin.centroid.x,
          y: this._world.touchCoin.centroid.y,
          type: type
        };
        _utils.Network.coinCmd(this._world.touchCoin.idx, type);
        this._world.starCoin = this._world.crashCoin = this._world.touchCoin;
        coin = this._world.touchCoin;
        if (!coin.hidden) {
          coin.hidden = true;
          this._world.touchCoin = undefined;

          if (this._world.mode === _config2.default.GAME_MODE.ADJUST) {
            return;
          }

          if (coin.fake) {
            coin.fakeCoinObstacles.forEach(function (obstacle) {
              obstacle.triggered = true;
              obstacle.hidden = false;
            });
          } else {
            // 判断连击(要计算正在飞行的coin)
            if (coin.idx <= this._world.lastCombo + (this._world.movingCoins.length || 1)) {
              this._world.continuousCombo++;
              this._world.combo = Math.ceil(this._world.continuousCombo / 10);

              if (this._world.combo > 10) {
                this._world.combo = 10;
              }
            } else {
              this._world.continuousCombo = 1;
              this._world.combo = 1;
            }

            if (this._world.continuousCombo > this._world.maxContinuousCombo) {
              this._world.maxContinuousCombo = this._world.continuousCombo;
            }

            this._world.lastCombo = coin.idx;

            // 双倍buff
            if (this._world.ball.buffManager[_config2.default.BUFF.X2] || type === 'perfect') {
              this._world.score += this._world.combo * 2;
            } else {
              this._world.score += this._world.combo;
            }

            this._world.hearts += _config2.default.COIN_HEART;
          }

          if (coin.type !== 'COIN') {
            // this._world.ball.buffManager[config.BUFF[coin.type]] = now
            this._world.ball.buffManager[_config2.default.BUFF[coin.type]] = _config2.default.BUFF_DURATION[coin.type];
          }

          if (this._world.hearts > _config2.default.HEART_NUMBER) {
            this._world.hearts = _config2.default.HEART_NUMBER;
          }

          this._world.updateScore = true;
          this._world.updateCombo = true;
          this._world.updateComboBorder = true;
        }
      }
      if (this._world.missCoin) {
        this._world.getCoinEffect = {
          x: this._world.missCoin.centroid.x,
          y: this._world.missCoin.centroid.y,
          type: 'miss'
        };
        _utils.Network.missCoinCmd(this._world.missCoin.idx);
        ++this._world.missedCoin;
        this._world.missCoin = undefined;
        this._world.continuousCombo = 0;
        this._world.combo = 0;
        this._world.updateCombo = true;
        this._world.updateComboBorder = true;
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this._world.combo = 0;
      this._world.lastCombo = -1;
      this._world.continuousCombo = 0;
    }
  }]);

  return CoinSystem;
}(_ECS.System);

exports.default = CoinSystem;

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CollisionSystem = function (_System) {
  _inherits(CollisionSystem, _System);

  function CollisionSystem() {
    _classCallCheck(this, CollisionSystem);

    return _possibleConstructorReturn(this, (CollisionSystem.__proto__ || Object.getPrototypeOf(CollisionSystem)).apply(this, arguments));
  }

  _createClass(CollisionSystem, null, [{
    key: '_touchCoin',
    value: function _touchCoin(coin) {
      this._world.touchCoin = coin;
      return true;
    }
  }, {
    key: '_missCoin',
    value: function _missCoin(coin) {
      this._world.missCoin = coin;
    }

    //return whether to abort

  }, {
    key: '_touchObstacle',
    value: function _touchObstacle(obstacle) {
      this._world.touchObstacle = obstacle;
      return true;
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      if (_utils.Live.living && _utils.Live.liveState === _config2.default.LIVE_STATE.RUNNING) {
        return;
      }
      var ball = this._world.ball;

      var coins = this._world.coins;

      if (ball.position === undefined) {
        return;
      }

      if (coins === undefined) {
        return;
      }

      var ballShape = new _utils.Circle(ball.position, ball.size);
      var smallBallShape = new _utils.Circle(ball.position, ball.size * 0.5);

      for (var i = coins.start; i < coins.end; ++i) {

        var coin = coins[i];

        if (coin.hidden) {
          continue;
        }

        var coinShape = new _utils.Circle(coin.position, _config2.default.COIN.SIZE);

        //包含或者相交
        if (ballShape.intersection(coinShape) !== 3) {
          this._touchCoin(coin);
        } else if (coin.distance <= ball.distance - ball.size * 2) {
          if (!coin.hidden && !coin.miss) {
            if (coin.fake) {
              this._world.lastCombo = coin.idx;
            } else {
              coin.miss = true;
              this._missCoin(coin);
            }
          }
        } else {
          break;
        }
      }

      var obstacles = this._world.obstacles;
      if (obstacles === undefined) {
        return;
      }

      for (var _i = obstacles.start; _i < obstacles.end; ++_i) {
        var obstacle = obstacles[_i];

        if (obstacle.hidden) {
          continue;
        }

        var obstacleShape = obstacle.shape;

        if (obstacleShape.intersectionWithCircle(smallBallShape)) {
          var abort = this._touchObstacle(obstacle);
          if (abort) break;
        } else {
          if (obstacle.distance <= ball.distance) {
            continue;
          }

          break;
        }
      }
    }
  }]);

  return CollisionSystem;
}(_ECS.System);

exports.default = CollisionSystem;

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorSystem = function (_System) {
  _inherits(ColorSystem, _System);

  function ColorSystem() {
    _classCallCheck(this, ColorSystem);

    return _possibleConstructorReturn(this, (ColorSystem.__proto__ || Object.getPrototypeOf(ColorSystem)).apply(this, arguments));
  }

  _createClass(ColorSystem, null, [{
    key: 'update',
    value: function update(dt, now) {}
  }]);

  return ColorSystem;
}(_ECS.System);

exports.default = ColorSystem;

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var JudgeSystem = function (_System) {
  _inherits(JudgeSystem, _System);

  function JudgeSystem() {
    _classCallCheck(this, JudgeSystem);

    return _possibleConstructorReturn(this, (JudgeSystem.__proto__ || Object.getPrototypeOf(JudgeSystem)).apply(this, arguments));
  }

  _createClass(JudgeSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      if (this._world.hearts <= 0) {
        if (_config2.default.NO_DEAD) {
          this._world.hearts = 30;
          return;
        }
        _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_END, false);
      }
    }
  }]);

  return JudgeSystem;
}(_ECS.System);

exports.default = JudgeSystem;

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ObsParticleSystem = function (_System) {
  _inherits(ObsParticleSystem, _System);

  function ObsParticleSystem() {
    _classCallCheck(this, ObsParticleSystem);

    return _possibleConstructorReturn(this, (ObsParticleSystem.__proto__ || Object.getPrototypeOf(ObsParticleSystem)).apply(this, arguments));
  }

  _createClass(ObsParticleSystem, null, [{
    key: 'init',
    value: function init() {
      this._world.obsParticles = [];
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      this._removeParticles(now);
      this._updateParticles(now);
      this._createParticles(now);
    }
  }, {
    key: '_createParticles',
    value: function _createParticles(now) {
      if (this._world.crashObs) {
        var obs = this._world.crashObs;
        this._world.crashObs = undefined;

        for (var i = 0; i + 4 <= obs.pathes.length; i += 2) {
          this._world.obsParticles.push({
            position: new _utils.Point(obs.shape.points[3].x, obs.shape.points[3].y),
            path: obs.pathes.slice(i, i + 4),
            createTime: now,
            vec: new _utils.Point(((0, _utils.random)() * 2 - 1) * _config2.default.COIN_PARTICLE.VEC * 5, ((0, _utils.random)() * 2 - 1) * _config2.default.COIN_PARTICLE.VEC * 5),
            rotate: (0, _utils.random)() * Math.PI / 180,
            alpha: 1
          });
        }
      }
    }
  }, {
    key: '_updateParticles',
    value: function _updateParticles(now) {
      this._world.obsParticles.forEach(function (particle) {
        var alpha = (now - particle.createTime) / _config2.default.COIN_PARTICLE.TIME;
        particle.alpha = 1 - alpha;
        particle.position.SELF_ADD(particle.vec);

        var c = Math.cos(particle.rotate);
        var s = Math.sin(particle.rotate);
        var dx = particle.path[2] - particle.path[0];
        var dy = particle.path[3] - particle.path[1];
        particle.path[2] = particle.path[0] + dx * c - dy * s;
        particle.path[3] = particle.path[1] + dy * c + dx * s;
      });
    }
  }, {
    key: '_removeParticles',
    value: function _removeParticles(now) {
      var particles = this._world.obsParticles || [];
      for (var i = particles.length - 1; i >= 0; i--) {
        if (particles[i].createTime + _config2.default.COIN_PARTICLE.TIME < now) {
          particles[i].sprite && particles[i].sprite.destroy();
          particles.splice(i, 1);
        }
      }
    }
  }]);

  return ObsParticleSystem;
}(_ECS.System);

exports.default = ObsParticleSystem;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ObstacleSystem = function (_System) {
  _inherits(ObstacleSystem, _System);

  function ObstacleSystem() {
    _classCallCheck(this, ObstacleSystem);

    return _possibleConstructorReturn(this, (ObstacleSystem.__proto__ || Object.getPrototypeOf(ObstacleSystem)).apply(this, arguments));
  }

  _createClass(ObstacleSystem, null, [{
    key: 'init',
    value: function init() {
      // 记录撞了多少次障碍物
      this._world.touchedObstacle = 0;
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      if (this._world.ball.buffManager[_config2.default.BUFF.SHIELD]) {
        if (this._world.touchObstacle) {
          _network2.default.obsCmd(this._world.touchObstacle.idx);
          this._world.crashObs = this._world.touchObstacle;
          this._world.touchObstacle.crashed = true;
          this._world.touchObstacle.hidden = true;
          this._world.touchObstacle = undefined;
        }
        return;
      }
      if (this._world.touchObstacle) {
        _network2.default.obsCmd(this._world.touchObstacle.idx);
        this._world.ball.hit = true;
        var obstacle = this._world.touchObstacle;
        obstacle.hit = true;
        if (!obstacle.hidden) {
          // this._world.score -= 5
          // if (this._world.score < 0) {
          //   emitter.emit(config.GAME_EVENT.GAME_END, this._world.mode)
          // }
          this._world.touchedObstacle++;

          //if (!this._world.ball.buffManager[config.BUFF.SHIELD]) {
          // this._world.hearts = 0
          this._world.hearts -= _config2.default.OBS_HEART;
          //}
          //this._world.hearts = -1
          if (wx.vibrateLong) {
            wx.vibrateLong();
          }
          obstacle.hidden = true;
        }
        this._world.touchObstacle = undefined;
      }
    }
  }]);

  return ObstacleSystem;
}(_ECS.System);

exports.default = ObstacleSystem;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(8);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PacmanSystem = function (_System) {
  _inherits(PacmanSystem, _System);

  function PacmanSystem() {
    _classCallCheck(this, PacmanSystem);

    return _possibleConstructorReturn(this, (PacmanSystem.__proto__ || Object.getPrototypeOf(PacmanSystem)).apply(this, arguments));
  }

  _createClass(PacmanSystem, null, [{
    key: 'init',
    value: function init() {
      var ball = this._world.ball;
      this._prevPoint = (0, _utils2.translateCoordinate)(this._world, ball.index, ball.x, ball.y);
      this._prevPointOnLine = (0, _utils2.translateCoordinate)(this._world, ball.index, ball.x, 0);

      this._max = this._degree = _config2.default.BALL.MOUTH_RADIUS_MAX;
      this._min = _config2.default.BALL.MOUTH_RADIUS_MIN;
      this._delta = _config2.default.BALL.DELTA * 2;
      this._sign = 1;

      ball.startAngle = 360 - this._degree / 2;
      ball.endAngle = this._degree / 2;
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      var ball = this._world.ball;

      if (this._world.pathes === undefined) {
        return;
      }

      var currentPointOnLine = (0, _utils2.translateCoordinate)(this._world, ball.index, ball.x, 0);
      this._world.lineDirection = currentPointOnLine.SUB(this._prevPointOnLine);
      this._prevPointOnLine = currentPointOnLine;

      var currentPoint = ball.position;
      if (currentPoint) {
        var direction = currentPoint.SUB(this._prevPoint);
        if (direction.length) {
          ball.direction = direction;
          this._prevPoint = currentPoint;
        }
      }

      if (this._world.mode === _config2.default.GAME_MODE.REAL) {
        this._degree += this._delta * this._sign;
        ball.startAngle = 360 - this._degree / 2;
        ball.endAngle = this._degree / 2;

        if (this._degree >= this._max) {
          this._sign = -1;
        } else if (this._degree <= this._min) {
          this._sign = 1;
        }
      }
    }
  }]);

  return PacmanSystem;
}(_ECS.System);

exports.default = PacmanSystem;

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ParticleSystem = function (_System) {
  _inherits(ParticleSystem, _System);

  function ParticleSystem() {
    _classCallCheck(this, ParticleSystem);

    return _possibleConstructorReturn(this, (ParticleSystem.__proto__ || Object.getPrototypeOf(ParticleSystem)).apply(this, arguments));
  }

  _createClass(ParticleSystem, null, [{
    key: 'init',
    value: function init() {
      this._world.particles = [];
      this._count = 0;
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      return;
      if (this._world.mode !== _config2.default.GAME_MODE.REAL || this._world.countDown) {
        return;
      }
      if (!this._lastBallPosition) {
        this._lastBallPosition = this._world.ball.position;
        return;
      }
      this._removeParticles(now);
      this._updateParticles(now);
      this._createParticles(now);
      this._lastBallPosition = this._world.ball.position;
    }
  }, {
    key: '_createParticles',
    value: function _createParticles(now) {
      ++this._count;
      if (this._count >= _config2.default.PARTICLE.FRAME_PRE_NUMBER) {
        this._count = 0;
        var startPosition = this._world.ball.position.ADD(new _utils.Point(0, (0, _utils.random)() * _config2.default.BALL.SIZE).ROTATE((0, _utils.random)() * Math.PI * 2));
        var vec = this._lastBallPosition.SUB(startPosition).normalize().MUL(this._world.runVec * (0, _utils.random)());
        var poly = [0, 0];
        poly.push((0, _utils.random)(-_config2.default.PARTICLE.SIZE, _config2.default.PARTICLE.SIZE));
        poly.push((0, _utils.random)(-_config2.default.PARTICLE.SIZE, _config2.default.PARTICLE.SIZE));
        poly.push((0, _utils.random)(-_config2.default.PARTICLE.SIZE, _config2.default.PARTICLE.SIZE));
        poly.push((0, _utils.random)(-_config2.default.PARTICLE.SIZE, _config2.default.PARTICLE.SIZE));
        var color = this._world.continuousCombo > _config2.default.COMBO_LOW_SCORE ? 'hsla(' + (0, _utils.random)(300, 540) + ', 100%, 40%, 1)' : _config2.default.PARTICLE.COLOR;

        this._world.particles.push({
          position: startPosition,
          vec: vec,
          poly: poly,
          createTime: now,
          color: color
        });
      }
    }
  }, {
    key: '_updateParticles',
    value: function _updateParticles(now) {
      this._world.particles.forEach(function (particle) {
        particle.position.SELF_ADD(particle.vec);
      });
    }
  }, {
    key: '_removeParticles',
    value: function _removeParticles(now) {
      var particles = this._world.particles || [];
      for (var i = particles.length - 1; i >= 0; i--) {
        if (particles[i].createTime + _config2.default.PARTICLE.TIME < now) {
          particles[i].sprite && particles[i].sprite.destroy();
          particles.splice(i, 1);
        }
      }
    }
  }]);

  return ParticleSystem;
}(_ECS.System);

exports.default = ParticleSystem;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PathSystem = function (_System) {
  _inherits(PathSystem, _System);

  function PathSystem() {
    _classCallCheck(this, PathSystem);

    return _possibleConstructorReturn(this, (PathSystem.__proto__ || Object.getPrototypeOf(PathSystem)).apply(this, arguments));
  }

  _createClass(PathSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      var pathes = this._world.pathes;
      pathes.lineWidth += pathes.dWidth;
      if (pathes.lineWidth > _config2.default.MAX_LINE_WIDTH || pathes.lineWidth < _config2.default.MIN_LINE_WIDTH) {
        pathes.dWidth = -pathes.dWidth;
      }
    }
  }]);

  return PathSystem;
}(_ECS.System);

exports.default = PathSystem;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _init = __webpack_require__(14);

var _gameHelper = __webpack_require__(20);

var _renderSystem = __webpack_require__(26);

var _renderSystem2 = _interopRequireDefault(_renderSystem);

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PreloadSystem = function (_System) {
  _inherits(PreloadSystem, _System);

  function PreloadSystem() {
    _classCallCheck(this, PreloadSystem);

    return _possibleConstructorReturn(this, (PreloadSystem.__proto__ || Object.getPrototypeOf(PreloadSystem)).apply(this, arguments));
  }

  _createClass(PreloadSystem, null, [{
    key: 'init',
    value: function init() {
      this._addTouch = false;

      _utils.emitter.on(_config2.default.GAME_EVENT.GAME_PRELOAD, this._preloadHandler.bind(this));
      _utils.emitter.on(_config2.default.GAME_EVENT.GAME_PATH_END, this._pathEndHandler.bind(this));
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      _utils.emitter.removeAllListeners(_config2.default.GAME_EVENT.GAME_PRELOAD);
      _utils.emitter.removeAllListeners(_config2.default.GAME_EVENT.GAME_PATH_END);
    }
  }, {
    key: '_pathEndHandler',
    value: function _pathEndHandler() {
      // 计算歌曲播放前倒计时的path
      var ball = this._world.ball;
      var pathes = this._world.pathes;

      // 并移除已经走过的path
      // todo: 不应该把start和end保存到pathes
      pathes.splice(pathes.end + 1);
      var pathMoved = pathes.splice(0, pathes.start);

      // 计算新pathes
      var lastPath = pathes[pathes.length - 1];
      var newPathes = (0, _gameHelper.generateLines)(this._world, lastPath.endPoint, lastPath.rotation);
      pathes.start -= pathMoved.length;
      pathes.end -= pathMoved.length;
      pathes.push.apply(pathes, _toConsumableArray(newPathes));

      var distanceMoved = pathMoved.reduce(function (result, _ref) {
        var length = _ref.length;
        return result + length;
      }, 0);
      ball.distance -= distanceMoved;
      ball.index -= pathMoved.length;
    }
  }, {
    key: '_preloadHandler',
    value: function _preloadHandler(msg) {
      var _this2 = this;

      console.log('********** preload handler', msg);
      var that = this;
      var prepareMusic = (0, _utils.createWording)('正在准备音乐', false);

      var handler = setTimeout(function () {
        if (prepareMusic) {
          prepareMusic.destroy();
          prepareMusic = undefined;
          if (that._world.songConfig) {
            _utils.File.removeFile(that._world.songConfig.id);
          }

          var reset = (0, _utils.createWording)('准备音乐失败，正在重启');
          setTimeout(function () {
            reset.destroy();
            reset = undefined;
            _utils.emitter.emit('error', 'play and onPlay callback fail');
          }, 2000);
        }
      }, 10000);

      if (this._world.audioCtx) {
        this._world.audioCtx.onPlayOnceCb = function () {
          console.log('********** on play once cb');
          _this2.preload();
          if (prepareMusic) {
            clearTimeout(handler);
            prepareMusic.destroy();
            prepareMusic = undefined;
          }
        };
        this._world.audioCtx.play();
      }
    }
  }, {
    key: 'preload',
    value: function preload() {
      (0, _init.initSong)(this._world);
      this._world.mode = _config2.default.GAME_MODE.REAL;
      //console.log('game preload')

      // 计算歌曲播放前倒计时的path
      var ball = this._world.ball;
      var pathes = this._world.pathes;

      // 并移除已经走过的path
      // todo: 不应该把start和end保存到pathes
      pathes.splice(pathes.end + 1);
      var pathMoved = pathes.splice(0, pathes.start);

      // 计算新pathes
      var lastPath = pathes[pathes.length - 1];
      var newPathes = (0, _gameHelper.generateLines)(this._world, lastPath.endPoint, lastPath.rotation);
      pathes.start -= pathMoved.length;
      pathes.end -= pathMoved.length;
      pathes.push.apply(pathes, _toConsumableArray(newPathes));

      var distanceMoved = pathMoved.reduce(function (result, _ref2) {
        var length = _ref2.length;
        return result + length;
      }, 0);
      ball.distance -= distanceMoved;
      ball.index -= pathMoved.length;
      ball.songDistance = 0;

      // 开始倒计时的总时长
      //const preparationDuration = config.PREPARATION_DURATION + (delayTime - config.GEN_TIME)
      var preparationDuration = _config2.default.PREPARATION_DURATION + (150 - _config2.default.GEN_TIME);
      // const preparationDistance = preparationDuration * config.RUN_VEC
      //const preparationDistance = config.PREPARATION_DURATION * config.RUN_VEC
      var preparationDistance = 0;

      // 已走过的总长
      this._world.preparationDistance = ball.distance;

      this._world.realDistance = this._world.totalDistance;

      // 重新生成金币和障碍物

      var _generateCoins = (0, _gameHelper.generateCoins)(this._world, ball.distance + preparationDistance),
          coins = _generateCoins.coins,
          trueCoins = _generateCoins.trueCoins;
      //console.log('***************************')
      //console.log(this._world.duration)
      //console.log(this._world.totalDistance)
      //console.log(preparationDistance)
      //console.log(ball.distance)
      //console.log((coins[0].distance - ball.distance) / config.RUN_VEC / 1000)
      //console.log('***************************')
      // this._world.coins = generateCoins(this._world, ball.distance + preparationDistance)


      this._world.coins = coins;
      this._world.trueCoins = trueCoins || [];
      this._world.trueCoins.start = this._world.trueCoins.end = 0;
      this._world.coins.start = this._world.coins.end = 0;

      this._world.obstacles = (0, _gameHelper.generateObstacles)(this._world, ball.distance + preparationDistance);
      this._world.obstacles.start = this._world.obstacles.end = 0;

      // this._world.mileStones = generateMileStones(this._world, ball.distance + preparationDistance)
      // this._world.mileStones.start = this._world.mileStones.end = 0

      var coinLength = this._world.coins.length;
      //console.log(this._world.songConfig.difficulty)
      if (coinLength < 100) {
        var noteScoreLimit = Math.ceil(coinLength / 10);
        this._world.scoreLimit = noteScoreLimit * (coinLength - coinLength % 10) / 2 + coinLength % 10 * noteScoreLimit - 1;
      } else {
        this._world.scoreLimit = 449 + (coinLength - 100) * 10;
      }
      this._world.scoreLimit *= _config2.default.SCORE_LIMIT[this._world.songConfig.difficulty - 1] * 1.5;

      console.log('scoreLimit', this._world.scoreLimit);

      ball.buffManager = {};
      this._world.buffSprites = {};

      this._world.movingCoins = [];

      // reset counter
      this._world.score = 0;
      this._world.combo = 0;
      this._world.continuousCombo = 0;
      this._world.hearts = _config2.default.HEART_NUMBER;

      // 开始倒计时 || 0
      this._preparationCounter = preparationDuration;
      if (_utils.Live.living && !_utils.Live.playing) {
        _utils.Live.setStartTime(Date.now());
      }
      _network2.default.startCmd();
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      if (this._world.mode !== _config2.default.GAME_MODE.REAL) {
        return;
      }

      if (this._preparationCounter !== undefined) {
        this._preparationCounter -= dt;

        var counter = Math.ceil(this._preparationCounter / 1000);
        if (counter !== this._lastCounter) {
          this._lastCounter = counter;
          this._world.countDown = {
            startTime: now,
            number: counter
          };
        }

        if (this._preparationCounter < 0) {
          this._world.start();
          if (this._world.wording) {
            this._world.wording.destroy();
            this._world.wording = undefined;
          }
          this._preparationCounter = undefined;
          this._world.countDown = undefined;
          this._lastCounter = undefined;
        }
      }
    }
  }]);

  return PreloadSystem;
}(_ECS.System);

exports.default = PreloadSystem;

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderBackground = function renderBackground(world) {
  if (!world.backgroundSprite) {
    var sp = new Laya.Sprite();
    Laya.stage.addChild(sp);
    sp.pos(0, 0);
    sp.graphics.drawRect(0, 0, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT, _config2.default.BACKGROUND_COLOR);
    sp.width = _config2.default.SCREEN_WIDTH;
    sp.height = _config2.default.SCREEN_HEIGHT;
    world.backgroundSprite = sp;

    //const entity = new Entity()
    //.addComponent('TouchRangeRect', new Rect(0, 0, config.SCREEN_WIDTH, config.SCREEN_HEIGHT))
    //entity.touchStart = () => {
    //if (world.mode === config.GAME_MODE.REAL) {
    //world.cmd = config.CMD.TAP
    //}
    //}
    //entity.touchEnd = () => {
    //if (world.mode === config.GAME_MODE.REAL) {
    //world.cmd = config.CMD.NONE
    //}
    //}
    //world.addEntity(entity)

    sp.on(Laya.Event.MOUSE_DOWN, undefined, function () {
      if (_utils.Live.living && !_utils.Live.playing) {
        return;
      }
      if (world.mode === _config2.default.GAME_MODE.REAL) {
        world.cmd = _config2.default.CMD.TAP;
        world.lastTapTime = Date.now();
      }
    });
    sp.on(Laya.Event.MOUSE_UP, undefined, function () {
      if (_utils.Live.living && !_utils.Live.playing) {
        return;
      }
      if (world.mode === _config2.default.GAME_MODE.REAL) {
        world.cmd = _config2.default.CMD.NONE;
      }
    });
  }
};

exports.default = renderBackground;

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lastColor = void 0;
var renderBall = function renderBall(world, now, dt) {
  var camera = world.camera;
  var ball = world.ball;

  var color = (0, _utils.inBackground)() ? (0, _utils.alphaColor)(ball.color, _config2.default.BACKGROUND_ALPHA) : ball.color;

  if (world.mode === _config2.default.GAME_MODE.PLAYING_DEAD_ANIMATION) {
    ball.sprite.graphics.clear();
    // ball.hitSprite.graphics.clear()
    return;
  }

  if (!ball.sprite) {
    console.log('creat ball');
    var sp = new Laya.Sprite();
    Laya.stage.addChild(sp);
    sp.graphics.drawCircle(0, 0, ball.size, color);
    sp.zOrder = 1;

    //const mouthSp = new Laya.Sprite()
    //mouthSp.zOrder = 99
    //sp.mouthSp = mouthSp
    //sp.addChild(mouthSp)

    ball.sprite = sp;
    if (!ball.notLoading) {
      _utils.emitter.emit('ballCreated');
    }
  } else if (color !== lastColor) {
    lastColor = color;
    ball.sprite.graphics.clear();
    ball.sprite.graphics.drawCircle(0, 0, ball.size, color);
  }
  var x = ball.position.x - camera.leftTopPoint.x;
  var y = ball.position.y - camera.leftTopPoint.y;
  ball.sprite.pos(x, y);

  if (ball.hit) {
    ball.hitTime = _config2.default.BALL.HIT_TIME;
    ball.hit = false;
    if (!ball.hitSprite) {
      var _sp = new Laya.Sprite();
      Laya.stage.addChild(_sp);
      _sp.zOrder = 1;
      ball.hitSprite = _sp;

      //const mouthSp = new Laya.Sprite()
      //mouthSp.zOrder = 99
      //sp.mouthSp = mouthSp
      //sp.addChild(mouthSp)
    }
  }

  if (ball.direction) {
    var faceTo = Math.atan2(ball.direction.y, ball.direction.x) / Math.PI * 180;

    ball.sprite.rotation = faceTo;
    if (ball.hitSprite) {
      ball.hitSprite.rotation = faceTo;
    }
  }

  if (ball.hitTime > 0 && ball.hitSprite) {
    ball.hitSprite.pos(x, y);
    var rate = ball.hitTime / _config2.default.BALL.HIT_TIME;
    ball.hitSprite.graphics.clear();
    ball.hitSprite.graphics.drawCircle(0, 0, ball.size, 'rgba(' + _config2.default.BALL.HIT_COLOR + ', ' + rate + ')');
    ball.hitTime -= dt;

    //ball.hitSprite.mouthSp.graphics.clear()
    //if (world.mode === config.GAME_MODE.REAL) {
    //const ballRadius = (world.continuousCombo >= config.COMBO_LOW_SCORE ? ball.size * 1.3 : ball.size)
    //ball.hitSprite.mouthSp.graphics.drawPie(0, 0, ballRadius + 1, ball.startAngle, ball.endAngle, config.BACKGROUND_COLOR)
    //}
  } else {
    if (ball.hitSprite) {
      ball.hitSprite.destroy();
      ball.hitSprite = undefined;
    }
  }

  var shieldRemainTime = world.ball.buffManager[_config2.default.BUFF.SHIELD];
  if (shieldRemainTime) {
    if (!ball.shieldSprite) {
      var _sp2 = new Laya.Sprite();
      Laya.stage.addChild(_sp2);
      var h = _config2.default.BALL.SHIELD_SIZE / 2;
      _sp2.graphics.drawTexture(world.assets.def, -h, -h, h * 2, h * 2);
      // sp.blinkInterval = [6, 12, 18]
      _sp2.blinkDuration = 6;
      _sp2.blinkCounter = 0;
      ball.shieldSprite = _sp2;
    }
    ball.shieldSprite.pos(x, y);

    if (shieldRemainTime < 3000) {
      var _sp3 = ball.shieldSprite;
      var blinkInterval = 6 * Math.ceil(shieldRemainTime / 1000);
      if (_sp3.blinkCounter < blinkInterval) {
        _sp3.blinkCounter++;
      } else {
        _sp3.blinkCounter = 0;
        _sp3.visible = !_sp3.visible;
      }
    }
  } else {
    if (ball.shieldSprite) {
      ball.shieldSprite.destroy();
      ball.shieldSprite = undefined;
    }
  }

  if (world.continuousCombo >= _config2.default.COMBO_LOW_SCORE) {
    if (!ball.flickerSprite) {
      var _sp4 = new Laya.Sprite();
      Laya.stage.addChild(_sp4);
      ball.flickerSprite = _sp4;
    }

    //const gradient = canvas.getContext().createRadialGradient(x, y, ball.size * 0.8, x, y, ball.size * 1.5)
    //gradient.addColorStop(0, config.BALL.FLICKER_COLOR)
    //gradient.addColorStop(1, config.BALL.FLICKER_COLOR_END)
    //ball.flickerSprite.graphics.clear()
    //ball.flickerSprite.graphics.drawCircle(0, 0, ball.size * 1.3, gradient)
    //ball.flickerSprite.pos(x, y)
  } else {
    if (ball.flickerSprite) {
      ball.flickerSprite.destroy();
      ball.flickerSprite = undefined;
    }
  }

  //ball.sprite.mouthSp.graphics.clear()
  //if (world.mode === config.GAME_MODE.REAL) {
  //const ballRadius = (world.continuousCombo >= config.COMBO_LOW_SCORE ? ball.size * 1.3 : ball.size)
  //ball.sprite.mouthSp.graphics.drawPie(0, 0, ballRadius + 1, ball.startAngle, ball.endAngle, config.BACKGROUND_COLOR)
  //}
};

exports.default = renderBall;

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _buffDuration = {};
for (var i in _config2.default.BUFF) {
  _buffDuration[_config2.default.BUFF[i]] = _config2.default.BUFF_DURATION[i] || _config2.default.BUFF_DURATION.DEFAULT;
}

var renderBuffs = function renderBuffs(world, now, dt) {
  var ball = world.ball;

  var buffs = Object.keys(ball.buffManager).sort(function (a, b) {
    return ball.buffManager[a] - ball.buffManager[b];
  });

  if (!buffs.length) {
    return;
  }

  var buffConfig = _config2.default.BUFF_PANEL;
  var buffIconArgs = (0, _utils.getScaleArgs)(buffConfig.ICON);
  var buffRingArgs = (0, _utils.getScaleArgs)(buffConfig.RING);

  var radius = buffIconArgs.RADIUS + buffRingArgs.RADIUS;
  var buffIconOffset = buffRingArgs.RADIUS / 2;

  buffs.forEach(function (i, index) {
    var buffDuration = _buffDuration[i];
    var buffPastedTime = buffDuration - ball.buffManager[i];

    if (buffPastedTime < buffDuration) {
      var startAngle = 270;
      var endAngle = (parseInt(buffPastedTime / buffDuration * 360) + startAngle) % 360;

      if (!world.buffSprites['buffSprite' + i]) {
        // debugger
        world.buffSprites['buffSprite' + i] = new Laya.Sprite();
      }

      var sp = world.buffSprites['buffSprite' + i];

      sp.graphics.clear();
      // sp.graphics.drawPie(100, 100, 100, startAngle, endAngle, '#AAFFFF')
      sp.graphics.drawPie(radius, radius, radius, endAngle, startAngle, world.mainColor);
      sp.graphics.drawCircle(radius, radius, buffIconArgs.RADIUS, _config2.default.BACKGROUND_COLOR);
      sp.graphics.drawTexture(world.assets.buffIcon[i], radius / 2, radius / 2, radius, radius);

      sp.pos(buffRingArgs.X, radius * 2 * index + buffIconArgs.Y * index + buffRingArgs.Y);

      Laya.stage.addChild(sp);
    } else {
      if (world.buffSprites['buffSprite' + i]) {
        world.buffSprites['buffSprite' + i].destroy();
        world.buffSprites['buffSprite' + i] = null;
      }
    }
  });
};

exports.default = renderBuffs;

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var renderCoinParticles = function renderCoinParticles(world) {
  var camera = world.camera;
  world.coinParticles.forEach(function (particle) {
    if (!particle.sprite) {
      var sp = new Laya.Sprite();
      Laya.stage.addChild(sp);
      if (particle.type !== 'border') {
        sp.graphics.drawPoly(0, 0, particle.poly, particle.color);
      }

      particle.sprite = sp;
    }
    if (particle.type === 'border') {
      var _particle$sprite;

      particle.sprite.graphics.clear();
      particle.sprite.graphics.drawPoly(0, 0, particle.poly, null, particle.color, 3);
      (_particle$sprite = particle.sprite).pos.apply(_particle$sprite, _toConsumableArray(particle.position.SUB(camera.leftTopPoint).args));
    } else {
      var _particle$sprite2;

      (_particle$sprite2 = particle.sprite).pos.apply(_particle$sprite2, _toConsumableArray(particle.position.SUB(camera.leftTopPoint).args));
    }
    particle.sprite.alpha = particle.alpha;
    //console.log(...particle.position.SUB(camera.leftTopPoint).args)
  });
};

exports.default = renderCoinParticles;

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var backgroundCameraWidth = _config2.default.SCREEN_WIDTH * 2;
var backgroundCameraHeight = _config2.default.SCREEN_HEIGHT * 2;

var MAX_SCALE_RATIO = 0.3;
var MIN_SCALE_RATIO = 0.1;

var renderCoins = function renderCoins(world, dt) {
  var coins = world.coinStars;
  var flyingCoinStars = world.flyingCoinStars;
  // const camera = world.camera

  var backgroundCameraLeftTopPoint = new _utils.Point(-backgroundCameraWidth, -backgroundCameraHeight);

  // const backgroundCameraLeftTopPoint = camera.leftTopPoint.clone
  // backgroundCameraLeftTopPoint.x -= backgroundCameraWidth
  // backgroundCameraLeftTopPoint.y -= backgroundCameraHeight

  for (var i = 0; i < flyingCoinStars.length; i++) {
    var coin = flyingCoinStars[i];

    if (!coin.sprite) {
      var sp = new Laya.Sprite();

      sp.alpha = coin.alpha;
      coin.sprite = sp;
      coin.bleakCounter = 10;
      Laya.stage.addChild(sp);
    }

    // if (coin.flyTime > 0) {
    //   // const posX = (coin.position.x - backgroundCameraLeftTopPoint.x) / 5
    //   // const posY = (coin.position.y - backgroundCameraLeftTopPoint.y) / 5
    //   // coin.sprite.pos(posX, posY)
    //   // coin.flyTime -= dt
    // } else {
    //   const vec = world.lineDirection || new Point(0, 0)
    //   coin.position.SELF_ADD(vec.normalize().SELF_MUL(4))
    //   coin.sprite.alpha -= 0.01

    //   if (coin.sprite.alpha < 0.1) {
    //     coin.sprite.destroy()
    //     coins.splice(i, 1)
    //     i--
    //   }
    // }

    var posX = (coin.position.x - backgroundCameraLeftTopPoint.x) / 5;
    var posY = (coin.position.y - backgroundCameraLeftTopPoint.y) / 5;
    coin.sprite.pos(posX, posY);

    coin.sprite.graphics.clear();
    //coin.sprite.graphics.drawPoly(0, 0, scalePoly(coin), coin.color)
    coin.sprite.graphics.drawPoly(0, 0, scalePoly(coin), '#FFFFFF');
  }

  for (var _i = 0; _i < coins.length; _i++) {
    var _coin = coins[_i];

    // coin.position.SELF_ADD(vec)

    var _posX = (_coin.position.x - backgroundCameraLeftTopPoint.x) / 5;
    var _posY = (_coin.position.y - backgroundCameraLeftTopPoint.y) / 5;
    _coin.sprite.pos(_posX, _posY);
    // coin.flyTime -= dt

    if (_coin.bleakCounter) {
      _coin.bleakCounter--;
    } else {
      _coin.sprite.alpha -= 0.01;
      _coin.bleakCounter = 10;

      if (_coin.sprite.alpha < 0.1) {
        _coin.sprite.destroy();
        coins.splice(_i, 1);
        _i--;
      }
    }

    _coin.sprite.graphics.clear();
    _coin.sprite.graphics.drawPoly(0, 0, scalePoly(_coin), '#FFFFFF');
  }
};

function scalePoly(coin) {
  var poly = coin.poly.slice();

  if (coin.scaleRatio > MAX_SCALE_RATIO) {
    coin.sign = -1;
  } else if (coin.scaleRatio < MIN_SCALE_RATIO) {
    coin.sign = 1;
  }

  coin.scaleRatio += 0.006 * coin.sign;
  var ratio = coin.scaleRatio;

  if (coin.coinStarType === 'cross') {

    return coin.poly.map(function (item) {
      return item * ratio;
    });
  } else {

    for (var i = 0; i < 8; i += 2) {
      poly[i] = poly[i] * ratio;
      poly[i + 1] = poly[i + 1] * ratio;
    }

    return poly;
  }
}

exports.default = renderCoins;

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderCoins = function renderCoins(world) {
  var coins = world.coins;
  var camera = world.camera;

  while (coins.start < coins.end && !camera.contain(coins[coins.start].position)) {
    coins[coins.start].sprite.destroy();
    coins[coins.start].sprite = null;
    coins.start++;
  }

  while (coins.end < coins.length && camera.contain(coins[coins.end].position)) {
    coins.end++;
  }

  var coinSize = _config2.default.COIN.SIZE * 2;
  for (var i = coins.start; i < coins.end; ++i) {
    var coin = coins[i];
    if (!coin.sprite) {
      var sp = new Laya.Sprite();
      // const color = world.continuousCombo > config.COMBO_LOW_SCORE ? coin.color :  world.mainColor
      // coin.color = color
      // sp.graphics.drawPoly(0, 0, coin.poly, color)
      var asset = world.continuousCombo > _config2.default.COMBO_LOW_SCORE ? coin.asset : world.assets.levelNotes[world.level];
      sp.graphics.drawTexture(asset, -coinSize * 0.33, -coinSize * 0.33, coinSize * 1.66, coinSize * 1.66);

      coin.sprite = sp;
      Laya.stage.addChild(sp);
    }
    if (coin.hidden) {
      coin.sprite && coin.sprite.destroy();
    } else {
      if (coin.type !== 'COIN') {
        coin.sprite.graphics.clear();
        // coin.sprite.rotation = coin.rotation
        coin.sprite.graphics.drawTexture(world.assets.buffIcon[_config2.default.BUFF[coin.type]], -coinSize * 0.33, -coinSize * 0.33, coinSize * 1.66, coinSize * 1.66);
        coin.sprite.pos(coin.centroid.x - camera.leftTopPoint.x, coin.centroid.y - camera.leftTopPoint.y);
        continue;
      } else if (coin.miss && !coin.missedColor) {
        coin.missedColor = true;
        coin.sprite.graphics.clear();
        coin.sprite.graphics.drawTexture(world.assets.noteMissed, -coinSize * 0.33, -coinSize * 0.33, coinSize * 1.66, coinSize * 1.66);
        // coin.sprite.graphics.drawPoly(0, 0, coin.poly, config.COIN.MISS_COLOR)
      }
      coin.sprite.pos(coin.position.x - camera.leftTopPoint.x, coin.position.y - camera.leftTopPoint.y);
    }
  }
};

exports.default = renderCoins;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var delta = _config2.default.COMBO_SHADE_SIZE - _config2.default.COMBO_SIZE;

var renderCombo = function renderCombo(world, now, dt) {
  if (world.combo > 0) {
    if (!world.comboNumberSprite) {
      var sp = new Laya.Text();
      sp.width = _config2.default.SCREEN_WIDTH;
      sp.pos(_config2.default.COMBO_NUMBER.X, _config2.default.COMBO_NUMBER.Y + (_config2.default.COMBO_NUMBER.LINE_HEIGHT - _config2.default.COMBO_NUMBER.SIZE) / 2);
      sp.align = 'center';
      sp.fontSize = _config2.default.COMBO_NUMBER.SIZE;
      sp.font = 'Helvetica';

      Laya.stage.addChild(sp);

      world.comboNumberSprite = sp;
    }

    if (!world.comboSprite) {
      var _sp = new Laya.Text();
      _sp.width = _config2.default.SCREEN_WIDTH;
      _sp.pos(_config2.default.COMBO.X, _config2.default.COMBO.Y + (_config2.default.COMBO.LINE_HEIGHT - _config2.default.COMBO.SIZE) / 2);
      _sp.align = 'center';
      _sp.fontSize = _config2.default.COMBO.SIZE;
      _sp.text = '连击';
      _sp.font = 'Helvetica';

      Laya.stage.addChild(_sp);

      world.comboSprite = _sp;
    }

    if (world.continuousCombo >= _config2.default.COMBO_HIGH_SCORE) {
      world.comboSprite.color = _config2.default.COMBO_HIGH_COLOR;
      world.comboNumberSprite.color = _config2.default.COMBO_HIGH_COLOR;
    } else if (world.continuousCombo >= _config2.default.COMBO_LOW_SCORE) {
      world.comboSprite.color = world.mainColor;
      world.comboNumberSprite.color = world.mainColor;
    } else {
      world.comboSprite.color = _config2.default.COMBO_COLOR;
      world.comboNumberSprite.color = _config2.default.COMBO_COLOR;
    }

    if (world.updateCombo) {
      world.lastUpdateComboTime = now;
      world.updateCombo = false;
    }

    if (world.lastUpdateComboTime) {
      var remainTime = _config2.default.COMBO_ANIMATION_DURATION - (now - world.lastUpdateComboTime);
      if (remainTime > 0) {
        var rate = remainTime / _config2.default.COMBO_ANIMATION_DURATION;
        rate = 1 - (1 - rate) * 0.6;
        //world.comboSprite.fontSize = config.COMBO.SIZE * config.COMBO_ANIMATION_RATE + (config.COMBO.SIZE * rate) * (1 - config.COMBO_ANIMATION_RATE)
        //world.comboNumberSprite.fontSize = config.COMBO_NUMBER.SIZE * config.COMBO_ANIMATION_RATE + (config.COMBO_NUMBER.SIZE * rate) * (1 - config.COMBO_ANIMATION_RATE)
        world.comboSprite.alpha = rate;
        world.comboNumberSprite.alpha = rate;
      } else {
        world.lastUpdateComboTime = null;
        world.comboSprite.alpha = 0;
        world.comboNumberSprite.alpha = 0;
      }
    }

    world.comboNumberSprite.text = 'x' + world.continuousCombo;
  }
};

exports.default = renderCombo;

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var renderComboBorder = function renderComboBorder(world, now, dt) {
  if (world.continuousCombo >= _config2.default.COMBO_LOW_SCORE) {
    if (!world.comboBorderSprite) {
      var sps = [];
      for (var i = 0; i < 4; i++) {
        var _sp$graphics;

        var sp = new Laya.Sprite();
        var c = _config2.default.COMBO_BORDER[i];
        (_sp$graphics = sp.graphics).drawRect.apply(_sp$graphics, _toConsumableArray(c).concat([world.mainColor]));
        Laya.stage.addChild(sp);

        sps.push(sp);
      }
      world.comboBorderSprite = sps;
    }

    if (world.continuousCombo === _config2.default.COMBO_LOW_SCORE) {
      if (world.comboBorderSprite) {
        for (var _i = 0; _i < world.comboBorderSprite.length; _i++) {
          var _sp$graphics2;

          var _c = _config2.default.COMBO_BORDER[_i];
          var _sp = world.comboBorderSprite[_i];
          _sp.graphics.clear();
          (_sp$graphics2 = _sp.graphics).drawRect.apply(_sp$graphics2, _toConsumableArray(_c).concat([world.mainColor]));
        }
      }
    }

    if (world.continuousCombo === _config2.default.COMBO_HIGH_SCORE) {
      if (world.comboBorderSprite) {
        for (var _i2 = 0; _i2 < world.comboBorderSprite.length; _i2++) {
          var _sp2$graphics;

          var _c2 = _config2.default.COMBO_BORDER[_i2];
          var _sp2 = world.comboBorderSprite[_i2];
          _sp2.graphics.clear();
          (_sp2$graphics = _sp2.graphics).drawTexture.apply(_sp2$graphics, [world.assets.combo[_i2]].concat(_toConsumableArray(_c2)));
        }
      }
    }

    if (world.updateComboBorder) {
      world.lastUpdateComboBorderTime = now;
      world.updateComboBorder = false;
    }

    if (world.lastUpdateComboBorderTime) {
      var remainTime = _config2.default.COMBO_BORDER_ANIMATION - (now - world.lastUpdateComboBorderTime);
      if (remainTime > 0) {
        var rate = remainTime / _config2.default.COMBO_BORDER_ANIMATION;
        for (var _i3 = 0; _i3 < world.comboBorderSprite.length; _i3++) {
          var _sp3 = world.comboBorderSprite[_i3];
          _sp3.alpha = rate;
        }
      } else {
        for (var _i4 = 0; _i4 < world.comboBorderSprite.length; _i4++) {
          var _sp4 = world.comboBorderSprite[_i4];
          _sp4.alpha = 0;
        }
      }
    }
  } else {
    if (world.comboBorderSprite) {
      for (var _i5 = 0; _i5 < world.comboBorderSprite.length; _i5++) {
        var _sp5 = world.comboBorderSprite[_i5];
        _sp5.destroy();
      }
      world.comboBorderSprite = undefined;
    }
  }
};

//const renderComboBorder = (world, now, dt) => {
//if (world.continuousCombo >= config.COMBO_HIGH_SCORE) {
//const c = config.COMBO_BORDER
//if (!world.comboGradientBorders) {
//const gusp = new Laya.Sprite()
//const gdsp = new Laya.Sprite()
//const glsp = new Laya.Sprite()
//const grsp = new Laya.Sprite()
//Laya.stage.addChild(gusp)
//Laya.stage.addChild(gdsp)
//Laya.stage.addChild(glsp)
//Laya.stage.addChild(grsp)
//world.comboGradientBorders = [gusp, gdsp, glsp, grsp]
//}
//if (!world.comboBorders) {
//const usp = new Laya.Sprite()
//const dsp = new Laya.Sprite()
//const lsp = new Laya.Sprite()
//const rsp = new Laya.Sprite()
//Laya.stage.addChild(usp)
//Laya.stage.addChild(dsp)
//Laya.stage.addChild(lsp)
//Laya.stage.addChild(rsp)
//usp.graphics.drawRect(0, 0, config.SCREEN_WIDTH, c.WIDTH, c.COLOR)
//dsp.graphics.drawRect(0, config.SCREEN_HEIGHT - c.WIDTH, config.SCREEN_WIDTH, c.WIDTH, c.COLOR)
//lsp.graphics.drawRect(0, 0, c.WIDTH, config.SCREEN_HEIGHT, c.COLOR)
//rsp.graphics.drawRect(config.SCREEN_WIDTH - c.WIDTH, 0, c.WIDTH, config.SCREEN_HEIGHT, c.COLOR)
//world.comboBorders = [usp, dsp, lsp, rsp]
//}

//if (world.updateComboBorder) {
//world.lastUpdateComboBorderTime = now
//world.updateComboBorder = false
//}

//if (world.lastUpdateComboBorderTime) {
//const remainTime = c.ANIMATION_DURATION - (now - world.lastUpdateComboBorderTime)
//if (remainTime > 0) {
//const rate = remainTime / c.ANIMATION_DURATION
////const gWidth = c.GRADIENT_MIN_WIDTH + rate * (c.GRADIENT_MAX_WIDTH - c.GRADIENT_MIN_WIDTH)
//const gWidth = c.GRADIENT_MIN_WIDTH
//const [gusp, gdsp, glsp, grsp] = world.comboGradientBorders
//const [usp, dsp, lsp, rsp] = world.comboBorders

//const gu = world.ctx.createLinearGradient(0, 0, 0, gWidth)
//gu.addColorStop(0, c.GRADIENT_COLOR_START)
//gu.addColorStop(1, c.GRADIENT_COLOR_END)
//gusp.graphics.clear()
//gusp.graphics.drawRect(0, 0, config.SCREEN_WIDTH, gWidth, gu)

//const gd = world.ctx.createLinearGradient(0, config.SCREEN_HEIGHT - gWidth, 0, config.SCREEN_HEIGHT)
//gd.addColorStop(0, c.GRADIENT_COLOR_END)
//gd.addColorStop(1, c.GRADIENT_COLOR_START)
//gdsp.graphics.clear()
//gdsp.graphics.drawRect(0, config.SCREEN_HEIGHT - gWidth, config.SCREEN_HEIGHT, gWidth, gd)

//const gl = world.ctx.createLinearGradient(0, 0, gWidth, 0)
//gl.addColorStop(0, c.GRADIENT_COLOR_START)
//gl.addColorStop(1, c.GRADIENT_COLOR_END)
//glsp.graphics.clear()
//glsp.graphics.drawRect(0, 0, gWidth, config.SCREEN_HEIGHT, gl)

//const gr = world.ctx.createLinearGradient(config.SCREEN_WIDTH - gWidth, 0, config.SCREEN_WIDTH, 0)
//gr.addColorStop(0, c.GRADIENT_COLOR_END)
//gr.addColorStop(1, c.GRADIENT_COLOR_START)
//grsp.graphics.clear()
//grsp.graphics.drawRect(config.SCREEN_WIDTH - gWidth, 0, gWidth, config.SCREEN_HEIGHT, gr)

//grsp.alpha = rate
//glsp.alpha = rate
//gusp.alpha = rate
//gdsp.alpha = rate
//rsp.alpha = rate
//lsp.alpha = rate
//usp.alpha = rate
//dsp.alpha = rate
//}
//}
//} else {
//if (world.comboBorders) {
//world.comboBorders.forEach(b => {
//b.destroy()
//})
//world.comboBorders = undefined
//}
//if (world.comboGradientBorders) {
//world.comboGradientBorders.forEach(b => {
//b.destroy()
//})
//world.comboGradientBorders = undefined
//}
//}
//}

exports.default = renderComboBorder;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderCountDown = function renderCountDown(world, now, dt) {
  if (world.countDown && world.countDown.number) {
    var c = _config2.default.COUNT_DOWN;
    if (!world.countDownSprite) {
      var sp = new Laya.Text();
      sp.pos(c.X, c.Y);
      sp.width = _config2.default.SCREEN_WIDTH;
      sp.align = 'center';
      sp.fontSize = c.SIZE;
      sp.color = world.mainColor;
      sp.font = 'Helvetica';

      Laya.stage.addChild(sp);
      world.countDownSprite = sp;
    }

    var rate = 1 - (now - world.countDown.startTime) / 1000;
    world.countDownSprite.text = world.countDown.number;
    world.countDownSprite.alpha = rate;
    world.countDownSprite.fontSize = c.SIZE * (1 - rate * 0.2) * 1.5;
  } else {
    if (world.countDownSprite) {
      world.countDownSprite.destroy();
      world.countDownSprite = null;
    }
  }
};

exports.default = renderCountDown;

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderFriendsMileStone = function renderFriendsMileStone(world) {
  var camera = world.camera;
  var mileStones = world.mileStones;

  while (mileStones.start < mileStones.end && !camera.contain(mileStones[mileStones.start].render.position)) {
    mileStones[mileStones.start].render.sprite.destroy();
    mileStones[mileStones.start].render.sprite = null;
    mileStones[mileStones.start].render.line.sprite.destroy();
    mileStones[mileStones.start].render.line.sprite = null;
    mileStones.start++;
  }

  while (mileStones.end < mileStones.length) {
    if (camera.contain(mileStones[mileStones.end].render.position)) {
      mileStones.end++;
      continue;
    }

    break;
  }

  for (var i = mileStones.start; i < mileStones.end; ++i) {
    var mileStone = mileStones[i];

    if (!mileStone.render.line.sprite) {
      var lineSp = new Laya.Sprite();
      mileStone.render.line.sprite = lineSp;
      var vecLine = (0, _utils.translateCoordinate)(world, mileStone.render.index, mileStone.render.x, 100).SUB(mileStone.render.position);
      lineSp.graphics.drawLine(0, 0, vecLine.x, vecLine.y, '#FFFFFF', 3);
      mileStone.render.line.sprite = lineSp;
      Laya.stage.addChild(lineSp);
    }
    mileStone.render.line.sprite.pos(mileStone.render.position.x - camera.leftTopPoint.x, mileStone.render.position.y - camera.leftTopPoint.y);

    if (!mileStone.render.sprite) {
      var sp = new Laya.Sprite();

      sp.loadImage(mileStone.headimg, -30, -30, 60, 60);

      mileStone.render.sprite = sp;
      Laya.stage.addChild(sp);
    }

    var avatarPos = (0, _utils.translateCoordinate)(world, mileStone.render.index, mileStone.render.x, 100);
    mileStone.render.sprite.pos(avatarPos.x - camera.leftTopPoint.x, avatarPos.y - camera.leftTopPoint.y);
  }
};

exports.default = renderFriendsMileStone;

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderGetCoinEffect = function renderGetCoinEffect(world) {
  if (world.getCoinEffect) {
    // perfect 365 x 152
    // Miss 248 x 152
    // Good 286 x 152
    var sp = new Laya.Sprite();
    if (world.getCoinEffect.type === 'good') {
      sp.graphics.drawTexture(world.assets.good, 0, 0, 257 / 1.5, 152 / 1.5);
    } else if (world.getCoinEffect.type === 'perfect') {
      sp.graphics.drawTexture(world.assets.perfect, 0, 0, 257 / 1.5, 152 / 1.5);
    } else {
      sp.graphics.drawTexture(world.assets.miss, 0, 0, 257 / 1.5, 152 / 1.5);
    }
    Laya.stage.addChild(sp);
    if (!world.getCoinEffects) {
      world.getCoinEffects = [];
    }
    world.getCoinEffects.push({
      sp: sp,
      x: world.getCoinEffect.x,
      y: world.getCoinEffect.y,
      startTime: Date.now()
    });
    world.getCoinEffect = undefined;
  }

  if (world.getCoinEffects) {
    var camera = world.camera;
    for (var i = world.getCoinEffects.length - 1; i >= 0; --i) {
      var coinEffect = world.getCoinEffects[i];
      var pastTime = Date.now() - coinEffect.startTime;
      if (pastTime > 300) {
        coinEffect.sp.alpha = 1 - (pastTime - 300) / 300;
      }
      if (pastTime > 600) {
        coinEffect.sp.destroy();
        world.getCoinEffects.splice(i, 1);
      } else {
        coinEffect.sp.pos(coinEffect.x - camera.leftTopPoint.x - 257 / 3, coinEffect.y - camera.leftTopPoint.y);
      }
    }
  }
};

exports.default = renderGetCoinEffect;

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _bar = __webpack_require__(11);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderHearts = function renderHearts(world) {
  if (world.hearts !== undefined) {
    // if (world.heartSprites) {
    //   world.heartSprites.forEach(sp => {
    //     sp.destroy()
    //   })
    // }
    // world.heartSprites = []
    // const hearts = []
    // let temp = world.hearts
    // for (let i = 0; i < 3; i ++) {
    //   if (temp >= 10) {
    //     hearts[i] = 10
    //   } else {
    //     hearts[i] = temp
    //   }
    //   temp -= 10
    //   if (temp < 0) {
    //     temp = 0
    //   }
    // }
    // let left = config.HEART_LEFT
    // for (let i = 0; i < 3; i ++) {
    //   const sp = new Laya.Sprite()
    //   sp.graphics.drawTexture(world.assets.hearts[hearts[i]], left, config.HEART_HEIGHT, config.HEART_WIDTH, config.HEART_HEIGHT)
    //   Laya.stage.addChild(sp)

    //   world.heartSprites.push(sp)
    //   left += config.HEART_WIDTH + config.HEART_MARGIN
    // }

    if (!world.lifeBarSprite) {
      drawLifeBarBackground(world);
    }

    var c = _config2.default.LIFE_BAR;
    var lifeBarArgs = (0, _utils.getScaleArgs)(c.BAR);

    var sp = world.lifeBarSprite;

    var currentLength = world.hearts / _config2.default.HEART_NUMBER * lifeBarArgs.WIDTH;
    var path = (0, _bar.generateBar)(lifeBarArgs.WIDTH, currentLength, lifeBarArgs.HEIGHT);

    sp.graphics.clear();
    sp.graphics.drawPath(0, 0, path, {
      fillStyle: c.COLOR
    });
  }
};

function drawLifeBarBackground(world) {
  var c = _config2.default.LIFE_BAR;
  var lifeBarArgs = (0, _utils.getScaleArgs)(c.BAR),
      lifeIconArgs = (0, _utils.getScaleArgs)(c.ICON);

  var bgSp = new Laya.Sprite();
  bgSp.pos(lifeBarArgs.X, lifeBarArgs.Y);

  var bgPath = (0, _bar.generateBackgroundBar)(lifeBarArgs.WIDTH, lifeBarArgs.HEIGHT);

  bgSp.graphics.drawPath(0, 0, bgPath, {
    fillStyle: c.BACKGROUND_COLOR
  });

  bgSp.graphics.drawTexture(world.assets.hearts[10], lifeIconArgs.X, lifeIconArgs.Y, lifeIconArgs.RADIUS, lifeIconArgs.RADIUS);

  var sp = new Laya.Sprite();
  sp.pos(lifeBarArgs.X, lifeBarArgs.Y);

  Laya.stage.addChild(bgSp);
  Laya.stage.addChild(sp);

  world.lifeBarBgSprite = bgSp;
  world.lifeBarSprite = sp;
}

exports.default = renderHearts;

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var renderObsParticles = function renderObsParticles(world) {
  var camera = world.camera;
  world.obsParticles.forEach(function (particle) {
    var _particle$sprite$grap, _particle$sprite;

    if (!particle.sprite) {
      var sp = new Laya.Sprite();
      Laya.stage.addChild(sp);
      particle.sprite = sp;
    }
    particle.sprite.graphics.clear();
    (_particle$sprite$grap = particle.sprite.graphics).drawLine.apply(_particle$sprite$grap, _toConsumableArray(particle.path).concat([world.mainColor, _config2.default.OBS.LINE_WIDTH]));
    //console.log(...particle.path, world.mainColor, config.OBS.LINE_WIDTH)
    (_particle$sprite = particle.sprite).pos.apply(_particle$sprite, _toConsumableArray(particle.position.SUB(camera.leftTopPoint).args));
    //console.log(...particle.position.SUB(camera.leftTopPoint).args)
    //particle.sprite.alpha = particle.alpha
    //console.log(...particle.position.SUB(camera.leftTopPoint).args)
  });
};

exports.default = renderObsParticles;

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderObstacles = function renderObstacles(world) {
  var obstacles = world.obstacles;
  var camera = world.camera;

  while (obstacles.start < obstacles.end && !camera.contain(obstacles[obstacles.start].position)) {
    obstacles[obstacles.start].sprite && obstacles[obstacles.start].sprite.destroy();
    obstacles.start++;
  }

  while (obstacles.end < obstacles.length && camera.contain(obstacles[obstacles.end].position)) {
    obstacles.end++;
  }

  for (var i = obstacles.start; i < obstacles.end; ++i) {
    var obstacle = obstacles[i];

    if (obstacle.isGear && !obstacle.triggered) {
      continue;
    }

    var polygon = obstacle.shape;
    var pathes = obstacle.pathes;
    if (!obstacle.sprite) {
      var sp = new Laya.Sprite();

      // sp.graphics.drawLines(0, 0, pathes, config.OBS.COLOR, config.OBS.LINE_WIDTH)

      obstacle.sprite = sp;
      Laya.stage.addChild(sp);
    }

    if (obstacle.crashed) {
      obstacle.sprite && obstacle.sprite.destroy();
    }

    if (obstacle.hit) {
      obstacle.sprite.graphics.clear();
      obstacle.sprite.graphics.drawLines(0, 0, pathes, _config2.default.OBS.COLLIDED_COLOR, _config2.default.OBS.LINE_WIDTH);
    }

    // 障碍物生长动画
    if (obstacle.frames < _config2.default.OBS_GROWTH_FRAMES) {
      (function () {
        obstacle.frames++;

        obstacle.sprite.graphics.clear();
        var ratio = obstacle.frames / _config2.default.OBS_GROWTH_FRAMES;

        var newPathes = pathes.map(function (p, index, array) {
          var pointIndex = index % 4;

          return (p - array[pointIndex]) * ratio + array[pointIndex];
        });

        obstacle.sprite.graphics.drawLines(0, 0, newPathes, world.mainColor, _config2.default.OBS.LINE_WIDTH);
      })();
    }

    obstacle.sprite.pos(polygon.points[3].x - camera.leftTopPoint.x, polygon.points[3].y - camera.leftTopPoint.y);
  }
};

exports.default = renderObstacles;

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var renderParticles = function renderParticles(world) {
  var camera = world.camera;
  world.particles.forEach(function (particle) {
    var _particle$sprite;

    if (!particle.sprite) {
      particle.sprite = new Laya.Sprite();
      particle.sprite.graphics.drawPoly(0, 0, particle.poly, particle.color);
      Laya.stage.addChild(particle.sprite);
    }
    (_particle$sprite = particle.sprite).pos.apply(_particle$sprite, _toConsumableArray(particle.position.SUB(camera.leftTopPoint).args));
  });
};

exports.default = renderParticles;

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var lastColor = void 0;

var drawPath = function drawPath(sp, path, color, effectColor) {
  if (path.type === 'line') {
    var _sp$graphics;

    //sp.graphics.drawLine(0, 0, ...path.endPoint.SUB(path.startPoint).args, effectColor, config.PATH_EFFECT_WIDTH)
    (_sp$graphics = sp.graphics).drawLine.apply(_sp$graphics, [0, 0].concat(_toConsumableArray(path.endPoint.SUB(path.startPoint).args), [color, _config2.default.PATH_WIDTH]));
  } else {
    //sp.graphics.drawPath(0, 0, [
    //['moveTo', 0, 0],
    //// ['lineTo', 100, 100]
    //// ['arcTo', ...line.drawEndPoint.args, ...line.endPoint.args, line.radius]
    //['arcTo', ...path.drawEndPoint.SUB(path.startPoint).args, ...path.endPoint.SUB(path.startPoint).args, path.radius]
    //], null, {
    //strokeStyle: effectColor,
    //lineWidth: config.PATH_EFFECT_WIDTH
    //})
    sp.graphics.drawPath(0, 0, [['moveTo', 0, 0],
    // ['lineTo', 100, 100]
    // ['arcTo', ...line.drawEndPoint.args, ...line.endPoint.args, line.radius]
    ['arcTo'].concat(_toConsumableArray(path.drawEndPoint.SUB(path.startPoint).args), _toConsumableArray(path.endPoint.SUB(path.startPoint).args), [path.radius])], null, {
      strokeStyle: color,
      lineWidth: _config2.default.PATH_WIDTH
    });
  }
};
var renderPathes = function renderPathes(world) {
  var pathes = world.pathes;
  var camera = world.camera;
  while (pathes.start < world.ball.index && pathes.start < pathes.end && !camera.intersectionLine(pathes[pathes.start].startPoint, pathes[pathes.start].endPoint)) {
    pathes[pathes.start].sprite.destroy();
    pathes[pathes.start].sprite = null;
    pathes.start++;
  }
  while (pathes.end < pathes.length && camera.intersectionLine(pathes[pathes.end].startPoint, pathes[pathes.end].endPoint)) {
    pathes.end++;
  }

  var color = (0, _utils.inBackground)() ? (0, _utils.alphaColor)(world.mainColor, _config2.default.BACKGROUND_ALPHA) : world.mainColor;
  var effectColor = (0, _utils.inBackground)() ? (0, _utils.alphaColor)(_config2.default.PATH_EFFECT_COLOR[world.level], _config2.default.BACKGROUND_ALPHA * _config2.default.PATH_EFFECT_ALPHA) : (0, _utils.alphaColor)(_config2.default.PATH_EFFECT_COLOR[world.level], _config2.default.PATH_EFFECT_ALPHA);
  var noPath = true;
  for (var i = pathes.start; i < pathes.end; ++i) {
    noPath = false;
    var path = pathes[i];
    if (!path.sprite) {
      var sp = new Laya.Sprite();
      pathes[i].sprite = sp;
      Laya.stage.addChild(sp);
      sp.zOrder = 1;
      drawPath(sp, path, color, effectColor);
    } else if (color !== lastColor) {
      path.sprite.graphics.clear();
      drawPath(path.sprite, path, color, effectColor);
    }
    path.sprite.pos(path.startPoint.x - camera.leftTopPoint.x, path.startPoint.y - camera.leftTopPoint.y);
  }

  if (noPath) {
    _utils.emitter.emit('error', 'leave game too long, no path in the screen');
  }

  lastColor = color;
};

exports.default = renderPathes;

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  color: '#FFFFFF',
  align: 'center',
  valign: 'middle'
};

var renderPlay = function renderPlay(world) {
  if (_utils.Live.living && !_utils.Live.playing && _utils.Live.liveState === _config2.default.LIVE_STATE.RUNNING) {
    if (!world.playSprite) {
      var c = _config2.default.LiveWaitingPanel;

      var playArgs = (0, _utils.getScaleArgs)(c.PLAY);
      var play = new Laya.Text();
      Object.assign(play, textConfig);

      play.text = c.PLAY.TEXT;
      play.fontSize = 36;
      play.pos(0, 0);
      play.size(playArgs.WIDTH, playArgs.HEIGHT);
      play.color = world.mainColor;
      world.playSprite = play;

      var playBorder = new Laya.Sprite();
      world.backgroundSprite.addChild(playBorder);
      (0, _utils.drawRoundedRect)(playBorder, 0, 0, playArgs.WIDTH, playArgs.HEIGHT, playArgs.RADIUS, null, { strokeStyle: world.mainColor, lineWidth: c.PLAY.BORDER_WIDTH });
      playBorder.pos(playArgs.X, playArgs.Y);
      playBorder.size(playArgs.WIDTH, playArgs.HEIGHT);
      playBorder.on(Laya.Event.MOUSE_UP, undefined, function () {
        world.mode = _config2.default.GAME_MODE.BACKGROUND;
        world.audioCtx.stop();
        world.reset();

        _utils.Live.end();
        _panelManager2.default.redirectTo(_selectPanel2.default);
      });
      world.playBorderSprite = playBorder;
      playBorder.addChild(play);
    }
  } else if (world.playSprite) {
    world.playSprite.destroy();
    world.playSprite = undefined;
    world.playBorderSprite.destroy();
    world.playBorderSprite = undefined;
  }
};

exports.default = renderPlay;

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _bar = __webpack_require__(11);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderProgress = function renderProgress(world) {
  var ball = world.ball;
  if (ball.songDistance && world.realDistance) {

    if (!world.progressBarSprite) {
      drawProgressBarBackground(world);
    }

    var limit = world.realDistance;

    var c = _config2.default.PROGRESS_BAR;
    var progressBarArgs = (0, _utils.getScaleArgs)(c.BAR);

    var sp = world.progressBarSprite;

    var rate = ball.songDistance / limit;
    if (world.countDown) {
      rate = 0;
    }

    if (rate > 1) {
      rate = 1;
    }

    var currentLength = rate * progressBarArgs.WIDTH;

    var path = (0, _bar.generateBar)(progressBarArgs.WIDTH, currentLength, progressBarArgs.HEIGHT);

    sp.graphics.clear();
    sp.graphics.drawPath(0, 0, path, {
      fillStyle: world.mainColor
    });

    var textSp = world.progressBarBgSprite.progressText;
    textSp.text = Math.floor(rate * 100) + '%';
  }
};

function drawProgressBarBackground(world) {
  var c = _config2.default.PROGRESS_BAR;
  var progressBarArgs = (0, _utils.getScaleArgs)(c.BAR),
      progressTextArgs = (0, _utils.getScaleArgs)(c.TEXT);

  var bgSp = new Laya.Sprite();
  bgSp.pos(progressBarArgs.X, progressBarArgs.Y);

  var bgPath = (0, _bar.generateBackgroundBar)(progressBarArgs.WIDTH, progressBarArgs.HEIGHT);

  bgSp.graphics.drawPath(0, 0, bgPath, {
    fillStyle: c.BACKGROUND_COLOR
  });

  bgSp.progressText = new Laya.Text();
  bgSp.progressText.color = world.mainColor;
  bgSp.progressText.pos(progressTextArgs.X, progressTextArgs.Y);
  Object.assign(bgSp.progressText, {
    width: progressBarArgs.WIDTH,
    height: progressTextArgs.HEIGHT,
    fontSize: progressTextArgs.RADIUS,
    align: 'left',
    valign: 'middle',
    font: 'Helvetica'
  });
  bgSp.addChild(bgSp.progressText);

  var sp = new Laya.Sprite();
  sp.pos(progressBarArgs.X, progressBarArgs.Y);

  Laya.stage.addChild(bgSp);
  Laya.stage.addChild(sp);

  world.progressBarBgSprite = bgSp;
  world.progressBarSprite = sp;
}

exports.default = renderProgress;

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _bar = __webpack_require__(11);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var animationFramesRemain = 0;

var renderScore = function renderScore(world) {
  if (world.score !== undefined) {
    // if (!world.scoreSprite) {
    //world.noteSprite = new Laya.Sprite()
    //   const sp = new Laya.Text()

    //   //world.noteSprite.graphics.drawTexture(world.assets.note, 0, 0, config.SCORE_SIZE, config.SCORE_SIZE)
    //   //world.noteSprite.pos(config.SCREEN_WIDTH * config.SCORE_NOTE_LEFT, config.PADDING_TOP)

    //   sp.width = config.SCREEN_WIDTH
    //   sp.pos(config.SCORE.X, config.SCORE.Y + (config.SCORE.LINE_HEIGHT - config.SCORE.SIZE) / 2)
    //   sp.align = 'center'
    //   sp.color = world.mainColor
    //   //sp.color = config.SCORE.COLOR
    //   sp.fontSize = config.SCORE.SIZE
    //   sp.text = world.score

    //   //Laya.stage.addChild(world.noteSprite)
    //   Laya.stage.addChild(sp)
    //   world.scoreSprite = sp
    // }

    // if (world.updateScore) {
    //   world.scoreSprite.text = world.score
    //   world.updateScore = false
    // }

    if (!world.scoreBarSprite) {
      drawScoreBarBackground(world);
    }

    var textSp = world.scoreBarBgSprite.scoreText;
    textSp.text = world.score;

    var limit = world.scoreLimit;

    var c = _config2.default.SCORE_BAR;
    var scoreBarArgs = (0, _utils.getScaleArgs)(c.BAR),
        scoreBarStars = (0, _utils.getScaleArgs)(c.STARS);

    var sp = world.scoreBarSprite;

    var starRate = world.score / limit;

    var currentLength = starRate * scoreBarArgs.WIDTH;
    if (currentLength > scoreBarArgs.WIDTH) {
      currentLength = scoreBarArgs.WIDTH;
    }

    var starNumber = _config2.default.STAR_RATE.reduce(function (result, current) {
      return result + (starRate > current ? 1 : 0);
    }, 0);

    if (starNumber === sp.stars.starNumber) {
      // animation would use 60 frames
      // runStarAnimation(world, world.starPos[starNumber - 1], c.ANIMATION_FRAMES)
      // console.log('start animation', Date.now())
      sp.stars.starNumber++;
      animationFramesRemain = c.ANIMATION_FRAMES;
    }

    var path = (0, _bar.generateBar)(scoreBarArgs.WIDTH, currentLength, scoreBarArgs.HEIGHT);

    sp.graphics.clear();
    sp.graphics.drawPath(0, 0, path, {
      fillStyle: world.mainColor
    });

    sp.stars.graphics.clear();
    world.starPos.forEach(function (X, index) {
      if (index < starNumber) {
        sp.stars.graphics.drawTexture(world.assets.scoreStar[world.level], X, 0, scoreBarStars.RADIUS, scoreBarStars.RADIUS);
      } else {
        sp.stars.graphics.drawTexture(world.assets.scoreStarUnkindled, X, 0, scoreBarStars.RADIUS, scoreBarStars.RADIUS);
      }
    });

    if (animationFramesRemain > 0) {
      runStarAnimation(world, world.starPos[starNumber - 1], animationFramesRemain--);
    }
  }
};

function drawScoreBarBackground(world) {
  var c = _config2.default.SCORE_BAR;
  var scoreBarArgs = (0, _utils.getScaleArgs)(c.BAR),
      scoreBarText = (0, _utils.getScaleArgs)(c.TEXT),
      scoreBarStars = (0, _utils.getScaleArgs)(c.STARS);
  // scoreBarStarsX = c.STARS_X.map(X => getScaleWidth(X)),

  var bgSp = new Laya.Sprite();
  bgSp.pos(scoreBarArgs.X, scoreBarArgs.Y);

  var bgPath = (0, _bar.generateBackgroundBar)(scoreBarArgs.WIDTH, scoreBarArgs.HEIGHT);

  bgSp.graphics.drawPath(0, 0, bgPath, {
    fillStyle: c.BACKGROUND_COLOR
  });

  var scoreText = new Laya.Text();
  scoreText.color = world.mainColor;
  scoreText.pos(scoreBarText.X, scoreBarText.Y);
  Object.assign(scoreText, {
    width: scoreBarArgs.WIDTH,
    height: scoreBarText.HEIGHT,
    font: 'Helvetica',
    fontSize: scoreBarText.RADIUS,
    align: 'left',
    valign: 'middle'
  });
  bgSp.scoreText = scoreText;
  bgSp.addChild(scoreText);

  // bgSp.graphics.drawTexture(world.assets.hearts[10], c.LIFE_X, c.LIFE_Y, c.LIFE_WIDTH, c.LIFE_HEIGHT)

  world.starPos = _config2.default.STAR_RATE.map(function (rate) {
    return rate * scoreBarArgs.WIDTH - scoreBarStars.RADIUS / 2;
  });

  var sp = new Laya.Sprite();
  sp.pos(scoreBarArgs.X, scoreBarArgs.Y);

  sp.stars = new Laya.Sprite();
  sp.stars.pos(0, (scoreBarArgs.HEIGHT - scoreBarStars.RADIUS) / 2);
  sp.stars.starNumber = 1;
  sp.addChild(sp.stars);

  Laya.stage.addChild(bgSp);
  Laya.stage.addChild(sp);

  world.scoreBarBgSprite = bgSp;
  world.scoreBarSprite = sp;
}

function runStarAnimation(world, xPos, frames) {
  var scoreBarSprite = world.scoreBarSprite;
  if (scoreBarSprite && frames) {
    var sp = scoreBarSprite.stars;
    var c = _config2.default.SCORE_BAR,
        scoreBarStars = (0, _utils.getScaleArgs)(c.STARS),
        DELTA = (0, _utils.getScaleRadius)(c.DELTA);

    var size = scoreBarStars.RADIUS + frames * DELTA;
    sp.graphics.drawTexture(world.assets.scoreStar[world.level], xPos - frames * DELTA / 2, -frames * DELTA / 2, size, size);

    // requestAnimationFrame(runStarAnimation.bind(null, world, xPos, frames - 1))
  }
}

exports.default = renderScore;

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _pausePanel = __webpack_require__(24);

var _pausePanel2 = _interopRequireDefault(_pausePanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderSongName = function renderSongName(world) {
  if ((world.mode === _config2.default.GAME_MODE.REAL || world.mode === _config2.default.GAME_MODE.LIVE || !_utils.Live.playing && _utils.Live.living && _utils.Live.liveState !== _config2.default.LIVE_STATE.END) && _song2.default.loaded && _panelManager2.default._currentPanel !== _pausePanel2.default) {
    if (!world.songNameSprite) {
      var songNameArgs = (0, _utils.getScaleArgs)(_config2.default.SONG_NAME);

      var sp = new Laya.Text();
      Laya.stage.addChild(sp);

      sp.pos(songNameArgs.X, songNameArgs.Y);
      sp.fontSize = _config2.default.SONG_NAME.SIZE;
      sp.font = 'Helvetica';
      sp.width = _config2.default.SCREEN_WIDTH;
      sp.align = 'left';
      sp.text = world.songConfig.title;
      sp.color = (0, _utils.alphaColor)(world.mainColor, _config2.default.SONG_NAME.ALPHA);

      world.songNameSprite = sp;
    }
  } else if (world.songNameSprite) {
    world.songNameSprite.destroy();
    world.songNameSprite = undefined;
  }
};

exports.default = renderSongName;

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _pausePanel = __webpack_require__(24);

var _pausePanel2 = _interopRequireDefault(_pausePanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderStop = function renderStop(world) {
  if (!_utils.Live.living && !world.stopSprite && world.mode === _config2.default.GAME_MODE.REAL) {
    var pauseArgs = (0, _utils.getScaleArgs)(_config2.default.STOP);

    var sp = new Laya.Sprite();
    sp.graphics.drawTexture(world.assets.stop[world.level], 0, 0, pauseArgs.WIDTH, pauseArgs.HEIGHT);
    sp.pos(pauseArgs.X, pauseArgs.Y);
    sp.size(pauseArgs.WIDTH * 2, pauseArgs.HEIGHT);
    world.backgroundSprite.addChild(sp);

    var clickArea = new Laya.Sprite();
    clickArea.pos(pauseArgs.X - pauseArgs.WIDTH, pauseArgs.Y - pauseArgs.HEIGHT);
    clickArea.size(pauseArgs.WIDTH * 3, pauseArgs.HEIGHT * 3);
    world.backgroundSprite.addChild(clickArea);

    clickArea.on(Laya.Event.MOUSE_DOWN, undefined, function (e) {
      e.stopPropagation();
      _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PAUSE);
    });
    world.stopSprite = sp;
  }
};

exports.default = renderStop;

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderCoins = function renderCoins(world, dt) {
  var c = _config2.default.TOUCH_EFFECT;
  var effects = world.touchEffectList;

  var _loop = function _loop(i) {
    var effect = effects[i];

    if (effect.duration <= 0) {
      effect.sprite.graphics.clear();
      effects.splice(i, 1);
      return 'continue';
    }

    if (!effect.sprite) {
      Laya.stage.addChild(effect.sprite = new Laya.Sprite());
      effect.sprite.pos(effect.position.x, effect.position.y);
    }

    effect.sprite.graphics.clear();

    var crossStars = effect.crossStars,
        circleStars = effect.circleStars;
    var timeRatio = effect.duration / c.DURATION;

    crossStars.forEach(function (cross) {
      cross.position.SELF_ADD(cross.vec);

      effect.sprite.graphics.drawPoly(cross.position.x, cross.position.y, scalePoly(cross, timeRatio), 'rgba(255, 255, 255, ' + timeRatio * cross.alpha + ')');
    });

    circleStars.forEach(function (circle) {
      circle.position.SELF_ADD(circle.vec);

      effect.sprite.graphics.drawCircle(circle.position.x, circle.position.y, circle.radius * timeRatio, 'rgba(255, 255, 255, ' + timeRatio * circle.alpha + ')');
    });

    var innerRadius = effect.circleBorder.innerRadius * (2 - timeRatio),
        outerRadius = effect.circleBorder.outerRadius * (2 - timeRatio);

    // effect.sprite.graphics.drawCircle(-circleBorderRadius / 2, -circleBorderRadius / 2, circleBorderRadius, '#FFFFFF', c.CIRCLE_BORDER_WIDTH)
    var ringPath = (0, _utils.generateRing)(innerRadius, outerRadius);
    effect.sprite.graphics.drawPath(0, 0, ringPath, { fillStyle: 'rgba(255, 255, 255, ' + timeRatio * effect.circleBorder.alpha + ')' });

    effect.sprite.alpha = timeRatio * effect.alpha;
    effect.duration -= dt;
  };

  for (var i = effects.length - 1; i > 0; i--) {
    var _ret = _loop(i);

    if (_ret === 'continue') continue;
  }
};

function scalePoly(_ref, timeRatio) {
  var poly = _ref.poly,
      ratio = _ref.ratio;

  var currentRatio = timeRatio * ratio;

  return poly.map(function (p) {
    return p * currentRatio;
  });
}

exports.default = renderCoins;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _assetsLoader = __webpack_require__(15);

var _assetsLoader2 = _interopRequireDefault(_assetsLoader);

var _utils = __webpack_require__(1);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lastWitness = undefined;

var renderWitness = function renderWitness(world) {
  if (_utils.Live.living && _utils.Live.playing && world.mode === _config2.default.GAME_MODE.REAL) {
    if (!world.witnessIconSprite) {
      var c = _config2.default.WITNESS;
      var witnessIconArgs = (0, _utils.getScaleArgs)(c.ICON);
      var witnessTextArgs = (0, _utils.getScaleArgs)(c.TEXT);
      // first
      var sp = new Laya.Sprite();
      Laya.stage.addChild(sp);
      sp.graphics.drawTexture(_assetsLoader2.default.witness[world.level], 0, 0, witnessIconArgs.WIDTH, witnessIconArgs.HEIGHT);
      sp.pos(witnessIconArgs.X, witnessIconArgs.Y);
      world.witnessIconSprite = sp;

      var text = new Laya.Text();
      Laya.stage.addChild(text);
      text.pos(witnessTextArgs.X, witnessTextArgs.Y + 5);
      text.fontSize = witnessTextArgs.RADIUS;
      text.size(witnessTextArgs.WIDTH, witnessTextArgs.HEIGHT);
      text.color = world.mainColor;
      world.witnessText = text;
    }
    if (lastWitness !== _utils.Live.witness) {
      lastWitness = _utils.Live.witness;
      world.witnessText.text = lastWitness;
    }
  } else {
    lastWitness = undefined;
    if (world.witnessIconSprite) {
      world.witnessIconSprite.destroy();
      world.witnessIconSprite = undefined;
      world.witnessText.destroy();
      world.witnessText = undefined;
    }
  }
};

exports.default = renderWitness;

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _selectPanel = __webpack_require__(9);

var _selectPanel2 = _interopRequireDefault(_selectPanel);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderWording = function renderWording(world) {
  if (world.wording) {
    console.log(world.wording);
    if (!world.wordingSp) {
      var text = (0, _utils.createTextSprite)(Laya.stage, _config2.default.LoadingAnimation.WORDING);
      text.text = world.wording;
      world.wordingSp = text;
    }
  } else {
    if (world.wordingSp) {
      world.wordingSp.destroy();
      world.wordingSp = undefined;
    }
  }
};

exports.default = renderWording;

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(1);

var _utils2 = __webpack_require__(8);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _liveWaitingPanel = __webpack_require__(22);

var _liveWaitingPanel2 = _interopRequireDefault(_liveWaitingPanel);

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RunSystem = function (_System) {
  _inherits(RunSystem, _System);

  function RunSystem() {
    _classCallCheck(this, RunSystem);

    return _possibleConstructorReturn(this, (RunSystem.__proto__ || Object.getPrototypeOf(RunSystem)).apply(this, arguments));
  }

  _createClass(RunSystem, null, [{
    key: 'init',
    value: function init() {
      this._prevPointOnLine = (0, _utils2.translateCoordinate)(this._world, this._world.ball.index, this._world.ball.x, 0);
      this._world.lineDirection = (0, _utils2.translateCoordinate)(this._world, this._world.ball.index, this._world.ball.x + 1, 0);
      this._world.lineDirection.SELF_SUB(this._prevPointOnLine);
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      var world = this._world;
      var ball = world.ball;
      var velocity = world.runVec;
      var left = velocity * dt;

      if (world.pathes === undefined) {
        return;
      }

      var currentPointOnLine = (0, _utils2.translateCoordinate)(this._world, ball.index, ball.x, 0);
      if (currentPointOnLine) {
        this._world.lineDirection = currentPointOnLine.SUB(this._prevPointOnLine);
        this._prevPointOnLine = currentPointOnLine;
      }

      if (ball.index >= world.pathes.length * _config2.default.PRELOAD_RATIO || ball.index + 10 >= world.pathes.length) {
        if (world.mode === _config2.default.GAME_MODE.BACKGROUND || _panelManager2.default._currentPanel === _liveWaitingPanel2.default) {
          console.log('regenerate lines');

          _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_PATH_END, 'start');
        }
      }

      if (world.mode === _config2.default.GAME_MODE.ADJUST) {
        if (ball.distance > _config2.default.SCREEN_HEIGHT * 2) {
          _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_SETTING_RESET);
        } else {
          _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_SETTING_RUN);
        }
      }

      if (ball.songDistance >= world.realDistance && world.mode === _config2.default.GAME_MODE.REAL) {
        console.log('path end!');

        _utils.emitter.emit(_config2.default.GAME_EVENT.GAME_END, true);
      }

      while (ball.index < world.pathes.length) {
        if (left <= 0.0001) break;

        var path = world.pathes[ball.index];

        if (path.length > ball.x + left) {
          ball.x += left;
          ball.distance += left;
          ball.songDistance += left;
          left = 0;
        } else {
          left -= path.length - ball.x;
          ball.distance += path.length - ball.x;
          ball.songDistance += path.length - ball.x;
          ball.x = 0;
          ++ball.index;
        }
      }

      if (ball.buffManager[_config2.default.BUFF.MAGNET]) {
        var magnetRadius2 = _config2.default.BALL.MAGNET_RADIUS * _config2.default.BALL.MAGNET_RADIUS;
        var coins = world.coins;

        for (var i = coins.start; i < coins.end; ++i) {
          var coin = coins[i];
          if (!coin.moving && ball.position.distance2(coin.position) < magnetRadius2) {
            world.movingCoins.push(coin);
          }
        }
      }

      if (world.movingCoins.length) {
        var movingCoins = world.movingCoins;
        for (var _i = 0; _i < movingCoins.length; _i++) {
          var movingCoin = movingCoins[_i];

          if (movingCoin.hidden) {
            movingCoins.splice(_i, 1);
            _i--;
            continue;
          }

          var movingPath = ball.position.SUB(movingCoin.position);

          // 红有三, hhh
          var displacement = movingPath.normalize().MUL(velocity * dt * 2);
          movingCoin.position.SELF_ADD(displacement);
        }
      }
    }
  }]);

  return RunSystem;
}(_ECS.System);

exports.default = RunSystem;

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _network = __webpack_require__(10);

var _network2 = _interopRequireDefault(_network);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cnt = 0;
var tapping = false;

var SwitchSystem = function (_System) {
  _inherits(SwitchSystem, _System);

  function SwitchSystem() {
    _classCallCheck(this, SwitchSystem);

    return _possibleConstructorReturn(this, (SwitchSystem.__proto__ || Object.getPrototypeOf(SwitchSystem)).apply(this, arguments));
  }

  _createClass(SwitchSystem, null, [{
    key: 'init',
    value: function init() {
      this._direction = 'up';
    }
  }, {
    key: 'stop',
    value: function stop() {
      cnt = 0;
      tapping = false;
    }
  }, {
    key: 'update',
    value: function update(dt, now) {
      if (dt == 0) {
        return;
      }

      //if (this._world.cmd === config.CMD.TAP) {
      //if (!tapping) {
      //if (this._direction === 'up') {
      //Network.upCmd()
      //} else {
      //Network.downCmd()
      //}
      //tapping = true
      //cnt++
      //}
      //} else if (this._world.cmd === config.CMD.UP) {
      //if (!tapping) {
      //if (this._direction === 'up') {
      //tapping = true
      //cnt++
      //}
      //}
      //this._world.cmd = config.CMD.NONE
      //} else if (this._world.cmd === config.CMD.DOWN) {
      //if (!tapping) {
      //if (this._direction === 'down') {
      //cnt++
      //tapping = true
      //}
      //}
      //this._world.cmd = config.CMD.NONE
      if (this._world.cmd === _config2.default.CMD.TAP) {
        if (!tapping) {
          _network2.default.upCmd();
          tapping = true;
          cnt++;
        }
      } else if (this._world.cmd === _config2.default.CMD.UP) {
        if (!tapping) {
          tapping = true;
          cnt++;
        }
        this._world.cmd = _config2.default.CMD.NONE;
      } else if (this._world.cmd === _config2.default.CMD.NONE) {
        if (tapping) {
          tapping = false;
        }
      }

      if (this._world.ball.state === _config2.default.STATE.JUMPING) {
        this._doSwitch(dt, now);
      } else if (cnt) {
        this._world.ball.state = _config2.default.STATE.JUMPING;
        this._doSwitch(dt, now);
      } else {
        //do nothing
      }
    }
  }, {
    key: '_doSwitch',
    value: function _doSwitch(dt, now) {
      var ball = this._world.ball;
      if (ball.SWITCH_DISTANCE == undefined) {
        ball.SWITCH_DISTANCE = _config2.default.RUN_VEC * dt;
      } else {
        ball.SWITCH_DISTANCE += _config2.default.RUN_VEC * dt;
      }

      var y = this.CalFunc(ball.SWITCH_DISTANCE, this._direction, dt);
      if (y < -75 && ball.y > 75) {
        console.log("y: ", ball.y);
      }
      ball.y = y;
      //ball.SWITCH_DISTANCE = newSwitchDistance
    }
  }, {
    key: 'CalFunc',
    value: function CalFunc(x, direction, dt) {
      var ball = this._world.ball;
      var r = _config2.default.BALL.HEIGHT;
      if (direction == "up") {
        var tmp = 0;
        if (x >= _config2.default.RUN_VEC * _config2.default.SWITCH_TIME) {
          tmp = -r;
        }if (tmp == -r) {
          this._world.ball.state = _config2.default.STATE.NONE;
          cnt--;
          this._direction = "down";
          delete ball.SWITCH_DISTANCE;
        } else {
          tmp = r * Math.sin(Math.PI * x / (_config2.default.RUN_VEC * _config2.default.SWITCH_TIME) + Math.PI / 2);
        }
        return tmp;
      } else {
        var tmp = 0;
        if (x >= _config2.default.RUN_VEC * _config2.default.SWITCH_TIME) {
          tmp = r;
        }
        if (tmp == r) {
          this._world.ball.state = _config2.default.STATE.NONE;
          cnt--;
          this._direction = "up";
          delete ball.SWITCH_DISTANCE;
        } else {
          tmp = -r * Math.sin(Math.PI * x / (_config2.default.RUN_VEC * _config2.default.SWITCH_TIME) + Math.PI / 2);
        }
        return tmp;
      }
    }
  }, {
    key: 'LiftFinger',
    value: function LiftFinger() {
      var ball = this._world.ball;
      ball.SWITCH_DISTANCE = 0;
    }
  }]);

  return SwitchSystem;
}(_ECS.System);

exports.default = SwitchSystem;

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ECS = __webpack_require__(2);

var _utils = __webpack_require__(8);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TranslateCoordinateSystem = function (_System) {
  _inherits(TranslateCoordinateSystem, _System);

  function TranslateCoordinateSystem() {
    _classCallCheck(this, TranslateCoordinateSystem);

    return _possibleConstructorReturn(this, (TranslateCoordinateSystem.__proto__ || Object.getPrototypeOf(TranslateCoordinateSystem)).apply(this, arguments));
  }

  _createClass(TranslateCoordinateSystem, null, [{
    key: 'update',
    value: function update(dt, now) {
      var ball = this._world.ball;
      var newPosition = (0, _utils.translateCoordinate)(this._world, ball.index, ball.x, ball.y);

      if (newPosition) {
        this._world.ball.position = newPosition;
      }
    }
  }]);

  return TranslateCoordinateSystem;
}(_ECS.System);

exports.default = TranslateCoordinateSystem;

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = __webpack_require__(1);

var translateCoordinate = function translateCoordinate(world, index, x, y) {
  if (world.pathes === undefined) return undefined;

  if (index >= world.pathes.length) {
    console.log('undefined');
    return undefined;
  }

  var path = world.pathes[index];

  var point = void 0;

  if (path.type === 'line') {
    point = new _utils.Point();

    var theta = void 0;

    theta = Math.atan2(path.endPoint.y - path.startPoint.y, path.endPoint.x - path.startPoint.x);

    //console.log('theta', theta)

    point.x = Math.cos(theta) * x - Math.sin(theta) * y;
    point.y = Math.sin(theta) * x + Math.cos(theta) * y;

    point.x += path.startPoint.x;
    point.y += path.startPoint.y;
  } else {
    var vec = path.center.SUB(path.startPoint);
    var tangent = path.tangent;

    var radian = x / path.radius;

    var cross = tangent.CROSS(vec);
    if (cross < 0) {
      radian = -radian;
      y = -y;
    }

    vec = vec.ROTATE(radian);
    vec.x = -vec.x;
    vec.y = -vec.y;

    vec.normalize();
    vec.SELF_MUL(path.radius - y);
    point = path.center.ADD(vec);
  }

  return point;
};

exports.default = translateCoordinate;

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(44);

__webpack_require__(45);

__webpack_require__(41);

__webpack_require__(42);

__webpack_require__(43);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _onShow = __webpack_require__(40);

var _onShow2 = _interopRequireDefault(_onShow);

var _onHide = __webpack_require__(39);

var _onHide2 = _interopRequireDefault(_onHide);

var _shareImage = __webpack_require__(30);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Laya.MiniAdpter.init();

//import '../engine/dist/engine'

//import '../vendor/laya.core.js'
//import '../vendor/laya.ui.js'


window.platform = _config2.default.PLATFORM;

Laya.MiniAdpter.init();
Laya.init(_config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT);
// Laya.stage.alignH = "center"
// Laya.stage.scaleMode = "noscale"


//const testAsset = 'assets/share.png'
//Laya.loader.load([testAsset], Laya.Handler.create(this, () => {
//console.log('loaded')
//Laya.loader.load([testAsset], Laya.Handler.create(this, () => {
//console.log('loaded')
//}))
//}))

wx.showShareMenu();
var shareImage = '';

(0, _shareImage.getNormalShareImage)(function (img) {
  shareImage = img;
});

wx.onShareAppMessage(function () {
  return {
    title: '快来和我一起演奏音乐',
    imageUrl: shareImage
  };
});
var lastOptions = void 0;
wx.onShow(function (options) {
  lastOptions = options;
  (0, _onShow2.default)(options);
});

wx.onHide(function () {
  (0, _onHide2.default)(lastOptions);
});

/***/ }),
/* 116 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
var zero = '0'.charCodeAt();
var a = 'a'.charCodeAt();
var A = 'A'.charCodeAt();

var getNumber = function getNumber(c) {
  var code = c.charCodeAt();
  if (code >= zero && code < A) {
    return code - zero;
  }
  if (code >= A && code < a) {
    return code - A + 10;
  }
  return code - a + 10;
};
var alphaColor = function alphaColor(hex, a) {
  var r = getNumber(hex[1]) * 16 + getNumber(hex[2]);
  var g = getNumber(hex[3]) * 16 + getNumber(hex[4]);
  var b = getNumber(hex[5]) * 16 + getNumber(hex[6]);
  return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')';
};

exports.default = alphaColor;

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = __webpack_require__(1);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ani = function ani(wording, text, tail) {
  if (tail === 7) {
    tail = 0;
  }
  if (wording) {
    wording.text = text;
    for (var i = 0; i < tail; i++) {
      wording.text = wording.text + '.';
    }
    setTimeout(function () {
      ani(wording, text, tail + 1);
    }, 500);
  }
};

var createWording = function createWording(text, needBg) {
  var bg = new Laya.Sprite();
  if (needBg) {
    bg.graphics.drawRect(0, 0, _config2.default.SCREEN_WIDTH, _config2.default.SCREEN_HEIGHT, 'rgba(0, 0, 0, 0.5)');
  }
  bg.zOrder = 288;
  Laya.stage.addChild(bg);

  var wording = (0, _utils.createTextSprite)(bg, _config2.default.LoadingAnimation.WORDING);
  wording.text = text;
  setTimeout(function () {
    ani(wording, text, 1);
  }, 500);
  return bg;
};

exports.default = createWording;

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _panelManager = __webpack_require__(3);

var _panelManager2 = _interopRequireDefault(_panelManager);

var _settingPanel = __webpack_require__(33);

var _settingPanel2 = _interopRequireDefault(_settingPanel);

var _loadingAnimation = __webpack_require__(16);

var _loadingAnimation2 = _interopRequireDefault(_loadingAnimation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var inBackground = function inBackground() {
  return !_panelManager2.default.empty() && _panelManager2.default._currentPanel !== _settingPanel2.default && !_loadingAnimation2.default.loading;
};

exports.default = inBackground;

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _rect = __webpack_require__(37);

var _rect2 = _interopRequireDefault(_rect);

var _point = __webpack_require__(17);

var _point2 = _interopRequireDefault(_point);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Circle = function () {
  function Circle() {
    _classCallCheck(this, Circle);

    if (arguments.length === 1) {
      this.p = arguments[0].p.clone;
      this.r = arguments[0].r;
    } else if (arguments.length === 2) {
      this.p = arguments[0];
      this.r = arguments[1];
    } else if (arguments.length === 3) {
      this.p = new _point2.default(arguments[0], arguments[1]);
      this.r = arguments[2];
    } else {
      console.error('wrong arguments in Circle');
    }
  }

  _createClass(Circle, [{
    key: 'contain',
    value: function contain(p) {
      return this.p.distance(p) < this.r;
    }
  }, {
    key: 'move',
    value: function move(vec) {
      this.p.SELF_ADD(vec);
      return this;
    }

    // 0 shape 包含 this
    // 1 相交
    // 2 this 包含 shape
    // 3 无关

  }, {
    key: 'intersection',
    value: function intersection(shape) {
      if (shape.constructor.name === 'Circle') {
        var dis = shape.p.distance(this.p);
        if (dis < shape.r - this.r) {
          return 0;
        }
        if (dis < this.r - shape.r) {
          return 2;
        }
        if (dis > this.r + shape.r) {
          return 3;
        }
        return 1;
      } else {
        var ret = shape.intersection(this);
        if (ret === 0) {
          ret = 2;
        } else if (ret === 2) {
          ret = 0;
        }
        return ret;
      }
    }
  }, {
    key: 'args',
    get: function get() {
      return [this.p.x, this.p.y, this.r];
    }
  }]);

  return Circle;
}();

exports.default = Circle;

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _point = __webpack_require__(17);

var _point2 = _interopRequireDefault(_point);

var _line = __webpack_require__(36);

var _line2 = _interopRequireDefault(_line);

var _rect = __webpack_require__(37);

var _rect2 = _interopRequireDefault(_rect);

var _circle = __webpack_require__(119);

var _circle2 = _interopRequireDefault(_circle);

var _polygon = __webpack_require__(121);

var _polygon2 = _interopRequireDefault(_polygon);

var _common = __webpack_require__(28);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  EPS: _common.EPS,
  eql: _common.eql,
  dcmp: _common.dcmp,
  Point: _point2.default,
  Line: _line2.default,
  Rect: _rect2.default,
  Circle: _circle2.default,
  Polygon: _polygon2.default
};

/***/ }),
/* 121 */
/***/ (function(module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var getMaxMin = function getMaxMin(points, axis) {
  var min = points[0].DOT(axis);
  var max = min;
  for (var i = 1; i < points.length; ++i) {
    var val = points[i].DOT(axis);
    if (val > max) {
      max = val;
    }
    if (val < min) {
      min = val;
    }
  }
  return { max: max, min: min };
};

var Polygon = function () {
  function Polygon(points) {
    _classCallCheck(this, Polygon);

    this._points = points;
    var minx = this._points[0].x;
    var maxx = minx;
    var miny = this._points[0].y;
    var maxy = miny;
    this._axis = [this._points[0].SUB(this._points[this._points.length - 1])];
    for (var i = 1; i < this._points.length; ++i) {
      this._axis.push(this._points[i].SUB(this._points[i - 1]));
      if (this._points[i].x > maxx) {
        maxx = this._points[i].x;
      }
      if (this._points[i].x < minx) {
        minx = this._points[i].x;
      }
      if (this._points[i].y > maxy) {
        maxy = this._points[i].y;
      }
      if (this._points[i].y < miny) {
        miny = this._points[i].y;
      }
    }
    this._x = minx;
    this._y = miny;
    this._w = maxx - minx;
    this._h = maxy - miny;
  }

  //0: 不相交; 1: 相交


  _createClass(Polygon, [{
    key: "intersectionWithCircle",
    value: function intersectionWithCircle(circle) {
      for (var i = 0; i < this._points.length; ++i) {
        var a = this._points[i];
        var b = this._points[(i + 1) % this._points.length];

        var vec1 = b.SUB(a);
        var vec2 = a.SUB(circle.p);

        var quadraticParamA = b.distance2(a);
        var quadraticParamB = 2 * vec1.DOT(vec2);
        var quadraticParamC = a.distance2(circle.p) - circle.r * circle.r;

        var delta = quadraticParamB * quadraticParamB - 4 * quadraticParamA * quadraticParamC;
        if (delta < 0) {
          continue;
        }

        var sqrt_delta = Math.sqrt(delta);

        var solution1 = (-quadraticParamB + sqrt_delta) / (2 * quadraticParamA);
        var solution2 = (-quadraticParamB - sqrt_delta) / (2 * quadraticParamA);

        if (solution1 >= 0 && solution1 <= 1 || solution2 >= 0 && solution2 <= 1) return 1;
      }

      return 0;
    }
  }, {
    key: "intersection",
    value: function intersection(poly) {
      var points = poly.points;
      for (var i = 0; i < this._axis.length; ++i) {
        var _getMaxMin = getMaxMin(this._points, this._axis[i]),
            max1 = _getMaxMin.max,
            min1 = _getMaxMin.min;

        var _getMaxMin2 = getMaxMin(points, this._axis[i]),
            max2 = _getMaxMin2.max,
            min2 = _getMaxMin2.min;

        if (max1 < min2 || max2 < min1) {
          return false;
        }
      }
      var axis = poly.axis;
      for (var _i = 0; _i < axis.length; ++_i) {
        var _getMaxMin3 = getMaxMin(this._points, axis[_i]),
            max1 = _getMaxMin3.max,
            min1 = _getMaxMin3.min;

        var _getMaxMin4 = getMaxMin(points, axis[_i]),
            max2 = _getMaxMin4.max,
            min2 = _getMaxMin4.min;

        if (max1 < min2 || max2 < min1) {
          return false;
        }
      }
      return true;
    }
  }, {
    key: "points",
    get: function get() {
      return this._points;
    }
  }, {
    key: "axis",
    get: function get() {
      return this._axis;
    }
  }, {
    key: "x",
    get: function get() {
      return this._x;
    }
  }, {
    key: "y",
    get: function get() {
      return this._y;
    }
  }, {
    key: "width",
    get: function get() {
      return this._w;
    }
  }, {
    key: "height",
    get: function get() {
      return this._h;
    }
  }]);

  return Polygon;
}();

exports.default = Polygon;

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coinCmd = function coinCmd(idx, type) {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] coin cmd', idx);
  this.uploadCmd({
    cmd: type === 'perfect' ? _config2.default.SYNC_CMD.PERFECT_COIN : _config2.default.SYNC_CMD.GOOD_COIN,
    idx: idx
  });
};

exports.default = coinCmd;

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var connected = false;

var connectSocket = function connectSocket(cb) {
  var _this = this;

  if (connected) {
    cb && cb();
    return;
  }
  console.log('[Socket] connect socket');

  wx.connectSocket({
    url: _config2.default.URL.SOCKET
  });

  var heartbeat = void 0;
  var idel = void 0;

  wx.onSocketOpen(function (res) {
    console.log('[Socket] webSocket open', res);
    heartbeat = setInterval(_this.heartbeat, _config2.default.HEARTBEAT_INTERVAL);
    var that = _this;
    idel = setInterval(function () {
      if (that._lastCmdTime + _config2.default.IDEL_INTERVAL < Date.now()) {
        that.idelCmd();
      }
    }, 10000);

    connected = true;
    cb && cb();
  });

  var retry = function retry() {
    clearInterval(heartbeat);
    clearInterval(idel);
    setTimeout(function () {
      wx.connectSocket({
        url: _config2.default.URL.SOCKET
      });
    }, _config2.default.NETWORK_RETRY_INTERVAL);
  };

  wx.onSocketError(function (res) {
    connected = false;
    console.error('[Socket] WebSocket connect error:', res);
    retry();
  });

  wx.onSocketClose(function (res) {
    connected = false;
    console.error('[Socket] WebSocket connect close:', res);
    retry();
  });

  wx.onSocketMessage(this.onSocket);
};

exports.default = connectSocket;

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var createGame = function createGame(cb, failCb) {
  var _this = this;

  wx.request({
    url: _config2.default.URL.CREATE_GAME,
    method: 'POST',
    data: _session2.default.baseReq,
    success: function success(res) {
      _this._gameId = res.data.game_id;
      _this._ticket = res.data.up_op_ticket;
      cb(res.data.game_id, res.data.up_op_ticket);
    },
    fail: function fail(res) {
      console.error('[Network] create game failed', res);
      failCb && failCb();
    }
  });
};

exports.default = createGame;

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var downCmd = function downCmd() {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  console.log('[living] down cmd');
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.DOWN
  });
};

exports.default = downCmd;

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var endCmd = function endCmd(info) {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] end cmd', info);
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.END,
    info: info
  });
};

exports.default = endCmd;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

var _storage = __webpack_require__(18);

var _storage2 = _interopRequireDefault(_storage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getFriendsScore = function getFriendsScore(id, cb) {
  var _this = this;

  if (!_session2.default.sessionId) {
    console.log('getFriendsScore abort for no sessionId');
    return;
  }

  var obj = _session2.default.baseReq;
  obj.stage_id = id;

  wx.request({
    url: _config2.default.URL.GET_FRIENDS_SCORE,
    method: 'POST',
    data: obj,
    success: function success(res) {
      if (res.statusCode !== 200 || res.data.base_resp.errcode !== 0) {
        console.log('getfriendsscore not ok', res);
        return;
      }

      if (!res.data.my_user_info) {
        res.data.my_user_info = {
          nickname: _this._userInfo.nickName,
          headimg: _this._userInfo.avatarUrl.replace('http', 'https'),
          score_info: [{
            type: 0,
            score: 0
          }, {
            type: 1,
            score: 0
          }]
        };
      } else {
        res.data.my_user_info.headimg = res.data.my_user_info.headimg.replace('http', 'https');
      }

      if (res.data.my_user_info.headimg[0] === '/') {
        res.data.my_user_info.headimg = _config2.default.UI_RES.DEFAULT_AVATAR;
      }

      res.data.user_info.forEach(function (user) {
        if (user.headimg[0] === '/') {
          user.headimg = _config2.default.UI_RES.DEFAULT_AVATAR;
        } else {
          user.headimg = user.headimg.replace('http', 'https');
        }
      });

      console.log('getfriendscore ok id', id, res.data);
      _storage2.default.storeFriendsScore(res.data, id);

      if (typeof cb === 'function') {
        cb(res.data);
      }
    },
    fail: function fail(err) {
      console.log('getfriendsscore fail', err);
    }
  });
};

exports.default = getFriendsScore;

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _song3 = __webpack_require__(59);

var _song4 = _interopRequireDefault(_song3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var outputList = function outputList(music) {
  var str = '';
  str += '[{\n';
  for (var i = 0; i < music.length; i++) {
    if (i) {
      str += '}, {\n';
    }
    var m = music[i];
    str += '  "title": "' + m.title + '",\n';
    str += '  "singer_name": "' + m.singer_name + '",\n';
    str += '  "difficulty": ' + m.difficulty + ',\n';
    str += '  "music_id": "' + m.music_id + '",\n';
  }
  str += '}]\n';
  console.log(str);
};

var _requestMusicList = function requestMusicList(cb, version) {
  var _this = this;

  if (!_session2.default.sessionId) {
    console.error('[Network] requestMusicList abort for no sessionId', ++this._loginRetryTime);
    this.login(function () {
      _requestMusicList(cb, version);
      _this.getMusicList(cb);
    });
    return;
  }

  var retry = function retry() {
    setTimeout(function () {
      _requestMusicList(cb, version);
    }, 5000);
  };

  wx.request({
    url: _config2.default.URL.GET_MUSIC_LIST,
    method: 'POST',
    data: _session2.default.baseReq,
    success: function success(res) {
      if (res.statusCode !== 200 || res.data.base_resp.errcode !== 0) {
        console.error('[Network] getmusiclist not ok', res);
        retry();
        return;
      }

      // Song.initSongSet(res.data.music)

      // if (version === undefined || version !== res.data.version) {
      //   console.log('[Network] update music list', res.data)
      //   wx.setStorage({
      //     key: config.STORAGE_KEY.MUSIC_LIST,
      //     data: res.data
      //   })

      //   //outputList(res.data.music)
      // }

      cb && cb(res.data.music);
    },
    fail: function fail(err) {
      console.error('[Network] getmusiclist fail, trying', err);
      retry();
    }
  });
};

var getMusicList = function getMusicList(cb) {
  _requestMusicList = _requestMusicList.bind(this);

  wx.getStorage({
    key: _config2.default.STORAGE_KEY.MUSIC_LIST,
    success: function success(res) {
      console.log('[Network] get music list from storage', res.data);

      var dataSource = 'storage';
      cb && cb(res.data.music, dataSource);
      // check list version
      _requestMusicList(cb, res.data.version);
    },
    fail: function fail(res) {
      console.log('[Network] first getMusicList', res);
      //if (res.errMsg.indexOf('not found') !== -1) {
      //console.log('[Network] use local list', SongConfig.music)
      //Song.initSongSet(SongConfig.music)
      //cb && cb()
      //requestMusicList(() => {}, SongConfig.version)
      //} else {
      _requestMusicList(cb);
      //}
    }
  });
};

exports.default = getMusicList;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _song = __webpack_require__(4);

var _song2 = _interopRequireDefault(_song);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var requestMusicMeta = function requestMusicMeta(id, cb, version) {
  var _this = this;

  if (!_session2.default.sessionId) {
    console.log('[Network] requestMusicMeta abort for no sessionId');
    setTimeout(function () {
      _this.login(function () {
        _this.getMusicMeta(id, cb);
      });
    }, _config2.default.LOGIN_RETRY_INTERVAL);
    return;
  }

  var obj = {
    base_req: {
      session_id: _session2.default.sessionId,
      openid: _session2.default.openid
    },
    music_id: id
  };

  wx.request({
    url: _config2.default.URL.GET_MUSIC_META,
    method: 'POST',
    data: obj,
    success: function success(res) {
      if (res.statusCode !== 200 || res.data.base_resp.errcode !== 0) {
        console.log('[Network] getmusicmeta not ok', res);
        return;
      }

      _song2.default.songSet[id].midi = JSON.parse(res.data.meta_file_data);

      if (version === undefined || version != res.data.version) {
        console.log('[Network] update music meta', res.data);
        wx.setStorage({
          key: _config2.default.STORAGE_KEY.MUSIC_META_PREFIX + id,
          data: res.data
        });
      }

      cb && cb(_song2.default.songSet[id].midi);
    },
    fail: function fail(res) {
      console.error('[Network] getmusicmeta fail', res);
    }
  });
};

var getMusicMeta = function getMusicMeta(id, cb) {
  requestMusicMeta = requestMusicMeta.bind(this);

  wx.getStorage({
    key: _config2.default.STORAGE_KEY.MUSIC_META_PREFIX + id,
    success: function success(res) {
      console.log('[Network] get music meta ' + id + ' from storage', res.data);
      _song2.default.songSet[id].midi = JSON.parse(res.data.meta_file_data);
      cb && cb(res.data.meta_file_data);
      requestMusicMeta(id, function () {}, res.data.version);
    },
    fail: function fail(res) {
      console.log('[Network] first get music meta ' + id, res);
      requestMusicMeta(id, cb);
    }
  });
};

exports.default = getMusicMeta;

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var failEvent = function failEvent() {
  _utils.emitter.emit(_config2.default.NETWORK_EVENT.GET_USER_INFO_FAIL);
};

var requestUserInfo = function requestUserInfo(cb) {
  var _this = this;

  if (!_utils.Session.sessionId) {
    console.error('[Network] requestUserInfo abort for no sessionId', ++this._loginRetryTime);
    setTimeout(function () {
      _this.login(function () {
        _this.getUserInfo(cb);
      });
    }, _config2.default.LOGIN_RETRY_INTERVAL);
    return;
  }

  wx.request({
    url: _config2.default.URL.GET_USER_INFO,
    method: 'POST',
    data: _utils.Session.baseReq,
    success: function success(res) {
      if (res.statusCode !== 200 || res.data.base_resp.errcode !== 0) {
        console.error('[Network] getUserInfo not ok', res);
        return;
      }
      if (res.data.headimg[0] === '/') {
        res.data.headimg = _config2.default.UI_RES.DEFAULT_AVATAR;
      }
      console.log('[Network] request userInfo', res.data);
      _this._userInfo.avatarUrl = res.data.headimg.replace('http', 'https');
      _this._userInfo.nickName = res.data.nickname;
      _this._userInfo.createTime = Date.now();
      wx.setStorage({
        key: _config2.default.STORAGE_KEY.USER_INFO,
        data: _this._userInfo
      });
      cb && cb();
    },
    fail: function fail(res) {
      console.error('[Network] request user info fail', res);
      failEvent();
    }
  });
};

var getUserInfo = function getUserInfo(cb) {
  var _this2 = this;

  requestUserInfo = requestUserInfo.bind(this);

  wx.getStorage({
    key: _config2.default.STORAGE_KEY.USER_INFO,
    success: function success(res) {
      if (_this2._userInfo.createTime + _config2.default.USER_INFO_OUT_OF_DATE_TIME < Date.now()) {
        requestUserInfo(cb);
      } else {
        console.log('[Network] get userInfo from storage', res.data);
        _this2._userInfo = res.data;
        cb && cb();
      }
    },
    fail: function fail(res) {
      console.log('[Network] first getUserInfo', res);
      requestUserInfo(cb);
    }
  });
};

exports.default = getUserInfo;

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var globalSettlement = function globalSettlement(totalStar) {
  if (!_session2.default.sessionId) {
    console.log('[Network] request globalSettlement abort for no sessionId');
    return;
  }

  var obj = {
    base_req: {
      session_id: _session2.default.sessionId,
      openid: _session2.default.openid
    },
    score_info: [{ type: 3, score: totalStar }]
  };

  wx.request({
    url: _config2.default.URL.SETTLEMENT,
    method: 'POST',
    data: obj,
    success: function success(res) {
      console.log('[Network] request globalSettlement success', res, obj);
    },
    fail: function fail(res) {
      console.log('[Network] request globalSettlement fail', res, obj);
    }
  });
};

exports.default = globalSettlement;

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _helper = __webpack_require__(12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var heartbeat = function heartbeat() {
  (0, _helper.sendSocket)({
    cmd: _config2.default.SOCKET_CMD.HEARTBEAT
  });
};

exports.default = heartbeat;

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var idelCmd = function idelCmd() {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] idel cmd');
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.IDEL
  });
};

exports.default = idelCmd;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createGame = __webpack_require__(124);

var _createGame2 = _interopRequireDefault(_createGame);

var _getFriendsScore = __webpack_require__(127);

var _getFriendsScore2 = _interopRequireDefault(_getFriendsScore);

var _getMusicList = __webpack_require__(128);

var _getMusicList2 = _interopRequireDefault(_getMusicList);

var _getMusicMeta = __webpack_require__(129);

var _getMusicMeta2 = _interopRequireDefault(_getMusicMeta);

var _login = __webpack_require__(136);

var _login2 = _interopRequireDefault(_login);

var _getUserInfo = __webpack_require__(130);

var _getUserInfo2 = _interopRequireDefault(_getUserInfo);

var _settlement = __webpack_require__(143);

var _settlement2 = _interopRequireDefault(_settlement);

var _globalSettlement = __webpack_require__(131);

var _globalSettlement2 = _interopRequireDefault(_globalSettlement);

var _quitGame = __webpack_require__(140);

var _quitGame2 = _interopRequireDefault(_quitGame);

var _syncCmd = __webpack_require__(145);

var _syncCmd2 = _interopRequireDefault(_syncCmd);

var _connectSocket = __webpack_require__(123);

var _connectSocket2 = _interopRequireDefault(_connectSocket);

var _onSocket = __webpack_require__(139);

var _onSocket2 = _interopRequireDefault(_onSocket);

var _heartbeat = __webpack_require__(132);

var _heartbeat2 = _interopRequireDefault(_heartbeat);

var _joinGame = __webpack_require__(135);

var _joinGame2 = _interopRequireDefault(_joinGame);

var _witnessQuit = __webpack_require__(148);

var _witnessQuit2 = _interopRequireDefault(_witnessQuit);

var _uploadCmd = __webpack_require__(147);

var _uploadCmd2 = _interopRequireDefault(_uploadCmd);

var _reUploadCmd = __webpack_require__(141);

var _reUploadCmd2 = _interopRequireDefault(_reUploadCmd);

var _readyCmd = __webpack_require__(142);

var _readyCmd2 = _interopRequireDefault(_readyCmd);

var _startCmd = __webpack_require__(144);

var _startCmd2 = _interopRequireDefault(_startCmd);

var _upCmd = __webpack_require__(146);

var _upCmd2 = _interopRequireDefault(_upCmd);

var _downCmd = __webpack_require__(125);

var _downCmd2 = _interopRequireDefault(_downCmd);

var _coinCmd = __webpack_require__(122);

var _coinCmd2 = _interopRequireDefault(_coinCmd);

var _obsCmd = __webpack_require__(138);

var _obsCmd2 = _interopRequireDefault(_obsCmd);

var _missCoinCmd = __webpack_require__(137);

var _missCoinCmd2 = _interopRequireDefault(_missCoinCmd);

var _endCmd = __webpack_require__(126);

var _endCmd2 = _interopRequireDefault(_endCmd);

var _idelCmd = __webpack_require__(133);

var _idelCmd2 = _interopRequireDefault(_idelCmd);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  login: _login2.default,
  getUserInfo: _getUserInfo2.default,

  createGame: _createGame2.default,
  getFriendsScore: _getFriendsScore2.default,
  getMusicList: _getMusicList2.default,
  getMusicMeta: _getMusicMeta2.default,
  settlement: _settlement2.default,
  globalSettlement: _globalSettlement2.default,
  quitGame: _quitGame2.default,
  syncCmd: _syncCmd2.default,

  connectSocket: _connectSocket2.default,
  onSocket: _onSocket2.default,
  heartbeat: _heartbeat2.default,
  joinGame: _joinGame2.default,
  witnessQuit: _witnessQuit2.default,
  uploadCmd: _uploadCmd2.default,
  reUploadCmd: _reUploadCmd2.default,
  startCmd: _startCmd2.default,
  readyCmd: _readyCmd2.default,
  upCmd: _upCmd2.default,
  downCmd: _downCmd2.default,
  coinCmd: _coinCmd2.default,
  missCoinCmd: _missCoinCmd2.default,
  obsCmd: _obsCmd2.default,
  endCmd: _endCmd2.default,
  idelCmd: _idelCmd2.default
};

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _helper = __webpack_require__(12);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var joinGame = function joinGame(gameId) {
  var req = _session2.default.baseReq.base_req;
  req.cmd = _config2.default.SOCKET_CMD.JOIN_GAME;
  req.game_id = gameId;
  console.log('[Live] joining game', req);

  (0, _helper.sendSocket)(req);

  this._frameId = 0;
  this._needConfirmCmd = {};
};

exports.default = joinGame;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(19);

var _config2 = _interopRequireDefault(_config);

var _config3 = __webpack_require__(0);

var _config4 = _interopRequireDefault(_config3);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _requestLogin = function requestLogin(cb) {
  var failEvent = function failEvent() {
    setTimeout(function () {
      _requestLogin(cb);
    }, console.LOGIN_RETRY_INTERVAL);
  };

  wx.login({
    success: function success(res) {
      wx.request({
        url: _config4.default.URL.LOGIN(res.code, _config2.default.APPID),
        method: 'POST',
        success: function success(res) {
          if (res.statusCode !== 200 || !res.data.openid) {
            console.error('[Network] login response not ok', res);
            failEvent();
            return;
          }

          console.log('[Network] request session', res.data);
          _utils.Session.setLoginState(res.data.openid, res.data.session_id);
          cb && cb();

          res.data.createTime = Date.now();
          wx.setStorage({
            key: _config4.default.STORAGE_KEY.SESSION,
            data: res.data
          });
        },
        fail: function fail(res) {
          console.error('[Network] request login fail', res);
          failEvent();
        }
      });
    },
    fail: function fail(res) {
      console.error('[Network] wx.login fail', res);
      failEvent();
    }
  });
};

var login = function login(cb) {
  _requestLogin = _requestLogin.bind(this);
  wx.getStorage({
    key: _config4.default.STORAGE_KEY.SESSION,
    success: function success(res) {
      if (res.data.createTime + _config4.default.SESSION_OUT_OF_DATE_TIME < Date.now()) {
        console.log('[Network] session out of date');
        _requestLogin(cb);
      } else {
        console.log('[Network] get session from storage', res.data);
        _utils.Session.setLoginState(res.data.openid, res.data.session_id);
        cb && cb();
      }
    },
    fail: function fail(res) {
      console.log('[Network] first login', res);
      _requestLogin(cb);
    }
  });
};

exports.default = login;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var missCoinCmd = function missCoinCmd(idx) {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] miss coin cmd', idx);
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.MISS_COIN,
    idx: idx
  });
};

exports.default = missCoinCmd;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var obsCmd = function obsCmd(idx) {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] obs cmd', idx);
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.OBS,
    idx: idx
  });
};

exports.default = obsCmd;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var confirmCmd = function confirmCmd(frameId) {
  if (this._needConfirmCmd.hasOwnProperty(frameId)) {
    delete this._needConfirmCmd[frameId];
  }
};

var syncAudience = function syncAudience(res) {
  console.log('[living] sync audience', res);
  this.sendEvent(_config2.default.NETWORK_EVENT.WITNESS_JOIN, res);
};

var joinGame = function joinGame(state) {
  console.log('[living] join game state', state);
  if (state) {
    this.sendEvent(_config2.default.NETWORK_EVENT.JOIN_ERROR);
  }
};

var receiveCmd = function receiveCmd(res) {
  this.sendEvent(_config2.default.NETWORK_EVENT.SYNC_CMD, res);
};

var quit = function quit(gameId) {
  console.log('quit game', gameId);
  this.sendEvent(_config2.default.NETWORK_EVENT.JOIN_ERROR);
};

var onSocket = function onSocket(res) {
  console.log(res);
  res = JSON.parse(res.data);
  switch (res.cmd) {
    case _config2.default.SOCKET_CMD.JOIN_GAME:
      joinGame.call(this, res.ret);
      break;
    case _config2.default.SOCKET_CMD.RECEIVE_CMD:
      receiveCmd.call(this, res);
      break;
    case _config2.default.SOCKET_CMD.HEARTBEAT:
      console.log('heartbeat');
      break;
    case _config2.default.SOCKET_CMD.CONFIRM_CMD:
      confirmCmd.call(this, res.a);
      break;
    case _config2.default.SOCKET_CMD.SYNC_AUDIENCE:
      syncAudience.call(this, res);
      break;
    case _config2.default.SOCKET_CMD.QUIT:
      quit.call(this, res.i);
      break;
    default:
      console.log('[living unknown cmd], ', res.cmd);
      break;
  }
};

exports.default = onSocket;

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var quitGame = function quitGame() {
  if (!_live2.default.living) {
    return;
  }
  console.log('[live] quit game');
  wx.request({
    url: _config2.default.URL.QUIT_GAME,
    method: 'POST',
    data: {
      base_req: _session2.default.baseReq,
      game_id: this._gameId
    },
    complete: function complete(e) {
      console.log('quite game result:', e);
    }
  });
};

exports.default = quitGame;

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _helper = __webpack_require__(12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reUploadCmd = function reUploadCmd(frameId) {
  var _this = this;

  (0, _helper.sendSocket)(this._needConfirmCmd[frameId]);

  setTimeout(function (frameId) {
    if (_this._needConfirmCmd.hasOwnProperty(frameId)) {
      _this.reUploadCmd(frameId);
    }
  }, _config2.default.UPLOAD_CONFIRM_TIME);
};

exports.default = reUploadCmd;

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var readyCmd = function readyCmd() {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  var seed = (0, _utils.setSeedStr)(this._ticket);
  this._debug && console.log('[living] ready cmd', seed);
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.READY,
    seed: seed
  });
};

exports.default = readyCmd;

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var settlement = function settlement(song_id, score, starScore) {
  if (!_session2.default.sessionId) {
    console.log('[Network] requestSettlement abort for no sessionId');
    return;
  }

  var obj = {
    base_req: {
      session_id: _session2.default.sessionId,
      openid: _session2.default.openid
    },
    score_info: [{ type: 0, score: score }, { type: 1, score: starScore }],
    stage_id: song_id
  };

  wx.request({
    url: _config2.default.URL.SETTLEMENT,
    method: 'POST',
    data: obj,
    success: function success(res) {
      console.log('[Network] request settlement success', res, song_id, obj);
    },
    fail: function fail(res) {
      console.log('[Network] request settlement fail', res, obj);
    }
  });
};

exports.default = settlement;

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var startCmd = function startCmd() {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  this._debug && console.log('[living] start cmd', Date.now());
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.START
  });
};

exports.default = startCmd;

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var syncCmd = function syncCmd(gameId) {
  var _this = this;

  var req = _session2.default.baseReq;
  req.game_id = gameId;
  req.seq = 0;
  req.count = 10000;
  console.log(JSON.stringify(req));
  wx.request({
    url: _config2.default.URL.SYNC_CMD,
    method: 'POST',
    data: req,
    success: function success(res) {
      if (res.data.base_resp.errcode) {
        console.log('[live] sync cmd failed', res.data.base_resp);
      } else {
        console.log('[live] sync cmd success', res.data);
      }
      _this.sendEvent(_config2.default.NETWORK_EVENT.SYNC_CMDS, res.data);
    }
  });
};

exports.default = syncCmd;

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _live = __webpack_require__(5);

var _live2 = _interopRequireDefault(_live);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var upCmd = function upCmd() {
  if (!_live2.default.living || !_live2.default.playing) {
    return;
  }
  console.log('[living] up cmd');
  this.uploadCmd({
    cmd: _config2.default.SYNC_CMD.UP
  });
};

exports.default = upCmd;

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _helper = __webpack_require__(12);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var uploadCmd = function uploadCmd(cmd) {
  var _this = this;

  cmd.time = Date.now();
  var data = {
    cmd: _config2.default.SOCKET_CMD.UPLOAD_CMD,
    i: this._gameId,
    n: this._frameId,
    o: [JSON.stringify(cmd)],
    k: this._ticket
  };
  this._needConfirmCmd[this._frameId] = data;
  this._lastCmdTime = Date.now();

  (0, _helper.sendSocket)(data);

  var checkCmd = function checkCmd(frameId) {
    if (_this._needConfirmCmd.hasOwnProperty(frameId)) {
      _this.reUploadCmd(frameId);
    }
  };

  checkCmd = checkCmd.bind(this, this._frameId);

  setTimeout(checkCmd, _config2.default.UPLOAD_CONFIRM_TIME);
  ++this._frameId;
};

exports.default = uploadCmd;

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _helper = __webpack_require__(12);

var _session = __webpack_require__(6);

var _session2 = _interopRequireDefault(_session);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var witnessQuit = function witnessQuit(gameId) {
  var req = _session2.default.baseReq.base_req;
  req.cmd = _config2.default.SOCKET_CMD.WITNESS_QUIT;
  req.game_id = gameId;
  console.log('[Live] witness quit', req);

  (0, _helper.sendSocket)(req);
};

exports.default = witnessQuit;

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Score = function () {
  function Score() {
    _classCallCheck(this, Score);
  }

  _createClass(Score, null, [{
    key: 'setNetworkScore',


    // data from getFriendsScore
    value: function setNetworkScore(id, data) {
      // if (!this._myScores) {
      //   this._myScores = wx.getStorageSync(config.STORAGE_KEY.MY_SCORES)
      // }
      // if (!this._friendsScores[id]) {
      //   this._friendsScores[id] = wx.getStorageSync(config.STORAGE_KEY.FRIENDS_SCORE_PREIDX + id)
      // }

      wx.setStorageSync(_config2.default.STORAGE_KEY.FRIENDS_SCORE_PREIDX + id, data);
      this._friendsScores[id] = data;

      // TODO set network data to storage
    }

    // when broken my record

  }, {
    key: 'setMyScore',
    value: function setMyScore(id, score) {
      // if (!this._myScores) {
      //   this._myScores = wx.getStorageSync(config.STORAGE_KEY.MY_SCORES)
      // }

      console.log('set my score with id', id, 'and score', score);

      var scoreObj = this._myScores[id];

      var beforeStars = this.get1(scoreObj[1].score),
          currentStars = this.get1(score[1].score);
      // get more star than before
      if (currentStars > beforeStars) {
        this._totalStars += currentStars - beforeStars;
      }

      this._myScores[id] = score;

      wx.setStorageSync(_config2.default.STORAGE_KEY.MY_SCORES, this._myScores);
    }

    // the data from getMusicList

  }, {
    key: 'setMyScores',
    value: function setMyScores(data) {
      console.log('set my scores!');
      // if (!this._myScores) {
      //   this._myScores = wx.getStorageSync(config.STORAGE_KEY.MY_SCORES)
      // }
      this._myScores = data;
      this._calcStars();
      wx.setStorageSync(_config2.default.STORAGE_KEY.MY_SCORES, this._myScores);
      // TODO set network data to storage
    }

    // select panel use, to display the stars and socres

  }, {
    key: 'getMyScores',
    value: function getMyScores() {
      if (!this._myScores) {
        this._myScores = wx.getStorageSync(_config2.default.STORAGE_KEY.MY_SCORES);
      }

      return this._myScores;
    }
  }, {
    key: 'firstOpen',
    value: function firstOpen() {
      if (!this._myScores) {
        this._myScores = wx.getStorageSync(_config2.default.STORAGE_KEY.MY_SCORES);
      }

      for (var i in this._myScores) {
        var scores = this._myScores[i];
        if (Object.prototype.toString.call(scores) === '[object Array]') {
          for (var j = 0; j < scores.length; j++) {
            if (scores[j].score) {
              return false;
            }
          }
        }
        if (Object.prototype.toString.call(scores) === '[object Object]') {
          for (var _j in scores) {
            if (scores[_j].score) {
              return false;
            }
          }
        }
      }
      return true;
    }

    // end panel use

  }, {
    key: 'getMyScore',
    value: function getMyScore(id) {
      if (!this._myScores) {
        this._myScores = wx.getStorageSync(_config2.default.STORAGE_KEY.MY_SCORES);
      }

      return this.deepCopy(this._myScores[id]);
    }

    // end panel use

  }, {
    key: 'getFriendsScore',
    value: function getFriendsScore(id) {
      if (!this._friendsScores[id]) {
        this._friendsScores[id] = wx.getStorageSync(_config2.default.STORAGE_KEY.FRIENDS_SCORE_PREIDX + id);
      }
      return this._friendsScores[id];
    }
  }, {
    key: '_calcStars',
    value: function _calcStars() {
      var scores = this._myScores;
      var totalStars = 0;
      for (var k in scores) {
        // count bits of 1
        totalStars += this.get1(scores[k][1].score);
      }

      this._totalStars = totalStars;
    }
  }, {
    key: 'get1',
    value: function get1(number) {
      return number.toString(2).split('').reduce(function (result, cur) {
        return result + (Number(cur) ? 1 : 0);
      }, 0);
    }
  }, {
    key: 'deepCopy',
    value: function deepCopy(obj) {
      var newObj = {};

      for (var k in obj) {
        if (_typeof(obj[k]) === 'object') {
          newObj[k] = this.deepCopy(obj[k]);
        } else {
          newObj[k] = obj[k];
        }
      }

      return newObj;
    }
  }, {
    key: 'stars',
    get: function get() {
      if (!this._totalStars) {
        if (!this._myScores) {
          this.getMyScores();
        }

        this._calcStars();
      }

      return this._totalStars;
    }
  }]);

  return Score;
}();

Score._myScores = undefined;
Score._friendsScores = {};
exports.default = Score;

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createTextSprite = exports.getScaleRadius = exports.getScaleHeight = exports.getScaleWidth = exports.getScaleArgs = exports.drawRoundedRect = undefined;
exports.generateRing = generateRing;

var _config = __webpack_require__(0);

var _config2 = _interopRequireDefault(_config);

var _utils = __webpack_require__(1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ratio = {
  X: 1,
  Y: 1,
  RADIUS: 1
};

wx.getSystemInfo({
  success: function success(_ref) {
    var pixelRatio = _ref.pixelRatio,
        screenWidth = _ref.screenWidth,
        screenHeight = _ref.screenHeight;

    ratio.WIDTH = ratio.X = screenWidth / _config2.default.BASE_SCREEN_WIDTH;
    ratio.HEIGHT = ratio.Y = screenHeight / _config2.default.BASE_SCREEN_HEIGHT;

    // ratio.RADIUS = (ratio.WIDTH < ratio.HEIGHT) ? ratio.WIDTH : ratio.HEIGHT
    ratio.RADIUS = ratio.WIDTH;
  }
});

var drawRoundedRect = exports.drawRoundedRect = function drawRoundedRect(sp, x, y, width, height, radius, brush, pen) {
  sp.graphics.drawPath(x, y, [['moveTo', radius, 0], ['lineTo', width - radius, 0], ['arcTo', width, 0, width, radius, radius], ['lineTo', width, height - radius], ['arcTo', width, height, width - radius, height, radius], ['lineTo', radius, height], ['arcTo', 0, height, 0, height - radius, radius], ['lineTo', 0, radius], ['arcTo', 0, 0, radius, 0, radius], ['closePath']], brush, pen);
};

var textConfig = {
  font: 'Helvetica',
  width: _config2.default.SCREEN_WIDTH,
  color: '#FFFFFF',
  align: 'center',
  valign: 'middle'
};

var argKeys = ['X', 'Y', 'RADIUS', 'WIDTH', 'HEIGHT'];
// 宽度优先
var getScaleArgs = exports.getScaleArgs = function getScaleArgs(c) {
  var args = {};
  argKeys.forEach(function (key) {
    if (c[key] !== undefined) {
      args[key] = c[key] * ratio[key];
    }
  });

  return args;
};

var getScaleWidth = exports.getScaleWidth = function getScaleWidth(width) {
  return width * ratio.WIDTH;
};
var getScaleHeight = exports.getScaleHeight = function getScaleHeight(height) {
  return height * ratio.HEIGHT;
};
var getScaleRadius = exports.getScaleRadius = function getScaleRadius(height) {
  return height * ratio.RADIUS;
};

var createTextSprite = exports.createTextSprite = function createTextSprite(father) {
  var c = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var sp = new Laya.Text();
  father.addChild(sp);
  Object.assign(sp, textConfig);
  if (c.TEXT) {
    sp.text = c.TEXT;
  }
  var x = 0,
      y = 0;
  if (c.Y) {
    y = c.Y;
  }
  if (c.X) {
    x = c.X;
  }
  sp.pos(x, y);

  sp.align = 'center';
  sp.valign = 'middle';
  if (c.WIDTH) {
    sp.width = c.WIDTH;
  } else {
    sp.width = _config2.default.SCREEN_WIDTH;
  }

  if (c.HEIGHT) {
    sp.height = c.HEIGHT;
  }

  if (c.COLOR) {
    sp.color = c.COLOR;
  } else {
    sp.color = '#FFFFFF';
  }

  if (c.ALPHA) {
    if (c.COLOR) {
      sp.color = (0, _utils.alphaColor)(c.COLOR, c.ALPHA);
    } else {
      sp.color = 'rgba(255, 255, 255, ' + c.ALPHA + ')';
    }
  }
  if (c.SIZE) {
    sp.fontSize = c.SIZE;
  } else {
    sp.fontSize = 24;
  }
  return sp;
};

// export function generateRing(innerRadius, outerRadius) {
//   return [
//     ['moveTo', 0, innerRadius],
//     ['arcTo', innerRadius, innerRadius, innerRadius, 0, innerRadius],
//     ['arcTo', innerRadius, -innerRadius, 0, -innerRadius, innerRadius],
//     ['arcTo', -innerRadius, -innerRadius, -innerRadius, 0, innerRadius],
//     ['arcTo', -innerRadius, innerRadius, 0, innerRadius, innerRadius],
//     ['moveTo', 0, outerRadius],
//     ['arcTo', outerRadius, outerRadius, outerRadius, 0, outerRadius],
//     ['arcTo', outerRadius, -outerRadius, 0, -outerRadius, outerRadius],
//     ['arcTo', -outerRadius, -outerRadius, -outerRadius, 0, outerRadius],
//     ['arcTo', -outerRadius, outerRadius, 0, outerRadius, outerRadius],
//     ['closePath'],
//   ]
// }

function generateRing(innerRadius, outerRadius) {
  return [['moveTo', 0, innerRadius], ['lineTo', 0, outerRadius], ['arcTo', outerRadius, outerRadius, outerRadius, 0, outerRadius], ['lineTo', innerRadius, 0], ['arcTo', innerRadius, innerRadius, 0, innerRadius, innerRadius], ['arcTo', -innerRadius, innerRadius, -innerRadius, 0, innerRadius], ['lineTo', -outerRadius, 0], ['arcTo', -outerRadius, outerRadius, 0, outerRadius, outerRadius], ['moveTo', 0, -innerRadius], ['lineTo', 0, -outerRadius], ['arcTo', outerRadius, -outerRadius, outerRadius, 0, outerRadius], ['lineTo', innerRadius, 0], ['arcTo', innerRadius, -innerRadius, 0, -innerRadius, innerRadius], ['arcTo', -innerRadius, -innerRadius, -innerRadius, 0, innerRadius], ['lineTo', -outerRadius, 0], ['arcTo', -outerRadius, -outerRadius, 0, -outerRadius, outerRadius], ['closePath']];
}

/***/ })
/******/ ]); 
 			}); 	require("game.js");
 	